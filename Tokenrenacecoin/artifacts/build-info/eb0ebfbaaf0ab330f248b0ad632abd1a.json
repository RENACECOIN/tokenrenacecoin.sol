{
	"id": "eb0ebfbaaf0ab330f248b0ad632abd1a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"Tokenrenacecoin/tokenrenacecoin.sol": {
				"content": "/**\r\n *Submitted for verification at Etherscan.io on 2023-04-21\r\n*/\r\n\r\n/**\r\n *Submitted for verification at Etherscan.io on 2022-05-15\r\n*/\r\n\r\n/**\r\n *Submitted for verification at BscScan.com on 2022-03-07\r\n*/\r\n\r\n/**\r\n *Submitted for verification at Etherscan.io on 2021-12-11\r\n*/\r\n\r\n// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\n// File: interfaces/IOlympusAuthority.sol\r\n\r\n\r\npragma solidity =0.7.5;\r\n\r\ninterface IOlympusAuthority {\r\n    /* ========== EVENTS ========== */\r\n\r\n    event GovernorPushed(address indexed from, address indexed to, bool _effectiveImmediately);\r\n    event GuardianPushed(address indexed from, address indexed to, bool _effectiveImmediately);\r\n    event PolicyPushed(address indexed from, address indexed to, bool _effectiveImmediately);\r\n    event VaultPushed(address indexed from, address indexed to, bool _effectiveImmediately);\r\n\r\n    event GovernorPulled(address indexed from, address indexed to);\r\n    event GuardianPulled(address indexed from, address indexed to);\r\n    event PolicyPulled(address indexed from, address indexed to);\r\n    event VaultPulled(address indexed from, address indexed to);\r\n\r\n    /* ========== VIEW ========== */\r\n\r\n    function governor() external view returns (address);\r\n    function guardian() external view returns (address);\r\n    function policy() external view returns (address);\r\n    function vault() external view returns (address);\r\n}\r\n// File: types/OlympusAccessControlled.sol\r\n\r\n\r\npragma solidity >=0.7.5;\r\n\r\n\r\nabstract contract OlympusAccessControlled {\r\n\r\n    /* ========== EVENTS ========== */\r\n\r\n    event AuthorityUpdated(IOlympusAuthority indexed authority);\r\n\r\n    string UNAUTHORIZED = \"UNAUTHORIZED\"; // save gas\r\n\r\n    /* ========== STATE VARIABLES ========== */\r\n\r\n    IOlympusAuthority public authority;\r\n\r\n\r\n    /* ========== Constructor ========== */\r\n\r\n    constructor(IOlympusAuthority _authority) {\r\n        authority = _authority;\r\n        emit AuthorityUpdated(_authority);\r\n    }\r\n\r\n\r\n    /* ========== MODIFIERS ========== */\r\n\r\n    modifier onlyGovernor() {\r\n        require(msg.sender == authority.governor(), UNAUTHORIZED);\r\n        _;\r\n    }\r\n\r\n    modifier onlyGuardian() {\r\n        require(msg.sender == authority.guardian(), UNAUTHORIZED);\r\n        _;\r\n    }\r\n\r\n    modifier onlyPolicy() {\r\n        require(msg.sender == authority.policy(), UNAUTHORIZED);\r\n        _;\r\n    }\r\n\r\n    modifier onlyVault() {\r\n        require(msg.sender == authority.vault(), UNAUTHORIZED);\r\n        _;\r\n    }\r\n\r\n    /* ========== GOV ONLY ========== */\r\n\r\n    function setAuthority(IOlympusAuthority _newAuthority) external onlyGovernor {\r\n        authority = _newAuthority;\r\n        emit AuthorityUpdated(_newAuthority);\r\n    }\r\n}\r\n\r\n// File: cryptography/ECDSA.sol\r\n\r\n\r\n\r\npragma solidity ^0.7.5;\r\n\r\n/**\r\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\r\n *\r\n * These functions can be used to verify that a message was signed by the holder\r\n * of the private keys of a given address.\r\n */\r\nlibrary ECDSA {\r\n    enum RecoverError {\r\n        NoError,\r\n        InvalidSignature,\r\n        InvalidSignatureLength,\r\n        InvalidSignatureS,\r\n        InvalidSignatureV\r\n    }\r\n\r\n    function _throwError(RecoverError error) private pure {\r\n        if (error == RecoverError.NoError) {\r\n            return; // no error: do nothing\r\n        } else if (error == RecoverError.InvalidSignature) {\r\n            revert(\"ECDSA: invalid signature\");\r\n        } else if (error == RecoverError.InvalidSignatureLength) {\r\n            revert(\"ECDSA: invalid signature length\");\r\n        } else if (error == RecoverError.InvalidSignatureS) {\r\n            revert(\"ECDSA: invalid signature 's' value\");\r\n        } else if (error == RecoverError.InvalidSignatureV) {\r\n            revert(\"ECDSA: invalid signature 'v' value\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address that signed a hashed message (`hash`) with\r\n     * `signature` or error string. This address can then be used for verification purposes.\r\n     *\r\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\r\n     * this function rejects them by requiring the `s` value to be in the lower\r\n     * half order, and the `v` value to be either 27 or 28.\r\n     *\r\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\r\n     * verification to be secure: it is possible to craft signatures that\r\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\r\n     * this is by receiving a hash of the original message (which may otherwise\r\n     * be too long), and then calling {toEthSignedMessageHash} on it.\r\n     *\r\n     * Documentation for signature generation:\r\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\r\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\r\n        // Check the signature length\r\n        // - case 65: r,s,v signature (standard)\r\n        // - case 64: r,vs signature (cf https://eips.ethereum.org/EIPS/eip-2098) _Available since v4.1._\r\n        if (signature.length == 65) {\r\n            bytes32 r;\r\n            bytes32 s;\r\n            uint8 v;\r\n            // ecrecover takes the signature parameters, and the only way to get them\r\n            // currently is to use assembly.\r\n            assembly {\r\n                r := mload(add(signature, 0x20))\r\n                s := mload(add(signature, 0x40))\r\n                v := byte(0, mload(add(signature, 0x60)))\r\n            }\r\n            return tryRecover(hash, v, r, s);\r\n        } else if (signature.length == 64) {\r\n            bytes32 r;\r\n            bytes32 vs;\r\n            // ecrecover takes the signature parameters, and the only way to get them\r\n            // currently is to use assembly.\r\n            assembly {\r\n                r := mload(add(signature, 0x20))\r\n                vs := mload(add(signature, 0x40))\r\n            }\r\n            return tryRecover(hash, r, vs);\r\n        } else {\r\n            return (address(0), RecoverError.InvalidSignatureLength);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address that signed a hashed message (`hash`) with\r\n     * `signature`. This address can then be used for verification purposes.\r\n     *\r\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\r\n     * this function rejects them by requiring the `s` value to be in the lower\r\n     * half order, and the `v` value to be either 27 or 28.\r\n     *\r\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\r\n     * verification to be secure: it is possible to craft signatures that\r\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\r\n     * this is by receiving a hash of the original message (which may otherwise\r\n     * be too long), and then calling {toEthSignedMessageHash} on it.\r\n     */\r\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\r\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\r\n        _throwError(error);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\r\n     *\r\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function tryRecover(\r\n        bytes32 hash,\r\n        bytes32 r,\r\n        bytes32 vs\r\n    ) internal pure returns (address, RecoverError) {\r\n        bytes32 s;\r\n        uint8 v;\r\n        assembly {\r\n            s := and(vs, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\r\n            v := add(shr(255, vs), 27)\r\n        }\r\n        return tryRecover(hash, v, r, s);\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\r\n     *\r\n     * _Available since v4.2._\r\n     */\r\n    function recover(\r\n        bytes32 hash,\r\n        bytes32 r,\r\n        bytes32 vs\r\n    ) internal pure returns (address) {\r\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\r\n        _throwError(error);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\r\n     * `r` and `s` signature fields separately.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function tryRecover(\r\n        bytes32 hash,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal pure returns (address, RecoverError) {\r\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\r\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\r\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\r\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\r\n        //\r\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\r\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\r\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\r\n        // these malleable signatures as well.\r\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\r\n            return (address(0), RecoverError.InvalidSignatureS);\r\n        }\r\n        if (v != 27 && v != 28) {\r\n            return (address(0), RecoverError.InvalidSignatureV);\r\n        }\r\n\r\n        // If the signature is valid (and not malleable), return the signer address\r\n        address signer = ecrecover(hash, v, r, s);\r\n        if (signer == address(0)) {\r\n            return (address(0), RecoverError.InvalidSignature);\r\n        }\r\n\r\n        return (signer, RecoverError.NoError);\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\r\n     * `r` and `s` signature fields separately.\r\n     */\r\n    function recover(\r\n        bytes32 hash,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal pure returns (address) {\r\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\r\n        _throwError(error);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\r\n     * produces hash corresponding to the one signed with the\r\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\r\n     * JSON-RPC method as part of EIP-191.\r\n     *\r\n     * See {recover}.\r\n     */\r\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\r\n        // 32 is the length in bytes of hash,\r\n        // enforced by the type signature above\r\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an Ethereum Signed Typed Data, created from a\r\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\r\n     * to the one signed with the\r\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\r\n     * JSON-RPC method as part of EIP-712.\r\n     *\r\n     * See {recover}.\r\n     */\r\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\r\n    }\r\n}\r\n// File: cryptography/EIP712.sol\r\n\r\n\r\n\r\npragma solidity ^0.7.5;\r\n\r\n\r\n/**\r\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\r\n *\r\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\r\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\r\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\r\n *\r\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\r\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\r\n * ({_hashTypedDataV4}).\r\n *\r\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\r\n * the chain id to protect against replay attacks on an eventual fork of the chain.\r\n *\r\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\r\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\r\n *\r\n * _Available since v3.4._\r\n */\r\nabstract contract EIP712 {\r\n    /* solhint-disable var-name-mixedcase */\r\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\r\n    // invalidate the cached domain separator if the chain id changes.\r\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\r\n    uint256 private immutable _CACHED_CHAIN_ID;\r\n\r\n    bytes32 private immutable _HASHED_NAME;\r\n    bytes32 private immutable _HASHED_VERSION;\r\n    bytes32 private immutable _TYPE_HASH;\r\n\r\n    /* solhint-enable var-name-mixedcase */\r\n\r\n    /**\r\n     * @dev Initializes the domain separator and parameter caches.\r\n     *\r\n     * The meaning of `name` and `version` is specified in\r\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\r\n     *\r\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\r\n     * - `version`: the current major version of the signing domain.\r\n     *\r\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\r\n     * contract upgrade].\r\n     */\r\n    constructor(string memory name, string memory version) {\r\n\r\n        uint256 chainID;\r\n        assembly {\r\n            chainID := chainid()\r\n        }\r\n\r\n        bytes32 hashedName = keccak256(bytes(name));\r\n        bytes32 hashedVersion = keccak256(bytes(version));\r\n        bytes32 typeHash = keccak256(\r\n            \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\r\n        );\r\n        _HASHED_NAME = hashedName;\r\n        _HASHED_VERSION = hashedVersion;\r\n        _CACHED_CHAIN_ID = chainID;\r\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion);\r\n        _TYPE_HASH = typeHash;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the domain separator for the current chain.\r\n     */\r\n    function _domainSeparatorV4() internal view returns (bytes32) {\r\n\r\n        uint256 chainID;\r\n        assembly {\r\n            chainID := chainid()\r\n        }\r\n\r\n        if (chainID == _CACHED_CHAIN_ID) {\r\n            return _CACHED_DOMAIN_SEPARATOR;\r\n        } else {\r\n            return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION);\r\n        }\r\n    }\r\n\r\n    function _buildDomainSeparator(\r\n        bytes32 typeHash,\r\n        bytes32 nameHash,\r\n        bytes32 versionHash\r\n    ) private view returns (bytes32) {\r\n        uint256 chainID;\r\n        assembly {\r\n            chainID := chainid()\r\n        }\r\n\r\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, chainID, address(this)));\r\n    }\r\n\r\n    /**\r\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\r\n     * function returns the hash of the fully encoded EIP712 message for this domain.\r\n     *\r\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\r\n     *\r\n     * ```solidity\r\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\r\n     *     keccak256(\"Mail(address to,string contents)\"),\r\n     *     mailTo,\r\n     *     keccak256(bytes(mailContents))\r\n     * )));\r\n     * address signer = ECDSA.recover(digest, signature);\r\n     * ```\r\n     */\r\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\r\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\r\n    }\r\n}\r\n// File: interfaces/IERC20Permit.sol\r\n\r\n\r\npragma solidity >=0.7.5;\r\n\r\n/**\r\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n */\r\ninterface IERC20Permit {\r\n    /**\r\n     * @dev Sets `value` as th xe allowance of `spender` over ``owner``'s tokens,\r\n     * given ``owner``'s signed approval.\r\n     *\r\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\r\n     * ordering also apply here.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `deadline` must be a timestamp in the future.\r\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\r\n     * over the EIP712-formatted function arguments.\r\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\r\n     *\r\n     * For more information on the signature format, see the\r\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\r\n     * section].\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Returns the current nonce for `owner`. This value must be\r\n     * included whenever a signature is generated for {permit}.\r\n     *\r\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\r\n     * prevents a signature from being used multiple times.\r\n     */\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}\r\n\r\n// File: interfaces/IERC20.sol\r\n\r\n\r\npragma solidity >=0.7.5;\r\n\r\ninterface IERC20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n// File: interfaces/IOHM.sol\r\n\r\n\r\npragma solidity >=0.7.5;\r\n\r\n\r\ninterface IOHM is IERC20 {\r\n  function mint(address account_, uint256 amount_) external;\r\n\r\n  function burn(uint256 amount) external;\r\n\r\n  function burnFrom(address account_, uint256 amount_) external;\r\n}\r\n\r\n// File: libraries/SafeMath.sol\r\n\r\n\r\npragma solidity ^0.7.5;\r\n\r\n\r\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\r\nlibrary SafeMath {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    // Only used in the  BondingCalculator.sol\r\n    function sqrrt(uint256 a) internal pure returns (uint c) {\r\n        if (a > 3) {\r\n            c = a;\r\n            uint b = add( div( a, 2), 1 );\r\n            while (b < c) {\r\n                c = b;\r\n                b = div( add( div( a, b ), b), 2 );\r\n            }\r\n        } else if (a != 0) {\r\n            c = 1;\r\n        }\r\n    }\r\n\r\n}\r\n// File: libraries/Counters.sol\r\n\r\n\r\npragma solidity ^0.7.5;\r\n\r\n\r\nlibrary Counters {\r\n    using SafeMath for uint256;\r\n\r\n    struct Counter {\r\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\r\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\r\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\r\n        uint256 _value; // default: 0\r\n    }\r\n\r\n    function current(Counter storage counter) internal view returns (uint256) {\r\n        return counter._value;\r\n    }\r\n\r\n    function increment(Counter storage counter) internal {\r\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\r\n        counter._value += 1;\r\n    }\r\n\r\n    function decrement(Counter storage counter) internal {\r\n        counter._value = counter._value.sub(1);\r\n    }\r\n}\r\n// File: types/ERC20.sol\r\n\r\n\r\npragma solidity >=0.7.5;\r\n\r\n\r\n\r\n\r\nabstract contract ERC20 is IERC20 {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    // TODO comment actual hash value.\r\n    bytes32 constant private ERC20TOKEN_ERC1820_INTERFACE_ID = keccak256( \"ERC20Token\" );\r\n\r\n    mapping (address => uint256) internal _balances;\r\n\r\n    mapping (address => mapping (address => uint256)) internal _allowances;\r\n\r\n    uint256 internal _totalSupply;\r\n\r\n    string internal _name;\r\n\r\n    string internal _symbol;\r\n\r\n    uint8 internal immutable _decimals;\r\n\r\n    constructor (string memory name_, string memory symbol_, uint8 decimals_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _decimals = decimals_;\r\n    }\r\n\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view virtual returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n  function _beforeTokenTransfer( address from_, address to_, uint256 amount_ ) internal virtual { }\r\n}\r\n\r\n// File: types/ERC20Permit.sol\r\n\r\n\r\npragma solidity >=0.7.5;\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n *\r\n * _Available since v3.4._\r\n */\r\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\r\n    using Counters for Counters.Counter;\r\n\r\n    mapping(address => Counters.Counter) private _nonces;\r\n\r\n    // solhint-disable-next-line var-name-mixedcase\r\n    bytes32 private immutable _PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\r\n\r\n    /**\r\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\r\n     *\r\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\r\n     */\r\n    constructor(string memory name) EIP712(name, \"1\") {}\r\n\r\n    /**\r\n     * @dev See {IERC20Permit-permit}.\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) public virtual override {\r\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\r\n\r\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\r\n\r\n        bytes32 hash = _hashTypedDataV4(structHash);\r\n\r\n        address signer = ECDSA.recover(hash, v, r, s);\r\n        require(signer == owner, \"ERC20Permit: invalid signature\");\r\n\r\n        _approve(owner, spender, value);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20Permit-nonces}.\r\n     */\r\n    function nonces(address owner) public view virtual override returns (uint256) {\r\n        return _nonces[owner].current();\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\r\n        return _domainSeparatorV4();\r\n    }\r\n\r\n    /**\r\n     * @dev \"Consume a nonce\": return the current value and increment.\r\n     *\r\n     * _Available since v4.1._\r\n     */\r\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\r\n        Counters.Counter storage nonce = _nonces[owner];\r\n        current = nonce.current();\r\n        nonce.increment();\r\n    }\r\n}\r\n\r\n// File: OlympusERC20.sol\r\n\r\n\r\npragma solidity ^0.7.5;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ncontract RENACECOIN is ERC20Permit, IOHM, OlympusAccessControlled {\r\n    using SafeMath for uint256;\r\n\r\n    constructor(address _authority)\r\n    ERC20(\"RENACECOIN\", \"RNC\", 18)\r\n    ERC20Permit(\"RENACECOIN\")\r\n    OlympusAccessControlled(IOlympusAuthority(_authority)) {\r\n\r\n        _mint(_authority, 200000000000000000000000000);\r\n\r\n        }\r\n\r\n\r\n\r\n    function mint(address account_, uint256 amount_) external override onlyVault {\r\n        _mint(account_, amount_);\r\n    }\r\n\r\n    function burn(uint256 amount) external override {\r\n        _burn(msg.sender, amount);\r\n    }\r\n\r\n    function burnFrom(address account_, uint256 amount_) external override {\r\n        _burnFrom(account_, amount_);\r\n    }\r\n\r\n    function _burnFrom(address account_, uint256 amount_) internal {\r\n        uint256 decreasedAllowance_ = allowance(account_, msg.sender).sub(amount_, \"ERC20: burn amount exceeds allowance\");\r\n\r\n        _approve(account_, msg.sender, decreasedAllowance_);\r\n        _burn(account_, amount_);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Tokenrenacecoin/tokenrenacecoin.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":23286:24156  library Counters {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":23286:24156  library Counters {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab2dbb81dee2ac9958db6cea47e57b09b25eccf08446bd634da98e18407b30e364736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab2dbb81dee2ac9958db6cea47e57b09b25eccf08446bd634da98e18407b30e364736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0x2D 0xBB DUP2 0xDE 0xE2 0xAC SWAP10 PC 0xDB PUSH13 0xEA47E57B09B25ECCF08446BD63 0x4D 0xA9 DUP15 XOR BLOCKHASH PUSH28 0x30E364736F6C63430007050033000000000000000000000000000000 ",
							"sourceMap": "23286:870:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab2dbb81dee2ac9958db6cea47e57b09b25eccf08446bd634da98e18407b30e364736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0x2D 0xBB DUP2 0xDE 0xE2 0xAC SWAP10 PC 0xDB PUSH13 0xEA47E57B09B25ECCF08446BD63 0x4D 0xA9 DUP15 XOR BLOCKHASH PUSH28 0x30E364736F6C63430007050033000000000000000000000000000000 ",
							"sourceMap": "23286:870:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23286,
									"end": 24156,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23286,
									"end": 24156,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab2dbb81dee2ac9958db6cea47e57b09b25eccf08446bd634da98e18407b30e364736f6c63430007050033",
									".code": [
										{
											"begin": 23286,
											"end": 24156,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 23286,
											"end": 24156,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 23286,
											"end": 24156,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23286,
											"end": 24156,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23286,
											"end": 24156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23286,
											"end": 24156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23286,
											"end": 24156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23286,
											"end": 24156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23286,
											"end": 24156,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":{\"keccak256\":\"0x1564a6f32082613b8d5a8f0addb2d397472d882d44960cc06e4a8a569d21b870\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://af62e5bf0932d768c09a2ef90786a65c33bdf2da2ca5e8ae7e81d2033f9852c8\",\"dweb:/ipfs/QmbvVgaZV2LPHMqgpiqoNLbxSzu35LPLMT57FkjoDbkPXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ECDSA": {
					"abi": [],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2995:11689  library ECDSA {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2995:11689  library ECDSA {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209aac4322b0ea6c8b502194decd2b727da1b904a9e8ea44c69e4f40bec25282c464736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209aac4322b0ea6c8b502194decd2b727da1b904a9e8ea44c69e4f40bec25282c464736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xAC NUMBER 0x22 0xB0 0xEA PUSH13 0x8B502194DECD2B727DA1B904A9 0xE8 0xEA DIFFICULTY 0xC6 SWAP15 0x4F BLOCKHASH 0xBE 0xC2 MSTORE DUP3 0xC4 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "2995:8694:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209aac4322b0ea6c8b502194decd2b727da1b904a9e8ea44c69e4f40bec25282c464736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xAC NUMBER 0x22 0xB0 0xEA PUSH13 0x8B502194DECD2B727DA1B904A9 0xE8 0xEA DIFFICULTY 0xC6 SWAP15 0x4F BLOCKHASH 0xBE 0xC2 MSTORE DUP3 0xC4 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "2995:8694:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2995,
									"end": 11689,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2995,
									"end": 11689,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209aac4322b0ea6c8b502194decd2b727da1b904a9e8ea44c69e4f40bec25282c464736f6c63430007050033",
									".code": [
										{
											"begin": 2995,
											"end": 11689,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 11689,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 11689,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 11689,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2995,
											"end": 11689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2995,
											"end": 11689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 11689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 11689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 11689,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":\"ECDSA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":{\"keccak256\":\"0x1564a6f32082613b8d5a8f0addb2d397472d882d44960cc06e4a8a569d21b870\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://af62e5bf0932d768c09a2ef90786a65c33bdf2da2ca5e8ae7e81d2033f9852c8\",\"dweb:/ipfs/QmbvVgaZV2LPHMqgpiqoNLbxSzu35LPLMT57FkjoDbkPXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EIP712": {
					"abi": [],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":\"EIP712\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":{\"keccak256\":\"0x1564a6f32082613b8d5a8f0addb2d397472d882d44960cc06e4a8a569d21b870\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://af62e5bf0932d768c09a2ef90786a65c33bdf2da2ca5e8ae7e81d2033f9852c8\",\"dweb:/ipfs/QmbvVgaZV2LPHMqgpiqoNLbxSzu35LPLMT57FkjoDbkPXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":{\"keccak256\":\"0x1564a6f32082613b8d5a8f0addb2d397472d882d44960cc06e4a8a569d21b870\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://af62e5bf0932d768c09a2ef90786a65c33bdf2da2ca5e8ae7e81d2033f9852c8\",\"dweb:/ipfs/QmbvVgaZV2LPHMqgpiqoNLbxSzu35LPLMT57FkjoDbkPXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1092,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1098,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1100,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1102,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1104,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
							},
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"nonces(address)": {
								"details": "See {IERC20Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC20Permit-permit}."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":\"ERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":{\"keccak256\":\"0x1564a6f32082613b8d5a8f0addb2d397472d882d44960cc06e4a8a569d21b870\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://af62e5bf0932d768c09a2ef90786a65c33bdf2da2ca5e8ae7e81d2033f9852c8\",\"dweb:/ipfs/QmbvVgaZV2LPHMqgpiqoNLbxSzu35LPLMT57FkjoDbkPXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1092,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1098,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1100,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1102,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1104,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1567,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(Counter)1037_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)1037_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)1037_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1037_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1036,
										"contract": "Tokenrenacecoin/tokenrenacecoin.sol:ERC20Permit",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":{\"keccak256\":\"0x1564a6f32082613b8d5a8f0addb2d397472d882d44960cc06e4a8a569d21b870\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://af62e5bf0932d768c09a2ef90786a65c33bdf2da2ca5e8ae7e81d2033f9852c8\",\"dweb:/ipfs/QmbvVgaZV2LPHMqgpiqoNLbxSzu35LPLMT57FkjoDbkPXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as th xe allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as th xe allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":{\"keccak256\":\"0x1564a6f32082613b8d5a8f0addb2d397472d882d44960cc06e4a8a569d21b870\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://af62e5bf0932d768c09a2ef90786a65c33bdf2da2ca5e8ae7e81d2033f9852c8\",\"dweb:/ipfs/QmbvVgaZV2LPHMqgpiqoNLbxSzu35LPLMT57FkjoDbkPXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IOHM": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":\"IOHM\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":{\"keccak256\":\"0x1564a6f32082613b8d5a8f0addb2d397472d882d44960cc06e4a8a569d21b870\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://af62e5bf0932d768c09a2ef90786a65c33bdf2da2ca5e8ae7e81d2033f9852c8\",\"dweb:/ipfs/QmbvVgaZV2LPHMqgpiqoNLbxSzu35LPLMT57FkjoDbkPXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IOlympusAuthority": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "GovernorPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_effectiveImmediately",
									"type": "bool"
								}
							],
							"name": "GovernorPushed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "GuardianPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_effectiveImmediately",
									"type": "bool"
								}
							],
							"name": "GuardianPushed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "PolicyPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_effectiveImmediately",
									"type": "bool"
								}
							],
							"name": "PolicyPushed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "VaultPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_effectiveImmediately",
									"type": "bool"
								}
							],
							"name": "VaultPushed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "governor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "guardian",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "policy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vault",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"governor()": "0c340a24",
							"guardian()": "452a9320",
							"policy()": "0505c8c9",
							"vault()": "fbfa77cf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"GovernorPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_effectiveImmediately\",\"type\":\"bool\"}],\"name\":\"GovernorPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"GuardianPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_effectiveImmediately\",\"type\":\"bool\"}],\"name\":\"GuardianPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"PolicyPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_effectiveImmediately\",\"type\":\"bool\"}],\"name\":\"PolicyPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"VaultPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_effectiveImmediately\",\"type\":\"bool\"}],\"name\":\"VaultPushed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":\"IOlympusAuthority\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":{\"keccak256\":\"0x1564a6f32082613b8d5a8f0addb2d397472d882d44960cc06e4a8a569d21b870\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://af62e5bf0932d768c09a2ef90786a65c33bdf2da2ca5e8ae7e81d2033f9852c8\",\"dweb:/ipfs/QmbvVgaZV2LPHMqgpiqoNLbxSzu35LPLMT57FkjoDbkPXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"OlympusAccessControlled": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IOlympusAuthority",
									"name": "authority",
									"type": "address"
								}
							],
							"name": "AuthorityUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "authority",
							"outputs": [
								{
									"internalType": "contract IOlympusAuthority",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IOlympusAuthority",
									"name": "_newAuthority",
									"type": "address"
								}
							],
							"name": "setAuthority",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"authority()": "bf7e214f",
							"setAuthority(address)": "7a9e5e4b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IOlympusAuthority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract IOlympusAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOlympusAuthority\",\"name\":\"_newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":\"OlympusAccessControlled\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":{\"keccak256\":\"0x1564a6f32082613b8d5a8f0addb2d397472d882d44960cc06e4a8a569d21b870\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://af62e5bf0932d768c09a2ef90786a65c33bdf2da2ca5e8ae7e81d2033f9852c8\",\"dweb:/ipfs/QmbvVgaZV2LPHMqgpiqoNLbxSzu35LPLMT57FkjoDbkPXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 86,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:OlympusAccessControlled",
								"label": "UNAUTHORIZED",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 88,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:OlympusAccessControlled",
								"label": "authority",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IOlympusAuthority)78"
							}
						],
						"types": {
							"t_contract(IOlympusAuthority)78": {
								"encoding": "inplace",
								"label": "contract IOlympusAuthority",
								"numberOfBytes": "20"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"RENACECOIN": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_authority",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IOlympusAuthority",
									"name": "authority",
									"type": "address"
								}
							],
							"name": "AuthorityUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "authority",
							"outputs": [
								{
									"internalType": "contract IOlympusAuthority",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IOlympusAuthority",
									"name": "_newAuthority",
									"type": "address"
								}
							],
							"name": "setAuthority",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
							},
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"nonces(address)": {
								"details": "See {IERC20Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC20Permit-permit}."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31390:32394  contract RENACECOIN is ERC20Permit, IOHM, OlympusAccessControlled {\r... */\n  mstore(0x40, 0x0160)\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":29432:29527  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":29387:29527  bytes32 private immutable _PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n  0x0140\n  swap1\n  dup2\n  mstore\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":1646:1682  string UNAUTHORIZED = \"UNAUTHORIZED\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x554e415554484f52495a45440000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x06\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31498:31730  constructor(address _authority)\r... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31644:31654  _authority */\n  dup1\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":29766:29818  constructor(string memory name) EIP712(name, \"1\") {} */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x52454e414345434f494e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":29805:29809  name */\n  dup1\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14063:14727  constructor(string memory name, string memory version) {\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24711:24877  constructor (string memory name_, string memory symbol_, uint8 decimals_) {\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x52454e414345434f494e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x524e430000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31562:31564  18 */\n  0x12\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24804:24809  name_ */\n  dup3\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24796:24801  _name */\n  0x03\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24796:24809  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_11\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_11:\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24830:24837  symbol_ */\n  dup2\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24820:24827  _symbol */\n  0x04\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24820:24837  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_12:\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24860:24869  decimals_ */\n  dup1\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24848:24869  _decimals = decimals_ */\n  0xff\n  and\n  0x80\n  dup2\n  0xff\n  and\n  0xf8\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24711:24877  constructor (string memory name_, string memory symbol_, uint8 decimals_) {\r... */\n  pop\n  pop\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14131:14146  uint256 chainID */\n  0x00\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14192:14201  chainid() */\n  chainid\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14181:14201  chainID := chainid() */\n  swap1\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14224:14242  bytes32 hashedName */\n  0x00\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14261:14265  name */\n  dup4\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14245:14267  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14224:14267  bytes32 hashedName = keccak256(bytes(name)) */\n  swap1\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14278:14299  bytes32 hashedVersion */\n  0x00\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14318:14325  version */\n  dup4\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14302:14327  keccak256(bytes(version)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14278:14327  bytes32 hashedVersion = keccak256(bytes(version)) */\n  swap1\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14338:14354  bytes32 typeHash */\n  0x00\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14357:14476  keccak256(\r... */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14338:14476  bytes32 typeHash = keccak256(\r... */\n  swap1\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14502:14512  hashedName */\n  dup3\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14487:14512  _HASHED_NAME = hashedName */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14541:14554  hashedVersion */\n  dup2\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14523:14554  _HASHED_VERSION = hashedVersion */\n  0x0100\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14584:14591  chainID */\n  dup4\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14565:14591  _CACHED_CHAIN_ID = chainID */\n  0xc0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14629:14687  _buildDomainSeparator(typeHash, hashedName, hashedVersion) */\n  tag_14\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14651:14659  typeHash */\n  dup2\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14661:14671  hashedName */\n  dup5\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14673:14686  hashedVersion */\n  dup5\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14629:14650  _buildDomainSeparator */\n  shl(0x20, tag_15)\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14629:14687  _buildDomainSeparator(typeHash, hashedName, hashedVersion) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14602:14687  _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion) */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14711:14719  typeHash */\n  dup1\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14698:14719  _TYPE_HASH = typeHash */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14063:14727  constructor(string memory name, string memory version) {\r... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":29766:29818  constructor(string memory name) EIP712(name, \"1\") {} */\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":1911:1921  _authority */\n  dup1\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":1899:1908  authority */\n  0x07\n  0x00\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":1899:1921  authority = _authority */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":1954:1964  _authority */\n  dup1\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":1937:1965  AuthorityUpdated(_authority) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":1846:1973  constructor(IOlympusAuthority _authority) {\r... */\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31670:31716  _mint(_authority, 200000000000000000000000000) */\n  tag_19\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31676:31686  _authority */\n  dup2\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31688:31715  200000000000000000000000000 */\n  0xa56fa5b99019a5c8000000\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31670:31675  _mint */\n  shl(0x20, tag_20)\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31670:31716  _mint(_authority, 200000000000000000000000000) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31498:31730  constructor(address _authority)\r... */\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31390:32394  contract RENACECOIN is ERC20Permit, IOHM, OlympusAccessControlled {\r... */\n  jump(tag_21)\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15196:15546  function _buildDomainSeparator(\r... */\ntag_15:\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15340:15347  bytes32 */\n  0x00\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15360:15375  uint256 chainID */\n  dup1\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15421:15430  chainid() */\n  chainid\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15410:15430  chainID := chainid() */\n  swap1\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15481:15489  typeHash */\n  dup5\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15491:15499  nameHash */\n  dup5\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15501:15512  versionHash */\n  dup5\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15514:15521  chainID */\n  dup4\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15531:15535  this */\n  address\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15470:15537  abi.encode(typeHash, nameHash, versionHash, chainID, address(this)) */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15460:15538  keccak256(abi.encode(typeHash, nameHash, versionHash, chainID, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15453:15538  return keccak256(abi.encode(typeHash, nameHash, versionHash, chainID, address(this))) */\n  swap2\n  pop\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15196:15546  function _buildDomainSeparator(\r... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27295:27669  function _mint(address account, uint256 amount) internal virtual {\r... */\ntag_20:\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27398:27399  0 */\n  0x00\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27379:27400  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27379:27386  account */\n  dup3\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27379:27400  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27371:27436  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_24\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1f\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_24:\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27447:27496  _beforeTokenTransfer(address(0), account, amount) */\n  tag_25\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27476:27477  0 */\n  0x00\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27480:27487  account */\n  dup4\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27489:27495  amount */\n  dup4\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27447:27467  _beforeTokenTransfer */\n  shl(0x20, tag_26)\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27447:27496  _beforeTokenTransfer(address(0), account, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27522:27546  _totalSupply.add(amount) */\n  tag_27\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27539:27545  amount */\n  dup2\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27522:27534  _totalSupply */\n  sload(0x02)\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27522:27538  _totalSupply.add */\n  or(tag_0_84, shl(0x20, tag_28))\n  swap1\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27522:27546  _totalSupply.add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27507:27519  _totalSupply */\n  0x02\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27507:27546  _totalSupply = _totalSupply.add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27578:27608  _balances[account].add(amount) */\n  tag_29\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27601:27607  amount */\n  dup2\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27578:27587  _balances */\n  0x00\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27578:27596  _balances[account] */\n  dup1\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27588:27595  account */\n  dup6\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27578:27596  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27578:27600  _balances[account].add */\n  or(tag_0_84, shl(0x20, tag_28))\n  swap1\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27578:27608  _balances[account].add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27557:27566  _balances */\n  0x00\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27557:27575  _balances[account] */\n  dup1\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27567:27574  account */\n  dup5\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27557:27575  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27557:27608  _balances[account] = _balances[account].add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27645:27652  account */\n  dup2\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27624:27661  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27641:27642  0 */\n  0x00\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27624:27661  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27654:27660  amount */\n  dup4\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27624:27661  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27295:27669  function _mint(address account, uint256 amount) internal virtual {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28455:28552  function _beforeTokenTransfer( address from_, address to_, uint256 amount_ ) internal virtual { } */\ntag_26:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21618:21799  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\ntag_28:\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21676:21683  uint256 */\n  0x00\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21696:21705  uint256 c */\n  dup1\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21712:21713  b */\n  dup3\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21708:21709  a */\n  dup5\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21708:21713  a + b */\n  add\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21696:21713  uint256 c = a + b */\n  swap1\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21737:21738  a */\n  dup4\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21732:21733  c */\n  dup2\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21732:21738  c >= a */\n  lt\n  iszero\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21724:21770  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_32\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1b\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_32:\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21790:21791  c */\n  dup1\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21783:21791  return c */\n  swap2\n  pop\n  pop\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21618:21799  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31390:32394  contract RENACECOIN is ERC20Permit, IOHM, OlympusAccessControlled {\r... */\ntag_2:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_34\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_33)\ntag_34:\n  dup3\n  0x1f\n  lt\n  tag_35\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_33)\ntag_35:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_33\n  jumpi\n  swap2\n  dup3\n  add\ntag_36:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_37\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_36)\ntag_37:\ntag_33:\n  pop\n  swap1\n  pop\n  tag_38\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  pop\n  swap1\n  jump\t// out\ntag_39:\ntag_40:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_41\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_40)\ntag_41:\n  pop\n  swap1\n  jump\t// out\ntag_21:\n  shr(0xf8, mload(0x80))\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x392c50ca5507384bea71aeaaad0c3da80670680e4a8116ffc86d5c553597399c\")\n  assignImmutable(\"0x42d683e394a4df18653c7650f8aa08cb69f6a4b0d0acad4653af662538b2a674\")\n  assignImmutable(\"0xdd5c87e7d2b0dfec287534406fac02a7bbb933ae982df87d512731e2383f3518\")\n  assignImmutable(\"0x47c45d5c96028246b97317e5b08ebf9432401948cd8d066b95926c97155d1ae7\")\n  assignImmutable(\"0xb94f8c478e7f92fc0cbeb8585a30ff43095dcb640fbbe86337c29b9c95bacdbd\")\n  assignImmutable(\"0x251437c0092c2b0ae5c27df55e04490f08f4eb0dcb868271fba9915d5c3457ef\")\n  assignImmutable(\"0x69bb780f07d68a8f9bd72ed7c0eb217fbfcf23cce950b57f4cc31ee126c912a8\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31390:32394  contract RENACECOIN is ERC20Permit, IOHM, OlympusAccessControlled {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xbf7e214f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7a9e5e4b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x313ce567\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24885:24968  function name() public view returns (string memory) {\r... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_27:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_29\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_27)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_30\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_30:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25753:25920  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25170:25270  function totalSupply() public view override returns (uint256) {\r... */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25928:26245  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25071:25162  function decimals() public view virtual returns (uint8) {\r... */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30853:30968  function DOMAIN_SEPARATOR() external view override returns (bytes32) {\r... */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26253:26467  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31742:31862  function mint(address account_, uint256 amount_) external override onlyVault {\r... */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31870:31962  function burn(uint256 amount) external override {\r... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25278:25405  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_12:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31970:32088  function burnFrom(address account_, uint256 amount_) external override {\r... */\n    tag_13:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2542:2710  function setAuthority(IOlympusAuthority _newAuthority) external onlyGovernor {\r... */\n    tag_14:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30595:30723  function nonces(address owner) public view virtual override returns (uint256) {\r... */\n    tag_15:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24976:25063  function symbol() public view returns (string memory) {\r... */\n    tag_16:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_66:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_68\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_66)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_69\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_69:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26475:26740  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_17:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25413:25586  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_18:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":1754:1788  IOlympusAuthority public authority */\n    tag_19:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":29884:30529  function permit(\r... */\n    tag_20:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xe0\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25594:25745  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_21:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24885:24968  function name() public view returns (string memory) {\r... */\n    tag_26:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24922:24935  string memory */\n      0x60\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24955:24960  _name */\n      0x03\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24948:24960  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_86\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_87\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_86)\n    tag_87:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_88:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_88\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24885:24968  function name() public view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25753:25920  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_33:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25836:25840  bool */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25853:25890  _approve(msg.sender, spender, amount) */\n      tag_90\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25862:25872  msg.sender */\n      caller\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25874:25881  spender */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25883:25889  amount */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25853:25861  _approve */\n      tag_91\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25853:25890  _approve(msg.sender, spender, amount) */\n      jump\t// in\n    tag_90:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25908:25912  true */\n      0x01\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25901:25912  return true */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25753:25920  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25170:25270  function totalSupply() public view override returns (uint256) {\r... */\n    tag_35:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25223:25230  uint256 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25250:25262  _totalSupply */\n      sload(0x02)\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25243:25262  return _totalSupply */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25170:25270  function totalSupply() public view override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25928:26245  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_38:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26034:26038  bool */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26051:26087  _transfer(sender, recipient, amount) */\n      tag_94\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26061:26067  sender */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26069:26078  recipient */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26080:26086  amount */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26051:26060  _transfer */\n      tag_95\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26051:26087  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_94:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26098:26215  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_96\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26107:26113  sender */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26115:26125  msg.sender */\n      caller\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26127:26214  _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_97\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26163:26169  amount */\n      dup6\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26127:26214  _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26127:26138  _allowances */\n      0x01\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26127:26146  _allowances[sender] */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26139:26145  sender */\n      dup12\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26127:26146  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26127:26158  _allowances[sender][msg.sender] */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26147:26157  msg.sender */\n      caller\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26127:26158  _allowances[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26127:26162  _allowances[sender][msg.sender].sub */\n      tag_98\n      swap1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26127:26214  _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_97:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26098:26106  _approve */\n      tag_91\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26098:26215  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_96:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26233:26237  true */\n      0x01\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26226:26237  return true */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25928:26245  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25071:25162  function decimals() public view virtual returns (uint8) {\r... */\n    tag_40:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25120:25125  uint8 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25145:25154  _decimals */\n      immutable(\"0x69bb780f07d68a8f9bd72ed7c0eb217fbfcf23cce950b57f4cc31ee126c912a8\")\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25138:25154  return _decimals */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25071:25162  function decimals() public view virtual returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30853:30968  function DOMAIN_SEPARATOR() external view override returns (bytes32) {\r... */\n    tag_42:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30913:30920  bytes32 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30940:30960  _domainSeparatorV4() */\n      tag_101\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30940:30958  _domainSeparatorV4 */\n      tag_102\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30940:30960  _domainSeparatorV4() */\n      jump\t// in\n    tag_101:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30933:30960  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30853:30968  function DOMAIN_SEPARATOR() external view override returns (bytes32) {\r... */\n      swap1\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26253:26467  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_45:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26341:26345  bool */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26358:26437  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_104\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26367:26377  msg.sender */\n      caller\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26379:26386  spender */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26388:26436  _allowances[msg.sender][spender].add(addedValue) */\n      tag_105\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26425:26435  addedValue */\n      dup6\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26388:26399  _allowances */\n      0x01\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26388:26411  _allowances[msg.sender] */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26400:26410  msg.sender */\n      caller\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26388:26411  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26388:26420  _allowances[msg.sender][spender] */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26412:26419  spender */\n      dup10\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26388:26420  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26388:26424  _allowances[msg.sender][spender].add */\n      tag_84\n      swap1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26388:26436  _allowances[msg.sender][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26358:26366  _approve */\n      tag_91\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26358:26437  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      jump\t// in\n    tag_104:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26455:26459  true */\n      0x01\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26448:26459  return true */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26253:26467  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31742:31862  function mint(address account_, uint256 amount_) external override onlyVault {\r... */\n    tag_48:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2438:2447  authority */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2438:2453  authority.vault */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfbfa77cf\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2438:2455  authority.vault() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2424:2455  msg.sender == authority.vault() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2424:2434  msg.sender */\n      caller\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2424:2455  msg.sender == authority.vault() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2457:2469  UNAUTHORIZED */\n      0x06\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2416:2470  require(msg.sender == authority.vault(), UNAUTHORIZED) */\n      swap1\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_112\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_113\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_112)\n    tag_113:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_114:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_114\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_112:\n      pop\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31830:31854  _mint(account_, amount_) */\n      tag_116\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31836:31844  account_ */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31846:31853  amount_ */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31830:31835  _mint */\n      tag_117\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31830:31854  _mint(account_, amount_) */\n      jump\t// in\n    tag_116:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31742:31862  function mint(address account_, uint256 amount_) external override onlyVault {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31870:31962  function burn(uint256 amount) external override {\r... */\n    tag_51:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31929:31954  _burn(msg.sender, amount) */\n      tag_119\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31935:31945  msg.sender */\n      caller\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31947:31953  amount */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31929:31934  _burn */\n      tag_120\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31929:31954  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_119:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31870:31962  function burn(uint256 amount) external override {\r... */\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25278:25405  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_54:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25352:25359  uint256 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25379:25388  _balances */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25379:25397  _balances[account] */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25389:25396  account */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25379:25397  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25372:25397  return _balances[account] */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25278:25405  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31970:32088  function burnFrom(address account_, uint256 amount_) external override {\r... */\n    tag_57:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32052:32080  _burnFrom(account_, amount_) */\n      tag_123\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32062:32070  account_ */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32072:32079  amount_ */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32052:32061  _burnFrom */\n      tag_124\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32052:32080  _burnFrom(account_, amount_) */\n      jump\t// in\n    tag_123:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31970:32088  function burnFrom(address account_, uint256 amount_) external override {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2542:2710  function setAuthority(IOlympusAuthority _newAuthority) external onlyGovernor {\r... */\n    tag_60:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2085:2094  authority */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2085:2103  authority.governor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0c340a24\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2085:2105  authority.governor() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2071:2105  msg.sender == authority.governor() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2071:2081  msg.sender */\n      caller\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2071:2105  msg.sender == authority.governor() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2107:2119  UNAUTHORIZED */\n      0x06\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2063:2120  require(msg.sender == authority.governor(), UNAUTHORIZED) */\n      swap1\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_131\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_132\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_131)\n    tag_132:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_133:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_133\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_131:\n      pop\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2642:2655  _newAuthority */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2630:2639  authority */\n      0x07\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2630:2655  authority = _newAuthority */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2688:2701  _newAuthority */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2671:2702  AuthorityUpdated(_newAuthority) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":2542:2710  function setAuthority(IOlympusAuthority _newAuthority) external onlyGovernor {\r... */\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30595:30723  function nonces(address owner) public view virtual override returns (uint256) {\r... */\n    tag_63:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30664:30671  uint256 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30691:30715  _nonces[owner].current() */\n      tag_136\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30691:30698  _nonces */\n      0x05\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30691:30705  _nonces[owner] */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30699:30704  owner */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30691:30705  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30691:30713  _nonces[owner].current */\n      tag_137\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30691:30715  _nonces[owner].current() */\n      jump\t// in\n    tag_136:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30684:30715  return _nonces[owner].current() */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30595:30723  function nonces(address owner) public view virtual override returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24976:25063  function symbol() public view returns (string memory) {\r... */\n    tag_65:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25015:25028  string memory */\n      0x60\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25048:25055  _symbol */\n      0x04\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25041:25055  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_139\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_140\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_139)\n    tag_140:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_141:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_141\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24976:25063  function symbol() public view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26475:26740  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_72:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26568:26572  bool */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26585:26710  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_143\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26594:26604  msg.sender */\n      caller\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26606:26613  spender */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26615:26709  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_144\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26652:26667  subtractedValue */\n      dup6\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26615:26709  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26615:26626  _allowances */\n      0x01\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26615:26638  _allowances[msg.sender] */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26627:26637  msg.sender */\n      caller\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26615:26638  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26615:26647  _allowances[msg.sender][spender] */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26639:26646  spender */\n      dup11\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26615:26647  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26615:26651  _allowances[msg.sender][spender].sub */\n      tag_98\n      swap1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26615:26709  _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_144:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26585:26593  _approve */\n      tag_91\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26585:26710  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_143:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26728:26732  true */\n      0x01\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26721:26732  return true */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26475:26740  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25413:25586  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_75:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25499:25503  bool */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25516:25556  _transfer(msg.sender, recipient, amount) */\n      tag_146\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25526:25536  msg.sender */\n      caller\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25538:25547  recipient */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25549:25555  amount */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25516:25525  _transfer */\n      tag_95\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25516:25556  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_146:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25574:25578  true */\n      0x01\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25567:25578  return true */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25413:25586  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":1754:1788  IOlympusAuthority public authority */\n    tag_77:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":29884:30529  function permit(\r... */\n    tag_80:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30128:30136  deadline */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30109:30124  block.timestamp */\n      timestamp\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30109:30136  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30101:30170  require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332305065726d69743a206578706972656420646561646c696e65000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30183:30201  bytes32 structHash */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30225:30241  _PERMIT_TYPEHASH */\n      immutable(\"0x392c50ca5507384bea71aeaaad0c3da80670680e4a8116ffc86d5c553597399c\")\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30243:30248  owner */\n      dup9\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30250:30257  spender */\n      dup9\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30259:30264  value */\n      dup9\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30266:30282  _useNonce(owner) */\n      tag_149\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30276:30281  owner */\n      dup13\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30266:30275  _useNonce */\n      tag_150\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30266:30282  _useNonce(owner) */\n      jump\t// in\n    tag_149:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30284:30292  deadline */\n      dup10\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30214:30293  abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30204:30294  keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30183:30294  bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30307:30319  bytes32 hash */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30322:30350  _hashTypedDataV4(structHash) */\n      tag_151\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30339:30349  structHash */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30322:30338  _hashTypedDataV4 */\n      tag_152\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30322:30350  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_151:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30307:30350  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30363:30377  address signer */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30380:30408  ECDSA.recover(hash, v, r, s) */\n      tag_153\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30394:30398  hash */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30400:30401  v */\n      dup8\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30403:30404  r */\n      dup8\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30406:30407  s */\n      dup8\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30380:30393  ECDSA.recover */\n      tag_154\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30380:30408  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_153:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30363:30408  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30437:30442  owner */\n      dup10\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30427:30442  signer == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30427:30433  signer */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30427:30442  signer == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30419:30477  require(signer == owner, \"ERC20Permit: invalid signature\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332305065726d69743a20696e76616c6964207369676e61747572650000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30490:30521  _approve(owner, spender, value) */\n      tag_156\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30499:30504  owner */\n      dup11\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30506:30513  spender */\n      dup11\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30515:30520  value */\n      dup11\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30490:30498  _approve */\n      tag_91\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":30490:30521  _approve(owner, spender, value) */\n      jump\t// in\n    tag_156:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":29884:30529  function permit(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25594:25745  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_83:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25683:25690  uint256 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25710:25721  _allowances */\n      0x01\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25710:25728  _allowances[owner] */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25722:25727  owner */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25710:25728  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25710:25737  _allowances[owner][spender] */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25729:25736  spender */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25710:25737  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25703:25737  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":25594:25745  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21618:21799  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_84:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21676:21683  uint256 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21696:21705  uint256 c */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21712:21713  b */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21708:21709  a */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21708:21713  a + b */\n      add\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21696:21713  uint256 c = a + b */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21737:21738  a */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21732:21733  c */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21732:21738  c >= a */\n      lt\n      iszero\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21724:21770  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21790:21791  c */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21783:21791  return c */\n      swap2\n      pop\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21618:21799  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28103:28449  function _approve(address owner, address spender, uint256 amount) internal virtual {\r... */\n    tag_91:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28222:28223  0 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28205:28224  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28205:28210  owner */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28205:28224  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28197:28265  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28303:28304  0 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28284:28305  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28284:28291  spender */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28284:28305  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28276:28344  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28387:28393  amount */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28357:28368  _allowances */\n      0x01\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28357:28375  _allowances[owner] */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28369:28374  owner */\n      dup6\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28357:28375  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28357:28384  _allowances[owner][spender] */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28376:28383  spender */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28357:28384  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28357:28393  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28425:28432  spender */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28409:28441  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28418:28423  owner */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28409:28441  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28434:28440  amount */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28409:28441  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28103:28449  function _approve(address owner, address spender, uint256 amount) internal virtual {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26748:27287  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r... */\n    tag_95:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26872:26873  0 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26854:26874  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26854:26860  sender */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26854:26874  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26846:26916  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26956:26957  0 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26935:26958  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26935:26944  recipient */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26935:26958  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26927:26998  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27011:27058  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_166\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27032:27038  sender */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27040:27049  recipient */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27051:27057  amount */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27011:27031  _beforeTokenTransfer */\n      tag_167\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27011:27058  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_166:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27091:27162  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_168\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27113:27119  amount */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27091:27162  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27091:27100  _balances */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27091:27108  _balances[sender] */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27101:27107  sender */\n      dup8\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27091:27108  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27091:27112  _balances[sender].sub */\n      tag_98\n      swap1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27091:27162  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27071:27080  _balances */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27071:27088  _balances[sender] */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27081:27087  sender */\n      dup6\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27071:27088  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27071:27162  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27196:27228  _balances[recipient].add(amount) */\n      tag_169\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27221:27227  amount */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27196:27205  _balances */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27196:27216  _balances[recipient] */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27206:27215  recipient */\n      dup6\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27196:27216  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27196:27220  _balances[recipient].add */\n      tag_84\n      swap1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27196:27228  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27173:27182  _balances */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27173:27193  _balances[recipient] */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27183:27192  recipient */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27173:27193  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27173:27228  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27261:27270  recipient */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27244:27279  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27253:27259  sender */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27244:27279  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27272:27278  amount */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27244:27279  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":26748:27287  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21951:22143  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_98:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":22037:22044  uint256 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":22070:22071  a */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":22065:22066  b */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":22065:22071  b <= a */\n      gt\n      iszero\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":22073:22085  errorMessage */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":22057:22086  require(b <= a, errorMessage) */\n      swap1\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_172:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_174\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_172)\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_175\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_175:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":22097:22106  uint256 c */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":22113:22114  b */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":22109:22110  a */\n      dup6\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":22109:22114  a - b */\n      sub\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":22097:22114  uint256 c = a - b */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":22134:22135  c */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":22127:22135  return c */\n      swap2\n      pop\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21951:22143  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14818:15188  function _domainSeparatorV4() internal view returns (bytes32) {\r... */\n    tag_102:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14871:14878  bytes32 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14893:14908  uint256 chainID */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14954:14963  chainid() */\n      chainid\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14943:14963  chainID := chainid() */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15001:15017  _CACHED_CHAIN_ID */\n      immutable(\"0xb94f8c478e7f92fc0cbeb8585a30ff43095dcb640fbbe86337c29b9c95bacdbd\")\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14990:14997  chainID */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14990:15017  chainID == _CACHED_CHAIN_ID */\n      eq\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14986:15181  if (chainID == _CACHED_CHAIN_ID) {\r... */\n      iszero\n      tag_177\n      jumpi\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15041:15065  _CACHED_DOMAIN_SEPARATOR */\n      immutable(\"0x251437c0092c2b0ae5c27df55e04490f08f4eb0dcb868271fba9915d5c3457ef\")\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15034:15065  return _CACHED_DOMAIN_SEPARATOR */\n      swap2\n      pop\n      pop\n      jump(tag_176)\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14986:15181  if (chainID == _CACHED_CHAIN_ID) {\r... */\n    tag_177:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15105:15169  _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION) */\n      tag_179\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15127:15137  _TYPE_HASH */\n      immutable(\"0x42d683e394a4df18653c7650f8aa08cb69f6a4b0d0acad4653af662538b2a674\")\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15139:15151  _HASHED_NAME */\n      immutable(\"0x47c45d5c96028246b97317e5b08ebf9432401948cd8d066b95926c97155d1ae7\")\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15153:15168  _HASHED_VERSION */\n      immutable(\"0xdd5c87e7d2b0dfec287534406fac02a7bbb933ae982df87d512731e2383f3518\")\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15105:15126  _buildDomainSeparator */\n      tag_180\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15105:15169  _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION) */\n      jump\t// in\n    tag_179:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15098:15169  return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION) */\n      swap2\n      pop\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":14818:15188  function _domainSeparatorV4() internal view returns (bytes32) {\r... */\n    tag_176:\n      swap1\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27295:27669  function _mint(address account, uint256 amount) internal virtual {\r... */\n    tag_117:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27398:27399  0 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27379:27400  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27379:27386  account */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27379:27400  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27371:27436  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27447:27496  _beforeTokenTransfer(address(0), account, amount) */\n      tag_183\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27476:27477  0 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27480:27487  account */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27489:27495  amount */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27447:27467  _beforeTokenTransfer */\n      tag_167\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27447:27496  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_183:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27522:27546  _totalSupply.add(amount) */\n      tag_184\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27539:27545  amount */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27522:27534  _totalSupply */\n      sload(0x02)\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27522:27538  _totalSupply.add */\n      tag_84\n      swap1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27522:27546  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_184:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27507:27519  _totalSupply */\n      0x02\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27507:27546  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27578:27608  _balances[account].add(amount) */\n      tag_185\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27601:27607  amount */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27578:27587  _balances */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27578:27596  _balances[account] */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27588:27595  account */\n      dup6\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27578:27596  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27578:27600  _balances[account].add */\n      tag_84\n      swap1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27578:27608  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27557:27566  _balances */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27557:27575  _balances[account] */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27567:27574  account */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27557:27575  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27557:27608  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27645:27652  account */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27624:27661  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27641:27642  0 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27624:27661  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27654:27660  amount */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27624:27661  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27295:27669  function _mint(address account, uint256 amount) internal virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27677:28095  function _burn(address account, uint256 amount) internal virtual {\r... */\n    tag_120:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27780:27781  0 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27761:27782  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27761:27768  account */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27761:27782  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27753:27820  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27833:27882  _beforeTokenTransfer(account, address(0), amount) */\n      tag_188\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27854:27861  account */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27871:27872  0 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27875:27881  amount */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27833:27853  _beforeTokenTransfer */\n      tag_167\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27833:27882  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_188:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27916:27984  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      tag_189\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27939:27945  amount */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27916:27984  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd\n      0x22\n      swap2\n      codecopy\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27916:27925  _balances */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27916:27934  _balances[account] */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27926:27933  account */\n      dup7\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27916:27934  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27916:27938  _balances[account].sub */\n      tag_98\n      swap1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27916:27984  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27895:27904  _balances */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27895:27913  _balances[account] */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27905:27912  account */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27895:27913  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27895:27984  _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28010:28034  _totalSupply.sub(amount) */\n      tag_190\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28027:28033  amount */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28010:28022  _totalSupply */\n      sload(0x02)\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28010:28026  _totalSupply.sub */\n      tag_191\n      swap1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28010:28034  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27995:28007  _totalSupply */\n      0x02\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27995:28034  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28076:28077  0 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28050:28087  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28059:28066  account */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28050:28087  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28080:28086  amount */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28050:28087  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":27677:28095  function _burn(address account, uint256 amount) internal virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32096:32391  function _burnFrom(address account_, uint256 amount_) internal {\r... */\n    tag_124:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32170:32197  uint256 decreasedAllowance_ */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32200:32284  allowance(account_, msg.sender).sub(amount_, \"ERC20: burn amount exceeds allowance\") */\n      tag_193\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32236:32243  amount_ */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32200:32284  allowance(account_, msg.sender).sub(amount_, \"ERC20: burn amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db\n      0x24\n      swap2\n      codecopy\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32200:32231  allowance(account_, msg.sender) */\n      tag_194\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32210:32218  account_ */\n      dup7\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32220:32230  msg.sender */\n      caller\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32200:32209  allowance */\n      tag_83\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32200:32231  allowance(account_, msg.sender) */\n      jump\t// in\n    tag_194:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32200:32235  allowance(account_, msg.sender).sub */\n      tag_98\n      swap1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32200:32284  allowance(account_, msg.sender).sub(amount_, \"ERC20: burn amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_193:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32170:32284  uint256 decreasedAllowance_ = allowance(account_, msg.sender).sub(amount_, \"ERC20: burn amount exceeds allowance\") */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32297:32348  _approve(account_, msg.sender, decreasedAllowance_) */\n      tag_195\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32306:32314  account_ */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32316:32326  msg.sender */\n      caller\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32328:32347  decreasedAllowance_ */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32297:32305  _approve */\n      tag_91\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32297:32348  _approve(account_, msg.sender, decreasedAllowance_) */\n      jump\t// in\n    tag_195:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32359:32383  _burn(account_, amount_) */\n      tag_196\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32365:32373  account_ */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32375:32382  amount_ */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32359:32364  _burn */\n      tag_120\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32359:32383  _burn(account_, amount_) */\n      jump\t// in\n    tag_196:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":32096:32391  function _burnFrom(address account_, uint256 amount_) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":23732:23846  function current(Counter storage counter) internal view returns (uint256) {\r... */\n    tag_137:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":23797:23804  uint256 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":23824:23831  counter */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":23824:23838  counter._value */\n      0x00\n      add\n      sload\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":23817:23838  return counter._value */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":23732:23846  function current(Counter storage counter) internal view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31106:31313  function _useNonce(address owner) internal virtual returns (uint256 current) {\r... */\n    tag_150:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31166:31181  uint256 current */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31194:31224  Counters.Counter storage nonce */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31227:31234  _nonces */\n      0x05\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31227:31241  _nonces[owner] */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31235:31240  owner */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31227:31241  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31194:31241  Counters.Counter storage nonce = _nonces[owner] */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31262:31277  nonce.current() */\n      tag_199\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31262:31267  nonce */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31262:31275  nonce.current */\n      tag_137\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31262:31277  nonce.current() */\n      jump\t// in\n    tag_199:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31252:31277  current = nonce.current() */\n      swap2\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31288:31305  nonce.increment() */\n      tag_200\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31288:31293  nonce */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31288:31303  nonce.increment */\n      tag_201\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31288:31305  nonce.increment() */\n      jump\t// in\n    tag_200:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":31106:31313  function _useNonce(address owner) internal virtual returns (uint256 current) {\r... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":16188:16355  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\r... */\n    tag_152:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":16265:16272  bytes32 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":16292:16347  ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_203\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":16314:16334  _domainSeparatorV4() */\n      tag_204\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":16314:16332  _domainSeparatorV4 */\n      tag_102\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":16314:16334  _domainSeparatorV4() */\n      jump\t// in\n    tag_204:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":16336:16346  structHash */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":16292:16313  ECDSA.toTypedDataHash */\n      tag_205\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":16292:16347  ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      jump\t// in\n    tag_203:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":16285:16347  return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":16188:16355  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10292:10571  function recover(\r... */\n    tag_154:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10420:10427  address */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10441:10458  address recovered */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10460:10478  RecoverError error */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10482:10507  tryRecover(hash, v, r, s) */\n      tag_207\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10493:10497  hash */\n      dup8\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10499:10500  v */\n      dup8\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10502:10503  r */\n      dup8\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10505:10506  s */\n      dup8\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10482:10492  tryRecover */\n      tag_208\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10482:10507  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_207:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10440:10507  (address recovered, RecoverError error) = tryRecover(hash, v, r, s) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10518:10536  _throwError(error) */\n      tag_209\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10530:10535  error */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10518:10529  _throwError */\n      tag_210\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10518:10536  _throwError(error) */\n      jump\t// in\n    tag_209:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10554:10563  recovered */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10547:10563  return recovered */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10292:10571  function recover(\r... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":28455:28552  function _beforeTokenTransfer( address from_, address to_, uint256 amount_ ) internal virtual { } */\n    tag_167:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15196:15546  function _buildDomainSeparator(\r... */\n    tag_180:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15340:15347  bytes32 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15360:15375  uint256 chainID */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15421:15430  chainid() */\n      chainid\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15410:15430  chainID := chainid() */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15481:15489  typeHash */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15491:15499  nameHash */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15501:15512  versionHash */\n      dup5\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15514:15521  chainID */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15531:15535  this */\n      address\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15470:15537  abi.encode(typeHash, nameHash, versionHash, chainID, address(this)) */\n      add(0x20, mload(0x40))\n      dup1\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15460:15538  keccak256(abi.encode(typeHash, nameHash, versionHash, chainID, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15453:15538  return keccak256(abi.encode(typeHash, nameHash, versionHash, chainID, address(this))) */\n      swap2\n      pop\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":15196:15546  function _buildDomainSeparator(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21807:21943  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_191:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21865:21872  uint256 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21892:21935  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_214\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21896:21897  a */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21899:21900  b */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21892:21935  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21892:21895  sub */\n      tag_98\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21892:21935  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_214:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21885:21935  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21807:21943  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":23854:24035  function increment(Counter storage counter) internal {\r... */\n    tag_201:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24026:24027  1 */\n      0x01\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24008:24015  counter */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24008:24022  counter._value */\n      0x00\n      add\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":24008:24027  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":23854:24035  function increment(Counter storage counter) internal {\r... */\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":11490:11686  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\r... */\n    tag_205:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":11583:11590  bytes32 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":11649:11664  domainSeparator */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":11666:11676  structHash */\n      dup3\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":11620:11677  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":11610:11678  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":11603:11678  return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":11490:11686  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":8521:10153  function tryRecover(\r... */\n    tag_208:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":8652:8659  address */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":8661:8673  RecoverError */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9586:9652  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9581:9582  s */\n      dup4\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9573:9583  uint256(s) */\n      0x00\n      shr\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9573:9652  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9569:9732  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\r... */\n      iszero\n      tag_218\n      jumpi\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9685:9686  0 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9689:9719  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9669:9720  return (address(0), RecoverError.InvalidSignatureS) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_217)\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9569:9732  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\r... */\n    tag_218:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9751:9753  27 */\n      0x1b\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9746:9747  v */\n      dup6\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9746:9753  v != 27 */\n      0xff\n      and\n      eq\n      iszero\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9746:9764  v != 27 && v != 28 */\n      dup1\n      iszero\n      tag_219\n      jumpi\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9762:9764  28 */\n      0x1c\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9757:9758  v */\n      dup6\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9757:9764  v != 28 */\n      0xff\n      and\n      eq\n      iszero\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9746:9764  v != 27 && v != 28 */\n    tag_219:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9742:9844  if (v != 27 && v != 28) {\r... */\n      iszero\n      tag_220\n      jumpi\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9797:9798  0 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9801:9831  RecoverError.InvalidSignatureV */\n      0x04\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9781:9832  return (address(0), RecoverError.InvalidSignatureV) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_217)\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9742:9844  if (v != 27 && v != 28) {\r... */\n    tag_220:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9941:9955  address signer */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9958:9982  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9968:9972  hash */\n      dup8\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9974:9975  v */\n      dup8\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9977:9978  r */\n      dup8\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9980:9981  s */\n      dup8\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9958:9982  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_222\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_222:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9941:9982  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10015:10016  0 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9997:10017  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9997:10003  signer */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9997:10017  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9993:10096  if (signer == address(0)) {\r... */\n      iszero\n      tag_223\n      jumpi\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10050:10051  0 */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10054:10083  RecoverError.InvalidSignature */\n      0x01\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10034:10084  return (address(0), RecoverError.InvalidSignature) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_217)\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":9993:10096  if (signer == address(0)) {\r... */\n    tag_223:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10116:10122  signer */\n      dup1\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10124:10144  RecoverError.NoError */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":10108:10145  return (signer, RecoverError.NoError) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":8521:10153  function tryRecover(\r... */\n    tag_217:\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3183:3826  function _throwError(RecoverError error) private pure {\r... */\n    tag_210:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3261:3281  RecoverError.NoError */\n      0x00\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3252:3281  error == RecoverError.NoError */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_225\n      jumpi\n      invalid\n    tag_225:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3252:3257  error */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3252:3281  error == RecoverError.NoError */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_226\n      jumpi\n      invalid\n    tag_226:\n      eq\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3248:3819  if (error == RecoverError.NoError) {\r... */\n      iszero\n      tag_227\n      jumpi\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3298:3305  return; */\n      jump(tag_224)\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3248:3819  if (error == RecoverError.NoError) {\r... */\n    tag_227:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3359:3388  RecoverError.InvalidSignature */\n      0x01\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3350:3388  error == RecoverError.InvalidSignature */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_229\n      jumpi\n      invalid\n    tag_229:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3350:3355  error */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3350:3388  error == RecoverError.InvalidSignature */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_230\n      jumpi\n      invalid\n    tag_230:\n      eq\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3346:3819  if (error == RecoverError.InvalidSignature) {\r... */\n      iszero\n      tag_231\n      jumpi\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3405:3439  revert(\"ECDSA: invalid signature\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45434453413a20696e76616c6964207369676e61747572650000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3346:3819  if (error == RecoverError.InvalidSignature) {\r... */\n    tag_231:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3470:3505  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3461:3505  error == RecoverError.InvalidSignatureLength */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_233\n      jumpi\n      invalid\n    tag_233:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3461:3466  error */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3461:3505  error == RecoverError.InvalidSignatureLength */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_234\n      jumpi\n      invalid\n    tag_234:\n      eq\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3457:3819  if (error == RecoverError.InvalidSignatureLength) {\r... */\n      iszero\n      tag_235\n      jumpi\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3522:3563  revert(\"ECDSA: invalid signature length\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45434453413a20696e76616c6964207369676e6174757265206c656e67746800\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3457:3819  if (error == RecoverError.InvalidSignatureLength) {\r... */\n    tag_235:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3594:3624  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3585:3624  error == RecoverError.InvalidSignatureS */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_237\n      jumpi\n      invalid\n    tag_237:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3585:3590  error */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3585:3624  error == RecoverError.InvalidSignatureS */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_238\n      jumpi\n      invalid\n    tag_238:\n      eq\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3581:3819  if (error == RecoverError.InvalidSignatureS) {\r... */\n      iszero\n      tag_239\n      jumpi\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3641:3685  revert(\"ECDSA: invalid signature 's' value\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3581:3819  if (error == RecoverError.InvalidSignatureS) {\r... */\n    tag_239:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3716:3746  RecoverError.InvalidSignatureV */\n      0x04\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3707:3746  error == RecoverError.InvalidSignatureV */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_241\n      jumpi\n      invalid\n    tag_241:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3707:3712  error */\n      dup2\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3707:3746  error == RecoverError.InvalidSignatureV */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_242\n      jumpi\n      invalid\n    tag_242:\n      eq\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3703:3819  if (error == RecoverError.InvalidSignatureV) {\r... */\n      iszero\n      tag_243\n      jumpi\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3763:3807  revert(\"ECDSA: invalid signature 'v' value\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3703:3819  if (error == RecoverError.InvalidSignatureV) {\r... */\n    tag_243:\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":3183:3826  function _throwError(RecoverError error) private pure {\r... */\n    tag_224:\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd 45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd 45434453413a20696e76616c6964207369676e6174757265202773272076616c7565\n    data_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4 45434453413a20696e76616c6964207369676e6174757265202776272076616c7565\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db 45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365\n    data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f 45524332303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa26469706673582212208cb6e5cab6baf46a345afd455b4770fb09db814a2add6e04a30ae1041e4cc70164736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6101606040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610140908152506040518060400160405280600c81526020017f554e415554484f52495a45440000000000000000000000000000000000000000815250600690805190602001906200007a929190620005e8565b503480156200008857600080fd5b5060405162002b3d38038062002b3d83398181016040526020811015620000ae57600080fd5b8101908080519060200190929190505050806040518060400160405280600a81526020017f52454e414345434f494e00000000000000000000000000000000000000000000815250806040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152506040518060400160405280600a81526020017f52454e414345434f494e000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f524e43000000000000000000000000000000000000000000000000000000000081525060128260039080519060200190620001b3929190620005e8565b508160049080519060200190620001cc929190620005e8565b508060ff1660808160ff1660f81b81525050505050600046905060008380519060200120905060008380519060200120905060007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f90508260e081815250508161010081815250508360c081815250506200024f8184846200030f60201b60201c565b60a081815250508061012081815250505050505050505080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad60405160405180910390a25062000308816aa56fa5b99019a5c80000006200037c60201b60201c565b506200069e565b6000804690508484848330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050604051602081830303815290604052805190602001209150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000420576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b62000434600083836200055a60201b60201c565b62000450816002546200055f60201b620012971790919060201c565b600281905550620004ae816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200055f60201b620012971790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b600080828401905083811015620005de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200062057600085556200066c565b82601f106200063b57805160ff19168380011785556200066c565b828001600101855582156200066c579182015b828111156200066b5782518255916020019190600101906200064e565b5b5090506200067b91906200067f565b5090565b5b808211156200069a57600081600090555060010162000680565b5090565b60805160f81c60a05160c05160e051610100516101205161014051612448620006f5600039806110985250806118f352508061193552508061191452508061189f5250806118c752508061093252506124486000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063a457c2d711610071578063a457c2d714610593578063a9059cbb146105f7578063bf7e214f1461065b578063d505accf1461068f578063dd62ed3e1461072857610121565b806370a08231146103ce57806379cc6790146104265780637a9e5e4b146104745780637ecebe00146104b857806395d89b411461051057610121565b8063313ce567116100f4578063313ce567146102af5780633644e515146102d057806339509351146102ee57806340c10f191461035257806342966c68146103a057610121565b806306fdde0314610126578063095ea7b3146101a957806318160ddd1461020d57806323b872dd1461022b575b600080fd5b61012e6107a0565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016e578082015181840152602081019050610153565b50505050905090810190601f16801561019b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f5600480360360408110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610842565b60405180821515815260200191505060405180910390f35b610215610859565b6040518082815260200191505060405180910390f35b6102976004803603606081101561024157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610863565b60405180821515815260200191505060405180910390f35b6102b761092e565b604051808260ff16815260200191505060405180910390f35b6102d8610956565b6040518082815260200191505060405180910390f35b61033a6004803603604081101561030457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610965565b60405180821515815260200191505060405180910390f35b61039e6004803603604081101561036857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a0a565b005b6103cc600480360360208110156103b657600080fd5b8101908080359060200190929190505050610baf565b005b610410600480360360208110156103e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bbc565b6040518082815260200191505060405180910390f35b6104726004803603604081101561043c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c04565b005b6104b66004803603602081101561048a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c12565b005b6104fa600480360360208110156104ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e30565b6040518082815260200191505060405180910390f35b610518610e80565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561055857808201518184015260208101905061053d565b50505050905090810190601f1680156105855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105df600480360360408110156105a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f22565b60405180821515815260200191505060405180910390f35b6106436004803603604081101561060d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fe1565b60405180821515815260200191505060405180910390f35b610663610ff8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610726600480360360e08110156106a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061101e565b005b61078a6004803603604081101561073e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611210565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108385780601f1061080d57610100808354040283529160200191610838565b820191906000526020600020905b81548152906001019060200180831161081b57829003601f168201915b5050505050905090565b600061084f33848461131f565b6001905092915050565b6000600254905090565b6000610870848484611516565b610923843361091e8560405180606001604052806028815260200161233860289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117d79092919063ffffffff16565b61131f565b600190509392505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000610960611897565b905090565b6000610a0033846109fb85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461129790919063ffffffff16565b61131f565b6001905092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbfa77cf6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a7257600080fd5b505afa158015610a86573d6000803e3d6000fd5b505050506040513d6020811015610a9c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614600690610ba0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610b915780601f10610b6657610100808354040283529160200191610b91565b820191906000526020600020905b815481529060010190602001808311610b7457829003601f168201915b50509250505060405180910390fd5b50610bab8282611960565b5050565b610bb93382611b27565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610c0e8282611ceb565b5050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610c7a57600080fd5b505afa158015610c8e573d6000803e3d6000fd5b505050506040513d6020811015610ca457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614600690610da8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610d995780601f10610d6e57610100808354040283529160200191610d99565b820191906000526020600020905b815481529060010190602001808311610d7c57829003601f168201915b50509250505060405180910390fd5b5080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad60405160405180910390a250565b6000610e79600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d3f565b9050919050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f185780601f10610eed57610100808354040283529160200191610f18565b820191906000526020600020905b815481529060010190602001808311610efb57829003601f168201915b5050505050905090565b6000610fd73384610fd2856040518060600160405280602581526020016123ee60259139600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117d79092919063ffffffff16565b61131f565b6001905092915050565b6000610fee338484611516565b6001905092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b83421115611094576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f45524332305065726d69743a206578706972656420646561646c696e6500000081525060200191505060405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000008888886110c38c611d4d565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020019650505050505050604051602081830303815290604052805190602001209050600061114682611dab565b9050600061115682878787611dc5565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146111f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f45524332305065726d69743a20696e76616c6964207369676e6174757265000081525060200191505060405180910390fd5b6112048a8a8a61131f565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015611315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156113a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806123ca6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561142b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806122ac6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561159c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806123a56025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611622576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806122676023913960400191505060405180910390fd5b61162d838383611df0565b611698816040518060600160405280602681526020016122ce602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117d79092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061172b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461129790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611884576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561184957808201518184015260208101905061182e565b50505050905090810190601f1680156118765780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000804690507f00000000000000000000000000000000000000000000000000000000000000008114156118ee577f000000000000000000000000000000000000000000000000000000000000000091505061195d565b6119597f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611df5565b9150505b90565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a03576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611a0f60008383611df0565b611a248160025461129790919063ffffffff16565b600281905550611a7b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461129790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806123846021913960400191505060405180910390fd5b611bb982600083611df0565b611c248160405180606001604052806022815260200161228a602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117d79092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c7b81600254611e6290919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000611d238260405180606001604052806024815260200161236060249139611d148633611210565b6117d79092919063ffffffff16565b9050611d3083338361131f565b611d3a8383611b27565b505050565b600081600001549050919050565b600080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611d9a81611d3f565b9150611da581611eac565b50919050565b6000611dbe611db8611897565b83611ec2565b9050919050565b6000806000611dd687878787611f23565b91509150611de381612045565b8192505050949350505050565b505050565b6000804690508484848330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050604051602081830303815290604052805190602001209150509392505050565b6000611ea483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506117d7565b905092915050565b6001816000016000828254019250508190555050565b6000828260405160200180807f19010000000000000000000000000000000000000000000000000000000000008152506002018381526020018281526020019250505060405160208183030381529060405280519060200120905092915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115611f5e57600060039150915061203c565b601b8560ff1614158015611f765750601c8560ff1614155b15611f8857600060049150915061203c565b600060018787878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611fe4573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156120335760006001925092505061203c565b80600092509250505b94509492505050565b6000600481111561205257fe5b81600481111561205e57fe5b141561206957612263565b6001600481111561207657fe5b81600481111561208257fe5b14156120f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f45434453413a20696e76616c6964207369676e6174757265000000000000000081525060200191505060405180910390fd5b6002600481111561210357fe5b81600481111561210f57fe5b1415612183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45434453413a20696e76616c6964207369676e6174757265206c656e6774680081525060200191505060405180910390fd5b6003600481111561219057fe5b81600481111561219c57fe5b14156121f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806122f46022913960400191505060405180910390fd5b6004808111156121ff57fe5b81600481111561220b57fe5b1415612262576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806123166022913960400191505060405180910390fd5b5b5056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c756545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212208cb6e5cab6baf46a345afd455b4770fb09db814a2add6e04a30ae1041e4cc70164736f6c63430007050033",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH2 0x140 SWAP1 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x7A SWAP3 SWAP2 SWAP1 PUSH3 0x5E8 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2B3D CODESIZE SUB DUP1 PUSH3 0x2B3D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52454E414345434F494E00000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52454E414345434F494E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x524E430000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x12 DUP3 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1B3 SWAP3 SWAP2 SWAP1 PUSH3 0x5E8 JUMP JUMPDEST POP DUP2 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CC SWAP3 SWAP2 SWAP1 PUSH3 0x5E8 JUMP JUMPDEST POP DUP1 PUSH1 0xFF AND PUSH1 0x80 DUP2 PUSH1 0xFF AND PUSH1 0xF8 SHL DUP2 MSTORE POP POP POP POP POP PUSH1 0x0 CHAINID SWAP1 POP PUSH1 0x0 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F SWAP1 POP DUP3 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP2 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP PUSH3 0x24F DUP2 DUP5 DUP5 PUSH3 0x30F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH3 0x308 DUP2 PUSH11 0xA56FA5B99019A5C8000000 PUSH3 0x37C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x69E JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP DUP5 DUP5 DUP5 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x420 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x434 PUSH1 0x0 DUP4 DUP4 PUSH3 0x55A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x450 DUP2 PUSH1 0x2 SLOAD PUSH3 0x55F PUSH1 0x20 SHL PUSH3 0x1297 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x4AE DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH3 0x55F PUSH1 0x20 SHL PUSH3 0x1297 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH3 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x620 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x66C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x63B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x66C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x66C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x66B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x64E JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x67B SWAP2 SWAP1 PUSH3 0x67F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x69A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x680 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xF8 SHR PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x2448 PUSH3 0x6F5 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x1098 MSTORE POP DUP1 PUSH2 0x18F3 MSTORE POP DUP1 PUSH2 0x1935 MSTORE POP DUP1 PUSH2 0x1914 MSTORE POP DUP1 PUSH2 0x189F MSTORE POP DUP1 PUSH2 0x18C7 MSTORE POP DUP1 PUSH2 0x932 MSTORE POP PUSH2 0x2448 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x68F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x728 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x510 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3A0 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x153 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x19B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x965 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA0A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC04 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC12 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x518 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x558 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x53D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x585 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x643 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x663 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x726 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x101E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x838 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x80D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x838 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x81B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84F CALLER DUP5 DUP5 PUSH2 0x131F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x870 DUP5 DUP5 DUP5 PUSH2 0x1516 JUMP JUMPDEST PUSH2 0x923 DUP5 CALLER PUSH2 0x91E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2338 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x17D7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x960 PUSH2 0x1897 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA00 CALLER DUP5 PUSH2 0x9FB DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1297 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFBFA77CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x6 SWAP1 PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB91 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB66 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB74 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xBAB DUP3 DUP3 PUSH2 0x1960 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBB9 CALLER DUP3 PUSH2 0x1B27 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC0E DUP3 DUP3 PUSH2 0x1CEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC340A24 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x6 SWAP1 PUSH2 0xDA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xD99 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD6E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD99 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD7C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE79 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1D3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xF18 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF18 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEFB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD7 CALLER DUP5 PUSH2 0xFD2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23EE PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x17D7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEE CALLER DUP5 DUP5 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1094 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP9 DUP9 DUP9 PUSH2 0x10C3 DUP13 PUSH2 0x1D4D JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1146 DUP3 PUSH2 0x1DAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1156 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1DC5 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1204 DUP11 DUP11 DUP11 PUSH2 0x131F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23CA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x142B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x22AC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x159C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23A5 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1622 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2267 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x162D DUP4 DUP4 DUP4 PUSH2 0x1DF0 JUMP JUMPDEST PUSH2 0x1698 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22CE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x17D7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x172B DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1297 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1884 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1849 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x182E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1876 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH32 0x0 DUP2 EQ ISZERO PUSH2 0x18EE JUMPI PUSH32 0x0 SWAP2 POP POP PUSH2 0x195D JUMP JUMPDEST PUSH2 0x1959 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1DF5 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0F PUSH1 0x0 DUP4 DUP4 PUSH2 0x1DF0 JUMP JUMPDEST PUSH2 0x1A24 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1297 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x1A7B DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1297 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2384 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BB9 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1DF0 JUMP JUMPDEST PUSH2 0x1C24 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x228A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x17D7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1C7B DUP2 PUSH1 0x2 SLOAD PUSH2 0x1E62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D23 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2360 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x1D14 DUP7 CALLER PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x17D7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1D30 DUP4 CALLER DUP4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x1D3A DUP4 DUP4 PUSH2 0x1B27 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1D9A DUP2 PUSH2 0x1D3F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA5 DUP2 PUSH2 0x1EAC JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBE PUSH2 0x1DB8 PUSH2 0x1897 JUMP JUMPDEST DUP4 PUSH2 0x1EC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1DD6 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1F23 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1DE3 DUP2 PUSH2 0x2045 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP DUP5 DUP5 DUP5 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x17D7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1F5E JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x203C JUMP JUMPDEST PUSH1 0x1B DUP6 PUSH1 0xFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1F76 JUMPI POP PUSH1 0x1C DUP6 PUSH1 0xFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1F88 JUMPI PUSH1 0x0 PUSH1 0x4 SWAP2 POP SWAP2 POP PUSH2 0x203C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2033 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x203C JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2052 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x205E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2069 JUMPI PUSH2 0x2263 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2076 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2082 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x20F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2103 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x210F JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2190 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x219C JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x21F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x22F4 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x21FF JUMPI INVALID JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x220B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2262 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2316 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545434453 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202773272076616C7565 GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202776272076616C7565 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20627572 PUSH15 0x20616D6F756E742065786365656473 KECCAK256 PUSH2 0x6C6C PUSH16 0x77616E636545524332303A206275726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212208CB6 0xE5 0xCA 0xB6 0xBA DELEGATECALL PUSH11 0x345AFD455B4770FB09DB81 0x4A 0x2A 0xDD PUSH15 0x4A30AE1041E4CC70164736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "31390:1004:0:-:0;;;29432:95;29387:140;;;;;1646:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;31498:232;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31644:10;29766:52;;;;;;;;;;;;;;;;;29805:4;14063:664;;;;;;;;;;;;;;;;;24711:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31562:2;24804:5;24796;:13;;;;;;;;;;;;:::i;:::-;;24830:7;24820;:17;;;;;;;;;;;;:::i;:::-;;24860:9;24848:21;;;;;;;;;;;;24711:166;;;14131:15;14192:9;14181:20;;14224:18;14261:4;14245:22;;;;;;14224:43;;14278:21;14318:7;14302:25;;;;;;14278:49;;14338:16;14357:119;14338:138;;14502:10;14487:25;;;;;;14541:13;14523:31;;;;;;14584:7;14565:26;;;;;;14629:58;14651:8;14661:10;14673:13;14629:21;;;:58;;:::i;:::-;14602:85;;;;;;14711:8;14698:21;;;;;;14063:664;;;;;;29766:52;1911:10;1899:9;;:22;;;;;;;;;;;;;;;;;;1954:10;1937:28;;;;;;;;;;;;1846:127;31670:46:::3;31676:10;31688:27;31670:5;;;:46;;:::i;:::-;31498:232:::0;31390:1004;;15196:350;15340:7;15360:15;15421:9;15410:20;;15481:8;15491;15501:11;15514:7;15531:4;15470:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15460:78;;;;;;15453:85;;;15196:350;;;;;:::o;27295:374::-;27398:1;27379:21;;:7;:21;;;;27371:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27447:49;27476:1;27480:7;27489:6;27447:20;;;:49;;:::i;:::-;27522:24;27539:6;27522:12;;:16;;;;;;:24;;;;:::i;:::-;27507:12;:39;;;;27578:30;27601:6;27578:9;:18;27588:7;27578:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;27557:9;:18;27567:7;27557:18;;;;;;;;;;;;;;;:51;;;;27645:7;27624:37;;27641:1;27624:37;;;27654:6;27624:37;;;;;;;;;;;;;;;;;;27295:374;;:::o;28455:97::-;;;;:::o;21618:181::-;21676:7;21696:9;21712:1;21708;:5;21696:17;;21737:1;21732;:6;;21724:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21790:1;21783:8;;;21618:181;;;;:::o;31390:1004::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {
								"538": [
									{
										"length": 32,
										"start": 6343
									}
								],
								"540": [
									{
										"length": 32,
										"start": 6303
									}
								],
								"542": [
									{
										"length": 32,
										"start": 6420
									}
								],
								"544": [
									{
										"length": 32,
										"start": 6453
									}
								],
								"546": [
									{
										"length": 32,
										"start": 6387
									}
								],
								"1106": [
									{
										"length": 32,
										"start": 2354
									}
								],
								"1572": [
									{
										"length": 32,
										"start": 4248
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063a457c2d711610071578063a457c2d714610593578063a9059cbb146105f7578063bf7e214f1461065b578063d505accf1461068f578063dd62ed3e1461072857610121565b806370a08231146103ce57806379cc6790146104265780637a9e5e4b146104745780637ecebe00146104b857806395d89b411461051057610121565b8063313ce567116100f4578063313ce567146102af5780633644e515146102d057806339509351146102ee57806340c10f191461035257806342966c68146103a057610121565b806306fdde0314610126578063095ea7b3146101a957806318160ddd1461020d57806323b872dd1461022b575b600080fd5b61012e6107a0565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016e578082015181840152602081019050610153565b50505050905090810190601f16801561019b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f5600480360360408110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610842565b60405180821515815260200191505060405180910390f35b610215610859565b6040518082815260200191505060405180910390f35b6102976004803603606081101561024157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610863565b60405180821515815260200191505060405180910390f35b6102b761092e565b604051808260ff16815260200191505060405180910390f35b6102d8610956565b6040518082815260200191505060405180910390f35b61033a6004803603604081101561030457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610965565b60405180821515815260200191505060405180910390f35b61039e6004803603604081101561036857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a0a565b005b6103cc600480360360208110156103b657600080fd5b8101908080359060200190929190505050610baf565b005b610410600480360360208110156103e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bbc565b6040518082815260200191505060405180910390f35b6104726004803603604081101561043c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c04565b005b6104b66004803603602081101561048a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c12565b005b6104fa600480360360208110156104ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e30565b6040518082815260200191505060405180910390f35b610518610e80565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561055857808201518184015260208101905061053d565b50505050905090810190601f1680156105855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105df600480360360408110156105a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f22565b60405180821515815260200191505060405180910390f35b6106436004803603604081101561060d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fe1565b60405180821515815260200191505060405180910390f35b610663610ff8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610726600480360360e08110156106a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061101e565b005b61078a6004803603604081101561073e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611210565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108385780601f1061080d57610100808354040283529160200191610838565b820191906000526020600020905b81548152906001019060200180831161081b57829003601f168201915b5050505050905090565b600061084f33848461131f565b6001905092915050565b6000600254905090565b6000610870848484611516565b610923843361091e8560405180606001604052806028815260200161233860289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117d79092919063ffffffff16565b61131f565b600190509392505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000610960611897565b905090565b6000610a0033846109fb85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461129790919063ffffffff16565b61131f565b6001905092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbfa77cf6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a7257600080fd5b505afa158015610a86573d6000803e3d6000fd5b505050506040513d6020811015610a9c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614600690610ba0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610b915780601f10610b6657610100808354040283529160200191610b91565b820191906000526020600020905b815481529060010190602001808311610b7457829003601f168201915b50509250505060405180910390fd5b50610bab8282611960565b5050565b610bb93382611b27565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610c0e8282611ceb565b5050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610c7a57600080fd5b505afa158015610c8e573d6000803e3d6000fd5b505050506040513d6020811015610ca457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614600690610da8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610d995780601f10610d6e57610100808354040283529160200191610d99565b820191906000526020600020905b815481529060010190602001808311610d7c57829003601f168201915b50509250505060405180910390fd5b5080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad60405160405180910390a250565b6000610e79600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d3f565b9050919050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f185780601f10610eed57610100808354040283529160200191610f18565b820191906000526020600020905b815481529060010190602001808311610efb57829003601f168201915b5050505050905090565b6000610fd73384610fd2856040518060600160405280602581526020016123ee60259139600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117d79092919063ffffffff16565b61131f565b6001905092915050565b6000610fee338484611516565b6001905092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b83421115611094576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f45524332305065726d69743a206578706972656420646561646c696e6500000081525060200191505060405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000008888886110c38c611d4d565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020019650505050505050604051602081830303815290604052805190602001209050600061114682611dab565b9050600061115682878787611dc5565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146111f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f45524332305065726d69743a20696e76616c6964207369676e6174757265000081525060200191505060405180910390fd5b6112048a8a8a61131f565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015611315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156113a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806123ca6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561142b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806122ac6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561159c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806123a56025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611622576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806122676023913960400191505060405180910390fd5b61162d838383611df0565b611698816040518060600160405280602681526020016122ce602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117d79092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061172b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461129790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611884576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561184957808201518184015260208101905061182e565b50505050905090810190601f1680156118765780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000804690507f00000000000000000000000000000000000000000000000000000000000000008114156118ee577f000000000000000000000000000000000000000000000000000000000000000091505061195d565b6119597f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611df5565b9150505b90565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a03576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611a0f60008383611df0565b611a248160025461129790919063ffffffff16565b600281905550611a7b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461129790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806123846021913960400191505060405180910390fd5b611bb982600083611df0565b611c248160405180606001604052806022815260200161228a602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117d79092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c7b81600254611e6290919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000611d238260405180606001604052806024815260200161236060249139611d148633611210565b6117d79092919063ffffffff16565b9050611d3083338361131f565b611d3a8383611b27565b505050565b600081600001549050919050565b600080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611d9a81611d3f565b9150611da581611eac565b50919050565b6000611dbe611db8611897565b83611ec2565b9050919050565b6000806000611dd687878787611f23565b91509150611de381612045565b8192505050949350505050565b505050565b6000804690508484848330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050604051602081830303815290604052805190602001209150509392505050565b6000611ea483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506117d7565b905092915050565b6001816000016000828254019250508190555050565b6000828260405160200180807f19010000000000000000000000000000000000000000000000000000000000008152506002018381526020018281526020019250505060405160208183030381529060405280519060200120905092915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115611f5e57600060039150915061203c565b601b8560ff1614158015611f765750601c8560ff1614155b15611f8857600060049150915061203c565b600060018787878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611fe4573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156120335760006001925092505061203c565b80600092509250505b94509492505050565b6000600481111561205257fe5b81600481111561205e57fe5b141561206957612263565b6001600481111561207657fe5b81600481111561208257fe5b14156120f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f45434453413a20696e76616c6964207369676e6174757265000000000000000081525060200191505060405180910390fd5b6002600481111561210357fe5b81600481111561210f57fe5b1415612183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45434453413a20696e76616c6964207369676e6174757265206c656e6774680081525060200191505060405180910390fd5b6003600481111561219057fe5b81600481111561219c57fe5b14156121f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806122f46022913960400191505060405180910390fd5b6004808111156121ff57fe5b81600481111561220b57fe5b1415612262576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806123166022913960400191505060405180910390fd5b5b5056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c756545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212208cb6e5cab6baf46a345afd455b4770fb09db814a2add6e04a30ae1041e4cc70164736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x68F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x728 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x510 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3A0 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x153 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x19B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x965 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA0A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC04 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC12 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x518 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x558 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x53D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x585 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x643 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x663 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x726 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x101E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x838 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x80D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x838 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x81B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84F CALLER DUP5 DUP5 PUSH2 0x131F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x870 DUP5 DUP5 DUP5 PUSH2 0x1516 JUMP JUMPDEST PUSH2 0x923 DUP5 CALLER PUSH2 0x91E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2338 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x17D7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x960 PUSH2 0x1897 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA00 CALLER DUP5 PUSH2 0x9FB DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1297 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFBFA77CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x6 SWAP1 PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB91 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB66 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB74 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xBAB DUP3 DUP3 PUSH2 0x1960 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBB9 CALLER DUP3 PUSH2 0x1B27 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC0E DUP3 DUP3 PUSH2 0x1CEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC340A24 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x6 SWAP1 PUSH2 0xDA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xD99 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD6E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD99 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD7C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE79 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1D3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xF18 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF18 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEFB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD7 CALLER DUP5 PUSH2 0xFD2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23EE PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x17D7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEE CALLER DUP5 DUP5 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1094 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP9 DUP9 DUP9 PUSH2 0x10C3 DUP13 PUSH2 0x1D4D JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1146 DUP3 PUSH2 0x1DAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1156 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1DC5 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1204 DUP11 DUP11 DUP11 PUSH2 0x131F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23CA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x142B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x22AC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x159C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23A5 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1622 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2267 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x162D DUP4 DUP4 DUP4 PUSH2 0x1DF0 JUMP JUMPDEST PUSH2 0x1698 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22CE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x17D7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x172B DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1297 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1884 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1849 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x182E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1876 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH32 0x0 DUP2 EQ ISZERO PUSH2 0x18EE JUMPI PUSH32 0x0 SWAP2 POP POP PUSH2 0x195D JUMP JUMPDEST PUSH2 0x1959 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1DF5 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0F PUSH1 0x0 DUP4 DUP4 PUSH2 0x1DF0 JUMP JUMPDEST PUSH2 0x1A24 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1297 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x1A7B DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1297 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2384 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BB9 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1DF0 JUMP JUMPDEST PUSH2 0x1C24 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x228A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x17D7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1C7B DUP2 PUSH1 0x2 SLOAD PUSH2 0x1E62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D23 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2360 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x1D14 DUP7 CALLER PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x17D7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1D30 DUP4 CALLER DUP4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x1D3A DUP4 DUP4 PUSH2 0x1B27 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1D9A DUP2 PUSH2 0x1D3F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA5 DUP2 PUSH2 0x1EAC JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBE PUSH2 0x1DB8 PUSH2 0x1897 JUMP JUMPDEST DUP4 PUSH2 0x1EC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1DD6 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1F23 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1DE3 DUP2 PUSH2 0x2045 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP DUP5 DUP5 DUP5 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x17D7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1F5E JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x203C JUMP JUMPDEST PUSH1 0x1B DUP6 PUSH1 0xFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1F76 JUMPI POP PUSH1 0x1C DUP6 PUSH1 0xFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1F88 JUMPI PUSH1 0x0 PUSH1 0x4 SWAP2 POP SWAP2 POP PUSH2 0x203C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2033 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x203C JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2052 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x205E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2069 JUMPI PUSH2 0x2263 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2076 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2082 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x20F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2103 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x210F JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2190 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x219C JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x21F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x22F4 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x21FF JUMPI INVALID JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x220B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2262 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2316 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545434453 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202773272076616C7565 GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202776272076616C7565 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20627572 PUSH15 0x20616D6F756E742065786365656473 KECCAK256 PUSH2 0x6C6C PUSH16 0x77616E636545524332303A206275726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212208CB6 0xE5 0xCA 0xB6 0xBA DELEGATECALL PUSH11 0x345AFD455B4770FB09DB81 0x4A 0x2A 0xDD PUSH15 0x4A30AE1041E4CC70164736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "31390:1004:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24885:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25753:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;25170:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;25928:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;25071:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;30853:115;;;:::i;:::-;;;;;;;;;;;;;;;;;;;26253:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;31742:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;31870:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;25278:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;31970:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2542:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;30595:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;24976:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26475:265;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;25413:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1754:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;29884:645;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;25594:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;24885:83;24922:13;24955:5;24948:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24885:83;:::o;25753:167::-;25836:4;25853:37;25862:10;25874:7;25883:6;25853:8;:37::i;:::-;25908:4;25901:11;;25753:167;;;;:::o;25170:100::-;25223:7;25250:12;;25243:19;;25170:100;:::o;25928:317::-;26034:4;26051:36;26061:6;26069:9;26080:6;26051:9;:36::i;:::-;26098:117;26107:6;26115:10;26127:87;26163:6;26127:87;;;;;;;;;;;;;;;;;:11;:19;26139:6;26127:19;;;;;;;;;;;;;;;:31;26147:10;26127:31;;;;;;;;;;;;;;;;:35;;:87;;;;;:::i;:::-;26098:8;:117::i;:::-;26233:4;26226:11;;25928:317;;;;;:::o;25071:91::-;25120:5;25145:9;25138:16;;25071:91;:::o;30853:115::-;30913:7;30940:20;:18;:20::i;:::-;30933:27;;30853:115;:::o;26253:214::-;26341:4;26358:79;26367:10;26379:7;26388:48;26425:10;26388:11;:23;26400:10;26388:23;;;;;;;;;;;;;;;:32;26412:7;26388:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;26358:8;:79::i;:::-;26455:4;26448:11;;26253:214;;;;:::o;31742:120::-;2438:9;;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2424:31;;:10;:31;;;2457:12;2416:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31830:24:::1;31836:8;31846:7;31830:5;:24::i;:::-;31742:120:::0;;:::o;31870:92::-;31929:25;31935:10;31947:6;31929:5;:25::i;:::-;31870:92;:::o;25278:127::-;25352:7;25379:9;:18;25389:7;25379:18;;;;;;;;;;;;;;;;25372:25;;25278:127;;;:::o;31970:118::-;32052:28;32062:8;32072:7;32052:9;:28::i;:::-;31970:118;;:::o;2542:168::-;2085:9;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2071:34;;:10;:34;;;2107:12;2063:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2642:13:::1;2630:9;;:25;;;;;;;;;;;;;;;;;;2688:13;2671:31;;;;;;;;;;;;2542:168:::0;:::o;30595:128::-;30664:7;30691:24;:7;:14;30699:5;30691:14;;;;;;;;;;;;;;;:22;:24::i;:::-;30684:31;;30595:128;;;:::o;24976:87::-;25015:13;25048:7;25041:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24976:87;:::o;26475:265::-;26568:4;26585:125;26594:10;26606:7;26615:94;26652:15;26615:94;;;;;;;;;;;;;;;;;:11;:23;26627:10;26615:23;;;;;;;;;;;;;;;:32;26639:7;26615:32;;;;;;;;;;;;;;;;:36;;:94;;;;;:::i;:::-;26585:8;:125::i;:::-;26728:4;26721:11;;26475:265;;;;:::o;25413:173::-;25499:4;25516:40;25526:10;25538:9;25549:6;25516:9;:40::i;:::-;25574:4;25567:11;;25413:173;;;;:::o;1754:34::-;;;;;;;;;;;;;:::o;29884:645::-;30128:8;30109:15;:27;;30101:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30183:18;30225:16;30243:5;30250:7;30259:5;30266:16;30276:5;30266:9;:16::i;:::-;30284:8;30214:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30204:90;;;;;;30183:111;;30307:12;30322:28;30339:10;30322:16;:28::i;:::-;30307:43;;30363:14;30380:28;30394:4;30400:1;30403;30406;30380:13;:28::i;:::-;30363:45;;30437:5;30427:15;;:6;:15;;;30419:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30490:31;30499:5;30506:7;30515:5;30490:8;:31::i;:::-;29884:645;;;;;;;;;;:::o;25594:151::-;25683:7;25710:11;:18;25722:5;25710:18;;;;;;;;;;;;;;;:27;25729:7;25710:27;;;;;;;;;;;;;;;;25703:34;;25594:151;;;;:::o;21618:181::-;21676:7;21696:9;21712:1;21708;:5;21696:17;;21737:1;21732;:6;;21724:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21790:1;21783:8;;;21618:181;;;;:::o;28103:346::-;28222:1;28205:19;;:5;:19;;;;28197:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28303:1;28284:21;;:7;:21;;;;28276:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28387:6;28357:11;:18;28369:5;28357:18;;;;;;;;;;;;;;;:27;28376:7;28357:27;;;;;;;;;;;;;;;:36;;;;28425:7;28409:32;;28418:5;28409:32;;;28434:6;28409:32;;;;;;;;;;;;;;;;;;28103:346;;;:::o;26748:539::-;26872:1;26854:20;;:6;:20;;;;26846:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26956:1;26935:23;;:9;:23;;;;26927:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27011:47;27032:6;27040:9;27051:6;27011:20;:47::i;:::-;27091:71;27113:6;27091:71;;;;;;;;;;;;;;;;;:9;:17;27101:6;27091:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;27071:9;:17;27081:6;27071:17;;;;;;;;;;;;;;;:91;;;;27196:32;27221:6;27196:9;:20;27206:9;27196:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;27173:9;:20;27183:9;27173:20;;;;;;;;;;;;;;;:55;;;;27261:9;27244:35;;27253:6;27244:35;;;27272:6;27244:35;;;;;;;;;;;;;;;;;;26748:539;;;:::o;21951:192::-;22037:7;22070:1;22065;:6;;22073:12;22057:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22097:9;22113:1;22109;:5;22097:17;;22134:1;22127:8;;;21951:192;;;;;:::o;14818:370::-;14871:7;14893:15;14954:9;14943:20;;15001:16;14990:7;:27;14986:195;;;15041:24;15034:31;;;;;14986:195;15105:64;15127:10;15139:12;15153:15;15105:21;:64::i;:::-;15098:71;;;14818:370;;:::o;27295:374::-;27398:1;27379:21;;:7;:21;;;;27371:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27447:49;27476:1;27480:7;27489:6;27447:20;:49::i;:::-;27522:24;27539:6;27522:12;;:16;;:24;;;;:::i;:::-;27507:12;:39;;;;27578:30;27601:6;27578:9;:18;27588:7;27578:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;27557:9;:18;27567:7;27557:18;;;;;;;;;;;;;;;:51;;;;27645:7;27624:37;;27641:1;27624:37;;;27654:6;27624:37;;;;;;;;;;;;;;;;;;27295:374;;:::o;27677:418::-;27780:1;27761:21;;:7;:21;;;;27753:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27833:49;27854:7;27871:1;27875:6;27833:20;:49::i;:::-;27916:68;27939:6;27916:68;;;;;;;;;;;;;;;;;:9;:18;27926:7;27916:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;27895:9;:18;27905:7;27895:18;;;;;;;;;;;;;;;:89;;;;28010:24;28027:6;28010:12;;:16;;:24;;;;:::i;:::-;27995:12;:39;;;;28076:1;28050:37;;28059:7;28050:37;;;28080:6;28050:37;;;;;;;;;;;;;;;;;;27677:418;;:::o;32096:295::-;32170:27;32200:84;32236:7;32200:84;;;;;;;;;;;;;;;;;:31;32210:8;32220:10;32200:9;:31::i;:::-;:35;;:84;;;;;:::i;:::-;32170:114;;32297:51;32306:8;32316:10;32328:19;32297:8;:51::i;:::-;32359:24;32365:8;32375:7;32359:5;:24::i;:::-;32096:295;;;:::o;23732:114::-;23797:7;23824;:14;;;23817:21;;23732:114;;;:::o;31106:207::-;31166:15;31194:30;31227:7;:14;31235:5;31227:14;;;;;;;;;;;;;;;31194:47;;31262:15;:5;:13;:15::i;:::-;31252:25;;31288:17;:5;:15;:17::i;:::-;31106:207;;;;:::o;16188:167::-;16265:7;16292:55;16314:20;:18;:20::i;:::-;16336:10;16292:21;:55::i;:::-;16285:62;;16188:167;;;:::o;10292:279::-;10420:7;10441:17;10460:18;10482:25;10493:4;10499:1;10502;10505;10482:10;:25::i;:::-;10440:67;;;;10518:18;10530:5;10518:11;:18::i;:::-;10554:9;10547:16;;;;10292:279;;;;;;:::o;28455:97::-;;;;:::o;15196:350::-;15340:7;15360:15;15421:9;15410:20;;15481:8;15491;15501:11;15514:7;15531:4;15470:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15460:78;;;;;;15453:85;;;15196:350;;;;;:::o;21807:136::-;21865:7;21892:43;21896:1;21899;21892:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;21885:50;;21807:136;;;;:::o;23854:181::-;24026:1;24008:7;:14;;;:19;;;;;;;;;;;23854:181;:::o;11490:196::-;11583:7;11649:15;11666:10;11620:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11610:68;;;;;;11603:75;;11490:196;;;;:::o;8521:1632::-;8652:7;8661:12;9586:66;9581:1;9573:10;;:79;9569:163;;;9685:1;9689:30;9669:51;;;;;;9569:163;9751:2;9746:1;:7;;;;:18;;;;;9762:2;9757:1;:7;;;;9746:18;9742:102;;;9797:1;9801:30;9781:51;;;;;;9742:102;9941:14;9958:24;9968:4;9974:1;9977;9980;9958:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9941:41;;10015:1;9997:20;;:6;:20;;;9993:103;;;10050:1;10054:29;10034:50;;;;;;;9993:103;10116:6;10124:20;10108:37;;;;;8521:1632;;;;;;;;:::o;3183:643::-;3261:20;3252:29;;;;;;;;:5;:29;;;;;;;;;3248:571;;;3298:7;;3248:571;3359:29;3350:38;;;;;;;;:5;:38;;;;;;;;;3346:473;;;3405:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3346:473;3470:35;3461:44;;;;;;;;:5;:44;;;;;;;;;3457:362;;;3522:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3457:362;3594:30;3585:39;;;;;;;;:5;:39;;;;;;;;;3581:238;;;3641:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3581:238;3716:30;3707:39;;;;;;;;:5;:39;;;;;;;;;3703:116;;;3763:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3703:116;3183:643;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1857600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"authority()": "1113",
								"balanceOf(address)": "1219",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "infinite",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1334",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"setAuthority(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_burnFrom(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "160"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29432,
									"end": 29527,
									"name": "PUSH",
									"source": 0,
									"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
								},
								{
									"begin": 29387,
									"end": 29527,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 29387,
									"end": 29527,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29387,
									"end": 29527,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29387,
									"end": 29527,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29387,
									"end": 29527,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "PUSH",
									"source": 0,
									"value": "554E415554484F52495A45440000000000000000000000000000000000000000"
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1646,
									"end": 1682,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31644,
									"end": 31654,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "PUSH",
									"source": 0,
									"value": "52454E414345434F494E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29805,
									"end": 29809,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "PUSH",
									"source": 0,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "PUSH",
									"source": 0,
									"value": "52454E414345434F494E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "PUSH",
									"source": 0,
									"value": "524E430000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31562,
									"end": 31564,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 24804,
									"end": 24809,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24796,
									"end": 24801,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24796,
									"end": 24809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24796,
									"end": 24809,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24796,
									"end": 24809,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24796,
									"end": 24809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24796,
									"end": 24809,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24796,
									"end": 24809,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24796,
									"end": 24809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24796,
									"end": 24809,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 24796,
									"end": 24809,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 24796,
									"end": 24809,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24796,
									"end": 24809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24796,
									"end": 24809,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24796,
									"end": 24809,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 24796,
									"end": 24809,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 24796,
									"end": 24809,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24796,
									"end": 24809,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24830,
									"end": 24837,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24820,
									"end": 24827,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24820,
									"end": 24837,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24820,
									"end": 24837,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24820,
									"end": 24837,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24820,
									"end": 24837,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24820,
									"end": 24837,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24820,
									"end": 24837,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24820,
									"end": 24837,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24820,
									"end": 24837,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 24820,
									"end": 24837,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 24820,
									"end": 24837,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24820,
									"end": 24837,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24820,
									"end": 24837,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24820,
									"end": 24837,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 24820,
									"end": 24837,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 24820,
									"end": 24837,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24820,
									"end": 24837,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24860,
									"end": 24869,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24848,
									"end": 24869,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 24848,
									"end": 24869,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24848,
									"end": 24869,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 24848,
									"end": 24869,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24848,
									"end": 24869,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 24848,
									"end": 24869,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24848,
									"end": 24869,
									"name": "PUSH",
									"source": 0,
									"value": "F8"
								},
								{
									"begin": 24848,
									"end": 24869,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 24848,
									"end": 24869,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24848,
									"end": 24869,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24848,
									"end": 24869,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24848,
									"end": 24869,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24711,
									"end": 24877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14131,
									"end": 14146,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14192,
									"end": 14201,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 14181,
									"end": 14201,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14181,
									"end": 14201,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14224,
									"end": 14242,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14261,
									"end": 14265,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14245,
									"end": 14267,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14245,
									"end": 14267,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14245,
									"end": 14267,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14245,
									"end": 14267,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 14245,
									"end": 14267,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14245,
									"end": 14267,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 14224,
									"end": 14267,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14224,
									"end": 14267,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14278,
									"end": 14299,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14318,
									"end": 14325,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14302,
									"end": 14327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14302,
									"end": 14327,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14302,
									"end": 14327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14302,
									"end": 14327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 14302,
									"end": 14327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14302,
									"end": 14327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 14278,
									"end": 14327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14278,
									"end": 14327,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14338,
									"end": 14354,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14357,
									"end": 14476,
									"name": "PUSH",
									"source": 0,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 14338,
									"end": 14476,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14338,
									"end": 14476,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14502,
									"end": 14512,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14487,
									"end": 14512,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 14487,
									"end": 14512,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14487,
									"end": 14512,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14487,
									"end": 14512,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14487,
									"end": 14512,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14487,
									"end": 14512,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14541,
									"end": 14554,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14523,
									"end": 14554,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 14523,
									"end": 14554,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14523,
									"end": 14554,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14523,
									"end": 14554,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14523,
									"end": 14554,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14523,
									"end": 14554,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14584,
									"end": 14591,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14565,
									"end": 14591,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 14565,
									"end": 14591,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14565,
									"end": 14591,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14565,
									"end": 14591,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14565,
									"end": 14591,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14565,
									"end": 14591,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14629,
									"end": 14687,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 14651,
									"end": 14659,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14661,
									"end": 14671,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 14673,
									"end": 14686,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 14629,
									"end": 14650,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 14629,
									"end": 14650,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 14629,
									"end": 14650,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 14629,
									"end": 14687,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 14629,
									"end": 14687,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 14629,
									"end": 14687,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 14629,
									"end": 14687,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 14629,
									"end": 14687,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14602,
									"end": 14687,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 14602,
									"end": 14687,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14602,
									"end": 14687,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14602,
									"end": 14687,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14602,
									"end": 14687,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14602,
									"end": 14687,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14711,
									"end": 14719,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14698,
									"end": 14719,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 14698,
									"end": 14719,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14698,
									"end": 14719,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14698,
									"end": 14719,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14698,
									"end": 14719,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14698,
									"end": 14719,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14063,
									"end": 14727,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29766,
									"end": 29818,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1911,
									"end": 1921,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1908,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1899,
									"end": 1908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1954,
									"end": 1964,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1937,
									"end": 1965,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1937,
									"end": 1965,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1937,
									"end": 1965,
									"name": "PUSH",
									"source": 0,
									"value": "2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD"
								},
								{
									"begin": 1937,
									"end": 1965,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1937,
									"end": 1965,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1937,
									"end": 1965,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1937,
									"end": 1965,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1937,
									"end": 1965,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1937,
									"end": 1965,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1937,
									"end": 1965,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1937,
									"end": 1965,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1937,
									"end": 1965,
									"name": "LOG2",
									"source": 0
								},
								{
									"begin": 1846,
									"end": 1973,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31670,
									"end": 31716,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 31676,
									"end": 31686,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31688,
									"end": 31715,
									"name": "PUSH",
									"source": 0,
									"value": "A56FA5B99019A5C8000000"
								},
								{
									"begin": 31670,
									"end": 31675,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31670,
									"end": 31675,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31670,
									"end": 31675,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 31670,
									"end": 31716,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31670,
									"end": 31716,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 31670,
									"end": 31716,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 31670,
									"end": 31716,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 31670,
									"end": 31716,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31498,
									"end": 31730,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 15196,
									"end": 15546,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 15196,
									"end": 15546,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15340,
									"end": 15347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15360,
									"end": 15375,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15421,
									"end": 15430,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 15410,
									"end": 15430,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15410,
									"end": 15430,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15481,
									"end": 15489,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 15491,
									"end": 15499,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 15501,
									"end": 15512,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 15514,
									"end": 15521,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15531,
									"end": 15535,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15470,
									"end": 15537,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15460,
									"end": 15538,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15460,
									"end": 15538,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15460,
									"end": 15538,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15460,
									"end": 15538,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15460,
									"end": 15538,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15460,
									"end": 15538,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 15453,
									"end": 15538,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15453,
									"end": 15538,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15453,
									"end": 15538,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15196,
									"end": 15546,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 15196,
									"end": 15546,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 15196,
									"end": 15546,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15196,
									"end": 15546,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15196,
									"end": 15546,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15196,
									"end": 15546,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 27295,
									"end": 27669,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27295,
									"end": 27669,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27398,
									"end": 27399,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27379,
									"end": 27400,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27379,
									"end": 27400,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27379,
									"end": 27386,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27379,
									"end": 27400,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27379,
									"end": 27400,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27379,
									"end": 27400,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 27379,
									"end": 27400,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "PUSH",
									"source": 0,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 27371,
									"end": 27436,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27447,
									"end": 27496,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 27476,
									"end": 27477,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27480,
									"end": 27487,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27489,
									"end": 27495,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27447,
									"end": 27467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 27447,
									"end": 27467,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27447,
									"end": 27467,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 27447,
									"end": 27496,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27447,
									"end": 27496,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 27447,
									"end": 27496,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 27447,
									"end": 27496,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 27447,
									"end": 27496,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27522,
									"end": 27546,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 27539,
									"end": 27545,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27522,
									"end": 27534,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 27522,
									"end": 27534,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 27522,
									"end": 27538,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 27522,
									"end": 27538,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27522,
									"end": 27538,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 27522,
									"end": 27538,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551700"
								},
								{
									"begin": 27522,
									"end": 27538,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 27522,
									"end": 27538,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27522,
									"end": 27546,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27522,
									"end": 27546,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27522,
									"end": 27546,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27522,
									"end": 27546,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 27522,
									"end": 27546,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 27522,
									"end": 27546,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 27522,
									"end": 27546,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27507,
									"end": 27519,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 27507,
									"end": 27546,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27507,
									"end": 27546,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27507,
									"end": 27546,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27507,
									"end": 27546,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27608,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 27601,
									"end": 27607,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27578,
									"end": 27596,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27588,
									"end": 27595,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27596,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27578,
									"end": 27596,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27596,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27578,
									"end": 27596,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27596,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27596,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27596,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27578,
									"end": 27596,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27596,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27596,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27596,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27596,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27578,
									"end": 27596,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27596,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27578,
									"end": 27596,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27596,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27600,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 27578,
									"end": 27600,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27578,
									"end": 27600,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27600,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551700"
								},
								{
									"begin": 27578,
									"end": 27600,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27600,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27608,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27608,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27608,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27578,
									"end": 27608,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 27578,
									"end": 27608,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 27578,
									"end": 27608,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 27578,
									"end": 27608,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27557,
									"end": 27566,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27557,
									"end": 27575,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27567,
									"end": 27574,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 27557,
									"end": 27575,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27557,
									"end": 27575,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27557,
									"end": 27575,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27557,
									"end": 27575,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27557,
									"end": 27575,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27557,
									"end": 27575,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27557,
									"end": 27575,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27557,
									"end": 27575,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27557,
									"end": 27575,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27557,
									"end": 27575,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27557,
									"end": 27575,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27557,
									"end": 27575,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27557,
									"end": 27575,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27557,
									"end": 27575,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27557,
									"end": 27575,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 27557,
									"end": 27608,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27557,
									"end": 27608,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27557,
									"end": 27608,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27557,
									"end": 27608,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27645,
									"end": 27652,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27641,
									"end": 27642,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 27654,
									"end": 27660,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27624,
									"end": 27661,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 27295,
									"end": 27669,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27295,
									"end": 27669,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27295,
									"end": 27669,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 28455,
									"end": 28552,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 28455,
									"end": 28552,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28455,
									"end": 28552,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28455,
									"end": 28552,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28455,
									"end": 28552,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28455,
									"end": 28552,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 21618,
									"end": 21799,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 21618,
									"end": 21799,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21676,
									"end": 21683,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21696,
									"end": 21705,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21712,
									"end": 21713,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21708,
									"end": 21709,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 21708,
									"end": 21713,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21696,
									"end": 21713,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21696,
									"end": 21713,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21737,
									"end": 21738,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21732,
									"end": 21733,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21732,
									"end": 21738,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 21732,
									"end": 21738,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "PUSH",
									"source": 0,
									"value": "1B"
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "PUSH",
									"source": 0,
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 21724,
									"end": 21770,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21790,
									"end": 21791,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21783,
									"end": 21791,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21783,
									"end": 21791,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21783,
									"end": 21791,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21618,
									"end": 21799,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 21618,
									"end": 21799,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21618,
									"end": 21799,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21618,
									"end": 21799,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21618,
									"end": 21799,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "F8"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1572"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "546"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "544"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "542"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "540"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "538"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1106"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31390,
									"end": 32394,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208cb6e5cab6baf46a345afd455b4770fb09db814a2add6e04a30ae1041e4cc70164736f6c63430007050033",
									".code": [
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "BF7E214F"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "D505ACCF"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "7A9E5E4B"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "3644E515"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31390,
											"end": 32394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24922,
											"end": 24935,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24955,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24885,
											"end": 24968,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25836,
											"end": 25840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25853,
											"end": 25890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 25862,
											"end": 25872,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25874,
											"end": 25881,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25883,
											"end": 25889,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25853,
											"end": 25861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 25853,
											"end": 25890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25853,
											"end": 25890,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 25853,
											"end": 25890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25908,
											"end": 25912,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25901,
											"end": 25912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25901,
											"end": 25912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25753,
											"end": 25920,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25223,
											"end": 25230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25250,
											"end": 25262,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25250,
											"end": 25262,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25243,
											"end": 25262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25243,
											"end": 25262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25270,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26051,
											"end": 26087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 26061,
											"end": 26067,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26069,
											"end": 26078,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26080,
											"end": 26086,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26051,
											"end": 26060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 26051,
											"end": 26087,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26051,
											"end": 26087,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 26051,
											"end": 26087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26098,
											"end": 26215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 26107,
											"end": 26113,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26115,
											"end": 26125,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 26163,
											"end": 26169,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "PUSH data",
											"source": 0,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26138,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26139,
											"end": 26145,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26127,
											"end": 26146,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26147,
											"end": 26157,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26127,
											"end": 26158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26127,
											"end": 26158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26127,
											"end": 26158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26127,
											"end": 26158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26127,
											"end": 26158,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26158,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 26127,
											"end": 26162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 26127,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26098,
											"end": 26106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 26098,
											"end": 26215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26098,
											"end": 26215,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 26098,
											"end": 26215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26233,
											"end": 26237,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26226,
											"end": 26237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26226,
											"end": 26237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 26245,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25145,
											"end": 25154,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1106"
										},
										{
											"begin": 25138,
											"end": 25154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25138,
											"end": 25154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25071,
											"end": 25162,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30913,
											"end": 30920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30940,
											"end": 30960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 30940,
											"end": 30958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 30940,
											"end": 30960,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30940,
											"end": 30960,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 30940,
											"end": 30960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30933,
											"end": 30960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30933,
											"end": 30960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30853,
											"end": 30968,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26341,
											"end": 26345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26358,
											"end": 26437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 26367,
											"end": 26377,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26379,
											"end": 26386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 26425,
											"end": 26435,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26399,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26388,
											"end": 26411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26400,
											"end": 26410,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26388,
											"end": 26411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26388,
											"end": 26411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26388,
											"end": 26411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26388,
											"end": 26411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26388,
											"end": 26411,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26412,
											"end": 26419,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26420,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26388,
											"end": 26420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26420,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26388,
											"end": 26420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26420,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26388,
											"end": 26420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26420,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26388,
											"end": 26420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26388,
											"end": 26420,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26420,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 26388,
											"end": 26424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26388,
											"end": 26436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26388,
											"end": 26436,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26388,
											"end": 26436,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 26388,
											"end": 26436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26358,
											"end": 26366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 26358,
											"end": 26437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26358,
											"end": 26437,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 26358,
											"end": 26437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26455,
											"end": 26459,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26448,
											"end": 26459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26448,
											"end": 26459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26253,
											"end": 26467,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2447,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2438,
											"end": 2447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2447,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2447,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2438,
											"end": 2447,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2447,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2447,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2438,
											"end": 2447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "FBFA77CF"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2424,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2424,
											"end": 2455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2424,
											"end": 2434,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2424,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2424,
											"end": 2455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2424,
											"end": 2455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31830,
											"end": 31854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 31836,
											"end": 31844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31846,
											"end": 31853,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31830,
											"end": 31835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 31830,
											"end": 31854,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31830,
											"end": 31854,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 31830,
											"end": 31854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31862,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31929,
											"end": 31954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 31935,
											"end": 31945,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 31953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31929,
											"end": 31934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 31929,
											"end": 31954,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31929,
											"end": 31954,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 31929,
											"end": 31954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31870,
											"end": 31962,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25379,
											"end": 25388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25379,
											"end": 25397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25389,
											"end": 25396,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25379,
											"end": 25397,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25379,
											"end": 25397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25379,
											"end": 25397,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25379,
											"end": 25397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25379,
											"end": 25397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25379,
											"end": 25397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25379,
											"end": 25397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25379,
											"end": 25397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25379,
											"end": 25397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25379,
											"end": 25397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25379,
											"end": 25397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25379,
											"end": 25397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25379,
											"end": 25397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25379,
											"end": 25397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25379,
											"end": 25397,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25379,
											"end": 25397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25372,
											"end": 25397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25372,
											"end": 25397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25278,
											"end": 25405,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32052,
											"end": 32080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 32062,
											"end": 32070,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32072,
											"end": 32079,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32052,
											"end": 32061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 32052,
											"end": 32080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32052,
											"end": 32080,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 32052,
											"end": 32080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32088,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2094,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2085,
											"end": 2094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2094,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2085,
											"end": 2094,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2094,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "C340A24"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2071,
											"end": 2105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2071,
											"end": 2105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2105,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2119,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2639,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2630,
											"end": 2639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "PUSH",
											"source": 0,
											"value": "2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD"
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2710,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30664,
											"end": 30671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30691,
											"end": 30715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 30691,
											"end": 30698,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30691,
											"end": 30705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30699,
											"end": 30704,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30691,
											"end": 30705,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30691,
											"end": 30705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30691,
											"end": 30705,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30691,
											"end": 30705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30691,
											"end": 30705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30691,
											"end": 30705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30691,
											"end": 30705,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30691,
											"end": 30705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30691,
											"end": 30705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30691,
											"end": 30705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30691,
											"end": 30705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30691,
											"end": 30705,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30691,
											"end": 30705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30691,
											"end": 30705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30691,
											"end": 30705,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30691,
											"end": 30713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 30691,
											"end": 30715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30691,
											"end": 30715,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 30691,
											"end": 30715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30684,
											"end": 30715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30595,
											"end": 30723,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25015,
											"end": 25028,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25048,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24976,
											"end": 25063,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26568,
											"end": 26572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26585,
											"end": 26710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 26594,
											"end": 26604,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26606,
											"end": 26613,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 26652,
											"end": 26667,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "PUSH data",
											"source": 0,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26626,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26615,
											"end": 26638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26627,
											"end": 26637,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26615,
											"end": 26638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26615,
											"end": 26638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26615,
											"end": 26638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26615,
											"end": 26638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26615,
											"end": 26638,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26639,
											"end": 26646,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26647,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26615,
											"end": 26647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26647,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26615,
											"end": 26647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26647,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26615,
											"end": 26647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26647,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26615,
											"end": 26647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26615,
											"end": 26647,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26647,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 26615,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 26615,
											"end": 26709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26585,
											"end": 26593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 26585,
											"end": 26710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26585,
											"end": 26710,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 26585,
											"end": 26710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26728,
											"end": 26732,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26721,
											"end": 26732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26721,
											"end": 26732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26475,
											"end": 26740,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25499,
											"end": 25503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25516,
											"end": 25556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 25526,
											"end": 25536,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25547,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25549,
											"end": 25555,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25516,
											"end": 25525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25516,
											"end": 25556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25516,
											"end": 25556,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 25516,
											"end": 25556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25574,
											"end": 25578,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25567,
											"end": 25578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25567,
											"end": 25578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25413,
											"end": 25586,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1788,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30128,
											"end": 30136,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30109,
											"end": 30124,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 30109,
											"end": 30136,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30109,
											"end": 30136,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "PUSH",
											"source": 0,
											"value": "45524332305065726D69743A206578706972656420646561646C696E65000000"
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 30101,
											"end": 30170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30183,
											"end": 30201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30225,
											"end": 30241,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1572"
										},
										{
											"begin": 30243,
											"end": 30248,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30257,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30259,
											"end": 30264,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30266,
											"end": 30282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 30276,
											"end": 30281,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 30266,
											"end": 30275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 30266,
											"end": 30282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30266,
											"end": 30282,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 30266,
											"end": 30282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30284,
											"end": 30292,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30214,
											"end": 30293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30204,
											"end": 30294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30204,
											"end": 30294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30204,
											"end": 30294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30204,
											"end": 30294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30204,
											"end": 30294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30204,
											"end": 30294,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30183,
											"end": 30294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30183,
											"end": 30294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30307,
											"end": 30319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30322,
											"end": 30350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 30339,
											"end": 30349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30322,
											"end": 30338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 30322,
											"end": 30350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30322,
											"end": 30350,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 30322,
											"end": 30350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30307,
											"end": 30350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30307,
											"end": 30350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30380,
											"end": 30408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 30394,
											"end": 30398,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30400,
											"end": 30401,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30403,
											"end": 30404,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30406,
											"end": 30407,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30380,
											"end": 30393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 30380,
											"end": 30408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30380,
											"end": 30408,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 30380,
											"end": 30408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30437,
											"end": 30442,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30442,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30427,
											"end": 30442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30442,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30427,
											"end": 30442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30442,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "PUSH",
											"source": 0,
											"value": "45524332305065726D69743A20696E76616C6964207369676E61747572650000"
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 30419,
											"end": 30477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 30499,
											"end": 30504,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30513,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 30515,
											"end": 30520,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 30490,
											"end": 30498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 30490,
											"end": 30521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30490,
											"end": 30521,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 30490,
											"end": 30521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29884,
											"end": 30529,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25683,
											"end": 25690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25710,
											"end": 25721,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25722,
											"end": 25727,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25710,
											"end": 25728,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25729,
											"end": 25736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25710,
											"end": 25737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25710,
											"end": 25737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25710,
											"end": 25737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25710,
											"end": 25737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25710,
											"end": 25737,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25737,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25703,
											"end": 25737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25703,
											"end": 25737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25745,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21618,
											"end": 21799,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 21618,
											"end": 21799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21676,
											"end": 21683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21696,
											"end": 21705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21712,
											"end": 21713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21708,
											"end": 21709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21708,
											"end": 21713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21696,
											"end": 21713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21696,
											"end": 21713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21737,
											"end": 21738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21738,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21738,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 21724,
											"end": 21770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21790,
											"end": 21791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21783,
											"end": 21791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21783,
											"end": 21791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21783,
											"end": 21791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21618,
											"end": 21799,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21618,
											"end": 21799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21618,
											"end": 21799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21618,
											"end": 21799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21618,
											"end": 21799,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28103,
											"end": 28449,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 28103,
											"end": 28449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28222,
											"end": 28223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28205,
											"end": 28224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28205,
											"end": 28224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28205,
											"end": 28210,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28205,
											"end": 28224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28205,
											"end": 28224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28205,
											"end": 28224,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28205,
											"end": 28224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "PUSH data",
											"source": 0,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 28197,
											"end": 28265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28303,
											"end": 28304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28284,
											"end": 28305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28284,
											"end": 28305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28284,
											"end": 28291,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28284,
											"end": 28305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28284,
											"end": 28305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28284,
											"end": 28305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28284,
											"end": 28305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "PUSH data",
											"source": 0,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 28276,
											"end": 28344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28368,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28357,
											"end": 28375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28369,
											"end": 28374,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28375,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28357,
											"end": 28375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28375,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28357,
											"end": 28375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28357,
											"end": 28375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28357,
											"end": 28375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28357,
											"end": 28375,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28376,
											"end": 28383,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28384,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28357,
											"end": 28384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28384,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28357,
											"end": 28384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28357,
											"end": 28384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28357,
											"end": 28384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28357,
											"end": 28384,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28393,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28357,
											"end": 28393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28425,
											"end": 28432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28423,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 28434,
											"end": 28440,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28409,
											"end": 28441,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 28103,
											"end": 28449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28103,
											"end": 28449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28103,
											"end": 28449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28103,
											"end": 28449,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26748,
											"end": 27287,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 26748,
											"end": 27287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26872,
											"end": 26873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26854,
											"end": 26874,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26854,
											"end": 26874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26854,
											"end": 26860,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26854,
											"end": 26874,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26854,
											"end": 26874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26854,
											"end": 26874,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26854,
											"end": 26874,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "PUSH data",
											"source": 0,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 26846,
											"end": 26916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26956,
											"end": 26957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26935,
											"end": 26958,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26935,
											"end": 26958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26935,
											"end": 26944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26935,
											"end": 26958,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26935,
											"end": 26958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26935,
											"end": 26958,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26935,
											"end": 26958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "PUSH data",
											"source": 0,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 26927,
											"end": 26998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27011,
											"end": 27058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 27032,
											"end": 27038,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27040,
											"end": 27049,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27051,
											"end": 27057,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27011,
											"end": 27031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 27011,
											"end": 27058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27011,
											"end": 27058,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 27011,
											"end": 27058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 27113,
											"end": 27119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "PUSH data",
											"source": 0,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27091,
											"end": 27108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27101,
											"end": 27107,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27091,
											"end": 27108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27091,
											"end": 27108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27091,
											"end": 27108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27091,
											"end": 27108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27091,
											"end": 27108,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27108,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 27091,
											"end": 27112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 27091,
											"end": 27162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27071,
											"end": 27080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27071,
											"end": 27088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27081,
											"end": 27087,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27071,
											"end": 27088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27071,
											"end": 27088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27071,
											"end": 27088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27071,
											"end": 27088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27071,
											"end": 27088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27071,
											"end": 27088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27071,
											"end": 27088,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27071,
											"end": 27088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27071,
											"end": 27088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27071,
											"end": 27088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27071,
											"end": 27088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27071,
											"end": 27088,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27071,
											"end": 27088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27071,
											"end": 27088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27071,
											"end": 27088,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27071,
											"end": 27162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27071,
											"end": 27162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27071,
											"end": 27162,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27071,
											"end": 27162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 27221,
											"end": 27227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27196,
											"end": 27216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27206,
											"end": 27215,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27216,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27196,
											"end": 27216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27216,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27196,
											"end": 27216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27216,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27196,
											"end": 27216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27216,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27196,
											"end": 27216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27196,
											"end": 27216,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27216,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 27196,
											"end": 27220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27196,
											"end": 27228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27196,
											"end": 27228,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 27196,
											"end": 27228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27173,
											"end": 27182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27173,
											"end": 27193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27183,
											"end": 27192,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27173,
											"end": 27193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27173,
											"end": 27193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27173,
											"end": 27193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27173,
											"end": 27193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27173,
											"end": 27193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27173,
											"end": 27193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27173,
											"end": 27193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27173,
											"end": 27193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27173,
											"end": 27193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27173,
											"end": 27193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27173,
											"end": 27193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27173,
											"end": 27193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27173,
											"end": 27193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27173,
											"end": 27193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27173,
											"end": 27193,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27173,
											"end": 27228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27173,
											"end": 27228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27173,
											"end": 27228,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27173,
											"end": 27228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27261,
											"end": 27270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27253,
											"end": 27259,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 27272,
											"end": 27278,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27244,
											"end": 27279,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 26748,
											"end": 27287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26748,
											"end": 27287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26748,
											"end": 27287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26748,
											"end": 27287,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21951,
											"end": 22143,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 21951,
											"end": 22143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22037,
											"end": 22044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22070,
											"end": 22071,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22065,
											"end": 22066,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22065,
											"end": 22071,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22065,
											"end": 22071,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22073,
											"end": 22085,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22097,
											"end": 22106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22113,
											"end": 22114,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22109,
											"end": 22110,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22109,
											"end": 22114,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22097,
											"end": 22114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22097,
											"end": 22114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22127,
											"end": 22135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22127,
											"end": 22135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22127,
											"end": 22135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21951,
											"end": 22143,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21951,
											"end": 22143,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21951,
											"end": 22143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21951,
											"end": 22143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21951,
											"end": 22143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21951,
											"end": 22143,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14818,
											"end": 15188,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 14818,
											"end": 15188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14871,
											"end": 14878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14954,
											"end": 14963,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 14943,
											"end": 14963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14943,
											"end": 14963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15001,
											"end": 15017,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 14990,
											"end": 14997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14986,
											"end": 15181,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14986,
											"end": 15181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 14986,
											"end": 15181,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15065,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 15034,
											"end": 15065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15034,
											"end": 15065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15034,
											"end": 15065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15034,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 15034,
											"end": 15065,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14986,
											"end": 15181,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 14986,
											"end": 15181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15105,
											"end": 15169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 15127,
											"end": 15137,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 15139,
											"end": 15151,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 15153,
											"end": 15168,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 15105,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 15105,
											"end": 15169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15105,
											"end": 15169,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 15105,
											"end": 15169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15098,
											"end": 15169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15098,
											"end": 15169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15098,
											"end": 15169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14818,
											"end": 15188,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 14818,
											"end": 15188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14818,
											"end": 15188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14818,
											"end": 15188,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27295,
											"end": 27669,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 27295,
											"end": 27669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27398,
											"end": 27399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27379,
											"end": 27400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27379,
											"end": 27400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27379,
											"end": 27386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27379,
											"end": 27400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27379,
											"end": 27400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27379,
											"end": 27400,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27379,
											"end": 27400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 27371,
											"end": 27436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 27476,
											"end": 27477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27480,
											"end": 27487,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27489,
											"end": 27495,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 27447,
											"end": 27496,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27447,
											"end": 27496,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 27447,
											"end": 27496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27522,
											"end": 27546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 27539,
											"end": 27545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27522,
											"end": 27534,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27522,
											"end": 27534,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27522,
											"end": 27538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 27522,
											"end": 27538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27522,
											"end": 27546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27522,
											"end": 27546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27522,
											"end": 27546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27522,
											"end": 27546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27522,
											"end": 27546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27522,
											"end": 27546,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 27522,
											"end": 27546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27507,
											"end": 27519,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27507,
											"end": 27546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27507,
											"end": 27546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27507,
											"end": 27546,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27507,
											"end": 27546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 27601,
											"end": 27607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27578,
											"end": 27596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 27595,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27596,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27578,
											"end": 27596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27596,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27578,
											"end": 27596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27596,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27578,
											"end": 27596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27596,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27578,
											"end": 27596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27578,
											"end": 27596,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 27578,
											"end": 27600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27578,
											"end": 27608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27578,
											"end": 27608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27578,
											"end": 27608,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 27578,
											"end": 27608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27557,
											"end": 27566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27557,
											"end": 27575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27567,
											"end": 27574,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27557,
											"end": 27575,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27557,
											"end": 27575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27557,
											"end": 27575,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27557,
											"end": 27575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27557,
											"end": 27575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27557,
											"end": 27575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27557,
											"end": 27575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27557,
											"end": 27575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27557,
											"end": 27575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27557,
											"end": 27575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27557,
											"end": 27575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27557,
											"end": 27575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27557,
											"end": 27575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27557,
											"end": 27575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27557,
											"end": 27575,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27557,
											"end": 27608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27557,
											"end": 27608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27557,
											"end": 27608,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27557,
											"end": 27608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27645,
											"end": 27652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 27654,
											"end": 27660,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27624,
											"end": 27661,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 27295,
											"end": 27669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27295,
											"end": 27669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27295,
											"end": 27669,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27677,
											"end": 28095,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 27677,
											"end": 28095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27780,
											"end": 27781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27761,
											"end": 27782,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27761,
											"end": 27782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27761,
											"end": 27768,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27761,
											"end": 27782,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27761,
											"end": 27782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27761,
											"end": 27782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27761,
											"end": 27782,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "PUSH data",
											"source": 0,
											"value": "B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F"
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 27753,
											"end": 27820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27833,
											"end": 27882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 27854,
											"end": 27861,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27871,
											"end": 27872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27875,
											"end": 27881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27833,
											"end": 27853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 27833,
											"end": 27882,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27833,
											"end": 27882,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 27833,
											"end": 27882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 27939,
											"end": 27945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "PUSH data",
											"source": 0,
											"value": "149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD"
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27916,
											"end": 27934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27926,
											"end": 27933,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27916,
											"end": 27934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27916,
											"end": 27934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27916,
											"end": 27934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27916,
											"end": 27934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27916,
											"end": 27934,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 27916,
											"end": 27938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 27916,
											"end": 27984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27895,
											"end": 27904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27895,
											"end": 27913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27905,
											"end": 27912,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27895,
											"end": 27913,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27895,
											"end": 27913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27895,
											"end": 27913,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27895,
											"end": 27913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27895,
											"end": 27913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27895,
											"end": 27913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27895,
											"end": 27913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27895,
											"end": 27913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27895,
											"end": 27913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27895,
											"end": 27913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27895,
											"end": 27913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27895,
											"end": 27913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27895,
											"end": 27913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27895,
											"end": 27913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27895,
											"end": 27913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27895,
											"end": 27984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27895,
											"end": 27984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27895,
											"end": 27984,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27895,
											"end": 27984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28010,
											"end": 28034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 28027,
											"end": 28033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28010,
											"end": 28022,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28010,
											"end": 28022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28010,
											"end": 28026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 28010,
											"end": 28026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28010,
											"end": 28034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28010,
											"end": 28034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28010,
											"end": 28034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28010,
											"end": 28034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28010,
											"end": 28034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28010,
											"end": 28034,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 28010,
											"end": 28034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27995,
											"end": 28007,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27995,
											"end": 28034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27995,
											"end": 28034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27995,
											"end": 28034,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27995,
											"end": 28034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28076,
											"end": 28077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28059,
											"end": 28066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 28080,
											"end": 28086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28087,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 27677,
											"end": 28095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27677,
											"end": 28095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27677,
											"end": 28095,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32096,
											"end": 32391,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 32096,
											"end": 32391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32170,
											"end": 32197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 32236,
											"end": 32243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "PUSH data",
											"source": 0,
											"value": "A287C363786607A1457A2D9D12FA61C0073358E02D76B4035FC2C2D86A19C0DB"
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 32210,
											"end": 32218,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32230,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 32200,
											"end": 32231,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32200,
											"end": 32231,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 32200,
											"end": 32231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 32200,
											"end": 32235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 32200,
											"end": 32284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32170,
											"end": 32284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32170,
											"end": 32284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32297,
											"end": 32348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 32306,
											"end": 32314,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32316,
											"end": 32326,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32328,
											"end": 32347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32297,
											"end": 32305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32297,
											"end": 32348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32297,
											"end": 32348,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 32297,
											"end": 32348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32359,
											"end": 32383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 32365,
											"end": 32373,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32375,
											"end": 32382,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32359,
											"end": 32364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 32359,
											"end": 32383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32359,
											"end": 32383,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 32359,
											"end": 32383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32096,
											"end": 32391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32096,
											"end": 32391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32096,
											"end": 32391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32096,
											"end": 32391,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23732,
											"end": 23846,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 23732,
											"end": 23846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23797,
											"end": 23804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23824,
											"end": 23831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23824,
											"end": 23838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23824,
											"end": 23838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23824,
											"end": 23838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23817,
											"end": 23838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23817,
											"end": 23838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23732,
											"end": 23846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23732,
											"end": 23846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23732,
											"end": 23846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23732,
											"end": 23846,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31106,
											"end": 31313,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 31106,
											"end": 31313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31166,
											"end": 31181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31194,
											"end": 31224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31227,
											"end": 31234,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31227,
											"end": 31241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31235,
											"end": 31240,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31227,
											"end": 31241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31227,
											"end": 31241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31227,
											"end": 31241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31227,
											"end": 31241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31227,
											"end": 31241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31227,
											"end": 31241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31227,
											"end": 31241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31227,
											"end": 31241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31227,
											"end": 31241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31227,
											"end": 31241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31227,
											"end": 31241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31227,
											"end": 31241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31227,
											"end": 31241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31227,
											"end": 31241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31227,
											"end": 31241,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31194,
											"end": 31241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31194,
											"end": 31241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31262,
											"end": 31277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 31262,
											"end": 31267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31262,
											"end": 31275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 31262,
											"end": 31277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31262,
											"end": 31277,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 31262,
											"end": 31277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31252,
											"end": 31277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31252,
											"end": 31277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31288,
											"end": 31305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 31288,
											"end": 31293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31288,
											"end": 31303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 31288,
											"end": 31305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31288,
											"end": 31305,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 31288,
											"end": 31305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31106,
											"end": 31313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31106,
											"end": 31313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31106,
											"end": 31313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31106,
											"end": 31313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31106,
											"end": 31313,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16188,
											"end": 16355,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 16188,
											"end": 16355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16292,
											"end": 16347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 16314,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 16314,
											"end": 16332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16314,
											"end": 16334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16314,
											"end": 16334,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 16314,
											"end": 16334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16292,
											"end": 16313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 16292,
											"end": 16347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16292,
											"end": 16347,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 16292,
											"end": 16347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16285,
											"end": 16347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16285,
											"end": 16347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16188,
											"end": 16355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16188,
											"end": 16355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16188,
											"end": 16355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16188,
											"end": 16355,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10292,
											"end": 10571,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 10292,
											"end": 10571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10441,
											"end": 10458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10482,
											"end": 10507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 10493,
											"end": 10497,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10499,
											"end": 10500,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10502,
											"end": 10503,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10505,
											"end": 10506,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10482,
											"end": 10492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 10482,
											"end": 10507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10482,
											"end": 10507,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 10482,
											"end": 10507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10440,
											"end": 10507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10518,
											"end": 10536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 10530,
											"end": 10535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10518,
											"end": 10529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 10518,
											"end": 10536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10518,
											"end": 10536,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 10518,
											"end": 10536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10554,
											"end": 10563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10547,
											"end": 10563,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10547,
											"end": 10563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10547,
											"end": 10563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10547,
											"end": 10563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10571,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10571,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10571,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28455,
											"end": 28552,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 28455,
											"end": 28552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28455,
											"end": 28552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28455,
											"end": 28552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28455,
											"end": 28552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28455,
											"end": 28552,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15196,
											"end": 15546,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 15196,
											"end": 15546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15360,
											"end": 15375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15421,
											"end": 15430,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 15410,
											"end": 15430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15410,
											"end": 15430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15489,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15491,
											"end": 15499,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15501,
											"end": 15512,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15514,
											"end": 15521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15535,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15470,
											"end": 15537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15460,
											"end": 15538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15460,
											"end": 15538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15460,
											"end": 15538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15460,
											"end": 15538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15460,
											"end": 15538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15460,
											"end": 15538,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15453,
											"end": 15538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15453,
											"end": 15538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15453,
											"end": 15538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15546,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15546,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15546,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21807,
											"end": 21943,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 21807,
											"end": 21943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21865,
											"end": 21872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 21896,
											"end": 21897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21899,
											"end": 21900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21892,
											"end": 21895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 21892,
											"end": 21935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21885,
											"end": 21935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21885,
											"end": 21935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21807,
											"end": 21943,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21807,
											"end": 21943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21807,
											"end": 21943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21807,
											"end": 21943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21807,
											"end": 21943,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23854,
											"end": 24035,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 23854,
											"end": 24035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24026,
											"end": 24027,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24008,
											"end": 24015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24008,
											"end": 24022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24008,
											"end": 24027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24027,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24027,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24027,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24008,
											"end": 24027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23854,
											"end": 24035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23854,
											"end": 24035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11490,
											"end": 11686,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 11490,
											"end": 11686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11583,
											"end": 11590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11649,
											"end": 11664,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11666,
											"end": 11676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "PUSH",
											"source": 0,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11620,
											"end": 11677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11610,
											"end": 11678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11610,
											"end": 11678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11610,
											"end": 11678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11610,
											"end": 11678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11610,
											"end": 11678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11610,
											"end": 11678,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11603,
											"end": 11678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11603,
											"end": 11678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11490,
											"end": 11686,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11490,
											"end": 11686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11490,
											"end": 11686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11490,
											"end": 11686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11490,
											"end": 11686,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8521,
											"end": 10153,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8521,
											"end": 10153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8652,
											"end": 8659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8661,
											"end": 8673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9586,
											"end": 9652,
											"name": "PUSH",
											"source": 0,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 9581,
											"end": 9582,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9573,
											"end": 9583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9573,
											"end": 9583,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 9573,
											"end": 9652,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9569,
											"end": 9732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9569,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 9569,
											"end": 9732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 9686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9689,
											"end": 9719,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9669,
											"end": 9720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9669,
											"end": 9720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9669,
											"end": 9720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9669,
											"end": 9720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9669,
											"end": 9720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 9669,
											"end": 9720,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9569,
											"end": 9732,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 9569,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9751,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 9746,
											"end": 9747,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9746,
											"end": 9753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9753,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9764,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 9757,
											"end": 9758,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9764,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9757,
											"end": 9764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9764,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 9742,
											"end": 9844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9801,
											"end": 9831,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9781,
											"end": 9832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9781,
											"end": 9832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9781,
											"end": 9832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9781,
											"end": 9832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9781,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 9781,
											"end": 9832,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9844,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 9742,
											"end": 9844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9968,
											"end": 9972,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9974,
											"end": 9975,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 9978,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9980,
											"end": 9981,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10015,
											"end": 10016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9997,
											"end": 10017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9997,
											"end": 10017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9997,
											"end": 10003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9997,
											"end": 10017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9997,
											"end": 10017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9997,
											"end": 10017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9993,
											"end": 10096,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9993,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 9993,
											"end": 10096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10050,
											"end": 10051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10054,
											"end": 10083,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10034,
											"end": 10084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10034,
											"end": 10084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10034,
											"end": 10084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10034,
											"end": 10084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10034,
											"end": 10084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10034,
											"end": 10084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 10034,
											"end": 10084,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9993,
											"end": 10096,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 9993,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10124,
											"end": 10144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10108,
											"end": 10145,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10108,
											"end": 10145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10108,
											"end": 10145,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10108,
											"end": 10145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10108,
											"end": 10145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8521,
											"end": 10153,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 8521,
											"end": 10153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8521,
											"end": 10153,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8521,
											"end": 10153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8521,
											"end": 10153,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8521,
											"end": 10153,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8521,
											"end": 10153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8521,
											"end": 10153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8521,
											"end": 10153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8521,
											"end": 10153,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3183,
											"end": 3826,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3183,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3819,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 3248,
											"end": 3819,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 3298,
											"end": 3305,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3819,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 3248,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3388,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3819,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 3346,
											"end": 3819,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "PUSH",
											"source": 0,
											"value": "45434453413A20696E76616C6964207369676E61747572650000000000000000"
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3439,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3819,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 3346,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3470,
											"end": 3505,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3819,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 3457,
											"end": 3819,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "PUSH",
											"source": 0,
											"value": "45434453413A20696E76616C6964207369676E6174757265206C656E67746800"
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3563,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3819,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 3457,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3594,
											"end": 3624,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3624,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3581,
											"end": 3819,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3581,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 3581,
											"end": 3819,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "PUSH data",
											"source": 0,
											"value": "520D1F787DBCAFBBFC007FD2C4ECF3D2711EC587F3EE9A1215C0B646C3E530BD"
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3685,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3581,
											"end": 3819,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 3581,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3746,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3703,
											"end": 3819,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3703,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3703,
											"end": 3819,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "PUSH data",
											"source": 0,
											"value": "8522EE1B53216F595394DB8E80A64D9E7D9BD512C0811C18DEBE9F40858597E4"
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3807,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3703,
											"end": 3819,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3703,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3826,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 3183,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3826,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"520D1F787DBCAFBBFC007FD2C4ECF3D2711EC587F3EE9A1215C0B646C3E530BD": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"8522EE1B53216F595394DB8E80A64D9E7D9BD512C0811C18DEBE9F40858597E4": "45434453413a20696e76616c6964207369676e6174757265202776272076616c7565",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A287C363786607A1457A2D9D12FA61C0073358E02D76B4035FC2C2D86A19C0DB": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
										"B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"authority()": "bf7e214f",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"setAuthority(address)": "7a9e5e4b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authority\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IOlympusAuthority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract IOlympusAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOlympusAuthority\",\"name\":\"_newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":\"RENACECOIN\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":{\"keccak256\":\"0x1564a6f32082613b8d5a8f0addb2d397472d882d44960cc06e4a8a569d21b870\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://af62e5bf0932d768c09a2ef90786a65c33bdf2da2ca5e8ae7e81d2033f9852c8\",\"dweb:/ipfs/QmbvVgaZV2LPHMqgpiqoNLbxSzu35LPLMT57FkjoDbkPXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1092,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:RENACECOIN",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1098,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:RENACECOIN",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1100,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:RENACECOIN",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1102,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:RENACECOIN",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1104,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:RENACECOIN",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1567,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:RENACECOIN",
								"label": "_nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(Counter)1037_storage)"
							},
							{
								"astId": 86,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:RENACECOIN",
								"label": "UNAUTHORIZED",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 88,
								"contract": "Tokenrenacecoin/tokenrenacecoin.sol:RENACECOIN",
								"label": "authority",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IOlympusAuthority)78"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IOlympusAuthority)78": {
								"encoding": "inplace",
								"label": "contract IOlympusAuthority",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)1037_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)1037_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1037_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1036,
										"contract": "Tokenrenacecoin/tokenrenacecoin.sol:RENACECOIN",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21592:23218  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Tokenrenacecoin/tokenrenacecoin.sol\":21592:23218  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f1f73f9bd9f7a2fb93492bd505defe33ab98f23eaa117c8d12c0f0e602e013fb64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f1f73f9bd9f7a2fb93492bd505defe33ab98f23eaa117c8d12c0f0e602e013fb64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xF7 EXTCODEHASH SWAP12 0xD9 0xF7 LOG2 0xFB SWAP4 0x49 0x2B 0xD5 SDIV 0xDE INVALID CALLER 0xAB SWAP9 CALLCODE RETURNDATACOPY 0xAA GT PUSH29 0x8D12C0F0E602E013FB64736F6C63430007050033000000000000000000 ",
							"sourceMap": "21592:1626:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f1f73f9bd9f7a2fb93492bd505defe33ab98f23eaa117c8d12c0f0e602e013fb64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xF7 EXTCODEHASH SWAP12 0xD9 0xF7 LOG2 0xFB SWAP4 0x49 0x2B 0xD5 SDIV 0xDE INVALID CALLER 0xAB SWAP9 CALLCODE RETURNDATACOPY 0xAA GT PUSH29 0x8D12C0F0E602E013FB64736F6C63430007050033000000000000000000 ",
							"sourceMap": "21592:1626:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sqrrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 21592,
									"end": 23218,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21592,
									"end": 23218,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f1f73f9bd9f7a2fb93492bd505defe33ab98f23eaa117c8d12c0f0e602e013fb64736f6c63430007050033",
									".code": [
										{
											"begin": 21592,
											"end": 23218,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 21592,
											"end": 23218,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 21592,
											"end": 23218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21592,
											"end": 23218,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21592,
											"end": 23218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21592,
											"end": 23218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21592,
											"end": 23218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21592,
											"end": 23218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21592,
											"end": 23218,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tokenrenacecoin/tokenrenacecoin.sol\":{\"keccak256\":\"0x1564a6f32082613b8d5a8f0addb2d397472d882d44960cc06e4a8a569d21b870\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://af62e5bf0932d768c09a2ef90786a65c33bdf2da2ca5e8ae7e81d2033f9852c8\",\"dweb:/ipfs/QmbvVgaZV2LPHMqgpiqoNLbxSzu35LPLMT57FkjoDbkPXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Tokenrenacecoin/tokenrenacecoin.sol": {
				"ast": {
					"absolutePath": "Tokenrenacecoin/tokenrenacecoin.sol",
					"exportedSymbols": {
						"Counters": [
							1077
						],
						"ECDSA": [
							534
						],
						"EIP712": [
							679
						],
						"ERC20": [
							1552
						],
						"ERC20Permit": [
							1712
						],
						"IERC20": [
							790
						],
						"IERC20Permit": [
							714
						],
						"IOHM": [
							813
						],
						"IOlympusAuthority": [
							78
						],
						"OlympusAccessControlled": [
							175
						],
						"RENACECOIN": [
							1822
						],
						"SafeMath": [
							1030
						]
					},
					"id": 1823,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "379:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 78,
							"linearizedBaseContracts": [
								78
							],
							"name": "IOlympusAuthority",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 9,
									"name": "GovernorPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "504:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "526:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "_effectiveImmediately",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "546:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "546:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:70:0"
									},
									"src": "483:91:0"
								},
								{
									"anonymous": false,
									"id": 17,
									"name": "GuardianPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "601:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "623:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"mutability": "mutable",
												"name": "_effectiveImmediately",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "643:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "643:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:70:0"
									},
									"src": "580:91:0"
								},
								{
									"anonymous": false,
									"id": 25,
									"name": "PolicyPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "696:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "718:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"indexed": false,
												"mutability": "mutable",
												"name": "_effectiveImmediately",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "738:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 22,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "738:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:70:0"
									},
									"src": "677:89:0"
								},
								{
									"anonymous": false,
									"id": 33,
									"name": "VaultPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "790:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "812:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "_effectiveImmediately",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "832:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "832:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:70:0"
									},
									"src": "772:88:0"
								},
								{
									"anonymous": false,
									"id": 39,
									"name": "GovernorPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "889:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "911:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:42:0"
									},
									"src": "868:63:0"
								},
								{
									"anonymous": false,
									"id": 45,
									"name": "GuardianPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "958:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "980:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:42:0"
									},
									"src": "937:63:0"
								},
								{
									"anonymous": false,
									"id": 51,
									"name": "PolicyPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1025:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1047:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1047:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1024:42:0"
									},
									"src": "1006:61:0"
								},
								{
									"anonymous": false,
									"id": 57,
									"name": "VaultPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1091:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1113:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:42:0"
									},
									"src": "1073:60:0"
								},
								{
									"functionSelector": "0c340a24",
									"id": 62,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1198:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1224:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1223:9:0"
									},
									"scope": 78,
									"src": "1181:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "452a9320",
									"id": 67,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "guardian",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1256:2:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1282:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1281:9:0"
									},
									"scope": 78,
									"src": "1239:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0505c8c9",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "policy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1312:2:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1338:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:9:0"
									},
									"scope": 78,
									"src": "1297:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbfa77cf",
									"id": 77,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vault",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1367:2:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1393:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:9:0"
									},
									"scope": 78,
									"src": "1353:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1823,
							"src": "406:999:0"
						},
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "1455:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 175,
							"linearizedBaseContracts": [
								175
							],
							"name": "OlympusAccessControlled",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 83,
									"name": "AuthorityUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "authority",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1601:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
													"typeString": "contract IOlympusAuthority"
												},
												"typeName": {
													"id": 80,
													"name": "IOlympusAuthority",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 78,
													"src": "1601:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
														"typeString": "contract IOlympusAuthority"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1600:37:0"
									},
									"src": "1578:60:0"
								},
								{
									"constant": false,
									"id": 86,
									"mutability": "mutable",
									"name": "UNAUTHORIZED",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "1646:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 84,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "554e415554484f52495a4544",
										"id": 85,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1668:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
											"typeString": "literal_string \"UNAUTHORIZED\""
										},
										"value": "UNAUTHORIZED"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "bf7e214f",
									"id": 88,
									"mutability": "mutable",
									"name": "authority",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "1754:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
										"typeString": "contract IOlympusAuthority"
									},
									"typeName": {
										"id": 87,
										"name": "IOlympusAuthority",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 78,
										"src": "1754:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
											"typeString": "contract IOlympusAuthority"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1888:85:0",
										"statements": [
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "authority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "1899:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
															"typeString": "contract IOlympusAuthority"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "_authority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "1911:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
															"typeString": "contract IOlympusAuthority"
														}
													},
													"src": "1899:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
														"typeString": "contract IOlympusAuthority"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "1899:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "_authority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "1954:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
																"typeString": "contract IOlympusAuthority"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
																"typeString": "contract IOlympusAuthority"
															}
														],
														"id": 97,
														"name": "AuthorityUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "1937:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IOlympusAuthority_$78_$returns$__$",
															"typeString": "function (contract IOlympusAuthority)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1937:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "1932:33:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "_authority",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1858:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
													"typeString": "contract IOlympusAuthority"
												},
												"typeName": {
													"id": 89,
													"name": "IOlympusAuthority",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 78,
													"src": "1858:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
														"typeString": "contract IOlympusAuthority"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1857:30:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1888:0:0"
									},
									"scope": 175,
									"src": "1846:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "2052:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 105,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "2071:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2071:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 107,
																		"name": "authority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 88,
																		"src": "2085:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
																			"typeString": "contract IOlympusAuthority"
																		}
																	},
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "governor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 62,
																	"src": "2085:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2085:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2071:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 111,
															"name": "UNAUTHORIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2107:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2063:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2063:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2063:57:0"
											},
											{
												"id": 114,
												"nodeType": "PlaceholderStatement",
												"src": "2131:1:0"
											}
										]
									},
									"id": 116,
									"name": "onlyGovernor",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2049:2:0"
									},
									"src": "2028:112:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "2172:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 119,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "2191:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2191:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 121,
																		"name": "authority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 88,
																		"src": "2205:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
																			"typeString": "contract IOlympusAuthority"
																		}
																	},
																	"id": 122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "guardian",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 67,
																	"src": "2205:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2205:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2191:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 125,
															"name": "UNAUTHORIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2227:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2183:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2183:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "2183:57:0"
											},
											{
												"id": 128,
												"nodeType": "PlaceholderStatement",
												"src": "2251:1:0"
											}
										]
									},
									"id": 130,
									"name": "onlyGuardian",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:2:0"
									},
									"src": "2148:112:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "2290:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 133,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "2309:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2309:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 135,
																		"name": "authority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 88,
																		"src": "2323:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
																			"typeString": "contract IOlympusAuthority"
																		}
																	},
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "policy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 72,
																	"src": "2323:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2323:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2309:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 139,
															"name": "UNAUTHORIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2343:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2301:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2301:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2301:55:0"
											},
											{
												"id": 142,
												"nodeType": "PlaceholderStatement",
												"src": "2367:1:0"
											}
										]
									},
									"id": 144,
									"name": "onlyPolicy",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2287:2:0"
									},
									"src": "2268:108:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "2405:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 147,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "2424:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2424:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 149,
																		"name": "authority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 88,
																		"src": "2438:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
																			"typeString": "contract IOlympusAuthority"
																		}
																	},
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "vault",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 77,
																	"src": "2438:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2438:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2424:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 153,
															"name": "UNAUTHORIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2457:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2416:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2416:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2416:54:0"
											},
											{
												"id": 156,
												"nodeType": "PlaceholderStatement",
												"src": "2481:1:0"
											}
										]
									},
									"id": 158,
									"name": "onlyVault",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2402:2:0"
									},
									"src": "2384:106:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "2619:91:0",
										"statements": [
											{
												"expression": {
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 165,
														"name": "authority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "2630:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
															"typeString": "contract IOlympusAuthority"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 166,
														"name": "_newAuthority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2642:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
															"typeString": "contract IOlympusAuthority"
														}
													},
													"src": "2630:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
														"typeString": "contract IOlympusAuthority"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "2630:25:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 170,
															"name": "_newAuthority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "2688:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
																"typeString": "contract IOlympusAuthority"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
																"typeString": "contract IOlympusAuthority"
															}
														],
														"id": 169,
														"name": "AuthorityUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "2671:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IOlympusAuthority_$78_$returns$__$",
															"typeString": "function (contract IOlympusAuthority)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2671:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "EmitStatement",
												"src": "2666:36:0"
											}
										]
									},
									"functionSelector": "7a9e5e4b",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 163,
											"modifierName": {
												"id": 162,
												"name": "onlyGovernor",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 116,
												"src": "2606:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2606:12:0"
										}
									],
									"name": "setAuthority",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "_newAuthority",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2564:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
													"typeString": "contract IOlympusAuthority"
												},
												"typeName": {
													"id": 159,
													"name": "IOlympusAuthority",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 78,
													"src": "2564:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
														"typeString": "contract IOlympusAuthority"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:33:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2619:0:0"
									},
									"scope": 175,
									"src": "2542:168:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1823,
							"src": "1485:1228:0"
						},
						{
							"id": 176,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "2756:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 177,
								"nodeType": "StructuredDocumentation",
								"src": "2783:210:0",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 534,
							"linearizedBaseContracts": [
								534
							],
							"name": "ECDSA",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 183,
									"members": [
										{
											"id": 178,
											"name": "NoError",
											"nodeType": "EnumValue",
											"src": "3045:7:0"
										},
										{
											"id": 179,
											"name": "InvalidSignature",
											"nodeType": "EnumValue",
											"src": "3063:16:0"
										},
										{
											"id": 180,
											"name": "InvalidSignatureLength",
											"nodeType": "EnumValue",
											"src": "3090:22:0"
										},
										{
											"id": 181,
											"name": "InvalidSignatureS",
											"nodeType": "EnumValue",
											"src": "3123:17:0"
										},
										{
											"id": 182,
											"name": "InvalidSignatureV",
											"nodeType": "EnumValue",
											"src": "3151:17:0"
										}
									],
									"name": "RecoverError",
									"nodeType": "EnumDefinition",
									"src": "3016:159:0"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "3237:589:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$183",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 188,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "3252:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$183",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 189,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "3261:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$183_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"src": "3261:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$183",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "3252:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$183",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 194,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "3350:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$183",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 195,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "3359:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$183_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"src": "3359:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$183",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "3350:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$183",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 203,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "3461:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$183",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 204,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "3470:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$183_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"src": "3470:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$183",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "3461:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$183",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 212,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "3585:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$183",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 213,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 183,
																		"src": "3594:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$183_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"src": "3594:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$183",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "3585:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_RecoverError_$183",
																		"typeString": "enum ECDSA.RecoverError"
																	},
																	"id": 224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 221,
																		"name": "error",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "3707:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$183",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 222,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 183,
																			"src": "3716:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$183_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignatureV",
																		"nodeType": "MemberAccess",
																		"src": "3716:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$183",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	"src": "3707:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 230,
																"nodeType": "IfStatement",
																"src": "3703:116:0",
																"trueBody": {
																	"id": 229,
																	"nodeType": "Block",
																	"src": "3748:71:0",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"hexValue": "45434453413a20696e76616c6964207369676e6174757265202776272076616c7565",
																						"id": 226,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3770:36:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4",
																							"typeString": "literal_string \"ECDSA: invalid signature 'v' value\""
																						},
																						"value": "ECDSA: invalid signature 'v' value"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4",
																							"typeString": "literal_string \"ECDSA: invalid signature 'v' value\""
																						}
																					],
																					"id": 225,
																					"name": "revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						-19,
																						-19
																					],
																					"referencedDeclaration": -19,
																					"src": "3763:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																						"typeString": "function (string memory) pure"
																					}
																				},
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3763:44:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 228,
																			"nodeType": "ExpressionStatement",
																			"src": "3763:44:0"
																		}
																	]
																}
															},
															"id": 231,
															"nodeType": "IfStatement",
															"src": "3581:238:0",
															"trueBody": {
																"id": 220,
																"nodeType": "Block",
																"src": "3626:71:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
																					"id": 217,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3648:36:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					},
																					"value": "ECDSA: invalid signature 's' value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					}
																				],
																				"id": 216,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "3641:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3641:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 219,
																		"nodeType": "ExpressionStatement",
																		"src": "3641:44:0"
																	}
																]
															}
														},
														"id": 232,
														"nodeType": "IfStatement",
														"src": "3457:362:0",
														"trueBody": {
															"id": 211,
															"nodeType": "Block",
															"src": "3507:68:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																				"id": 208,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3529:33:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				},
																				"value": "ECDSA: invalid signature length"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				}
																			],
																			"id": 207,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				-19,
																				-19
																			],
																			"referencedDeclaration": -19,
																			"src": "3522:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3522:41:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 210,
																	"nodeType": "ExpressionStatement",
																	"src": "3522:41:0"
																}
															]
														}
													},
													"id": 233,
													"nodeType": "IfStatement",
													"src": "3346:473:0",
													"trueBody": {
														"id": 202,
														"nodeType": "Block",
														"src": "3390:61:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																			"id": 199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3412:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			},
																			"value": "ECDSA: invalid signature"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			}
																		],
																		"id": 198,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			-19,
																			-19
																		],
																		"referencedDeclaration": -19,
																		"src": "3405:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3405:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 201,
																"nodeType": "ExpressionStatement",
																"src": "3405:34:0"
															}
														]
													}
												},
												"id": 234,
												"nodeType": "IfStatement",
												"src": "3248:571:0",
												"trueBody": {
													"id": 193,
													"nodeType": "Block",
													"src": "3283:57:0",
													"statements": [
														{
															"functionReturnParameters": 187,
															"id": 192,
															"nodeType": "Return",
															"src": "3298:7:0"
														}
													]
												}
											}
										]
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "error",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3204:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$183",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 184,
													"name": "RecoverError",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 183,
													"src": "3204:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$183",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3203:20:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3237:0:0"
									},
									"scope": 534,
									"src": "3183:643:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "5016:1204:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 248,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "5227:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5227:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5247:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "5227:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 270,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "5721:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5721:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "3634",
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5741:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"src": "5721:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 296,
														"nodeType": "Block",
														"src": "6130:83:0",
														"statements": [
															{
																"expression": {
																	"components": [
																		{
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 290,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6161:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6153:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 288,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6153:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6153:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		{
																			"expression": {
																				"id": 292,
																				"name": "RecoverError",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 183,
																				"src": "6165:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_RecoverError_$183_$",
																					"typeString": "type(enum ECDSA.RecoverError)"
																				}
																			},
																			"id": 293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "InvalidSignatureLength",
																			"nodeType": "MemberAccess",
																			"src": "6165:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_RecoverError_$183",
																				"typeString": "enum ECDSA.RecoverError"
																			}
																		}
																	],
																	"id": 294,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6152:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_payable_$_t_enum$_RecoverError_$183_$",
																		"typeString": "tuple(address payable,enum ECDSA.RecoverError)"
																	}
																},
																"functionReturnParameters": 247,
																"id": 295,
																"nodeType": "Return",
																"src": "6145:56:0"
															}
														]
													},
													"id": 297,
													"nodeType": "IfStatement",
													"src": "5717:496:0",
													"trueBody": {
														"id": 287,
														"nodeType": "Block",
														"src": "5745:379:0",
														"statements": [
															{
																"assignments": [
																	275
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 275,
																		"mutability": "mutable",
																		"name": "r",
																		"nodeType": "VariableDeclaration",
																		"scope": 287,
																		"src": "5760:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"typeName": {
																			"id": 274,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "5760:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 276,
																"nodeType": "VariableDeclarationStatement",
																"src": "5760:9:0"
															},
															{
																"assignments": [
																	278
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 278,
																		"mutability": "mutable",
																		"name": "vs",
																		"nodeType": "VariableDeclaration",
																		"scope": 287,
																		"src": "5784:10:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"typeName": {
																			"id": 277,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "5784:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 279,
																"nodeType": "VariableDeclarationStatement",
																"src": "5784:10:0"
															},
															{
																"AST": {
																	"nodeType": "YulBlock",
																	"src": "5951:117:0",
																	"statements": [
																		{
																			"nodeType": "YulAssignment",
																			"src": "5970:32:0",
																			"value": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "signature",
																								"nodeType": "YulIdentifier",
																								"src": "5985:9:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5996:4:0",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5981:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5981:20:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "5975:5:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5975:27:0"
																			},
																			"variableNames": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "5970:1:0"
																				}
																			]
																		},
																		{
																			"nodeType": "YulAssignment",
																			"src": "6020:33:0",
																			"value": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "signature",
																								"nodeType": "YulIdentifier",
																								"src": "6036:9:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6047:4:0",
																								"type": "",
																								"value": "0x40"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6032:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6032:20:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "6026:5:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6026:27:0"
																			},
																			"variableNames": [
																				{
																					"name": "vs",
																					"nodeType": "YulIdentifier",
																					"src": "6020:2:0"
																				}
																			]
																		}
																	]
																},
																"evmVersion": "istanbul",
																"externalReferences": [
																	{
																		"declaration": 275,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "5970:1:0",
																		"valueSize": 1
																	},
																	{
																		"declaration": 241,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "5985:9:0",
																		"valueSize": 1
																	},
																	{
																		"declaration": 241,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "6036:9:0",
																		"valueSize": 1
																	},
																	{
																		"declaration": 278,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "6020:2:0",
																		"valueSize": 1
																	}
																],
																"id": 280,
																"nodeType": "InlineAssembly",
																"src": "5942:126:0"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 282,
																			"name": "hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 239,
																			"src": "6100:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 283,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 275,
																			"src": "6106:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 284,
																			"name": "vs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 278,
																			"src": "6109:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 281,
																		"name": "tryRecover",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			300,
																			355,
																			464
																		],
																		"referencedDeclaration": 355,
																		"src": "6089:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$183_$",
																			"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6089:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$183_$",
																		"typeString": "tuple(address,enum ECDSA.RecoverError)"
																	}
																},
																"functionReturnParameters": 247,
																"id": 286,
																"nodeType": "Return",
																"src": "6082:30:0"
															}
														]
													}
												},
												"id": 298,
												"nodeType": "IfStatement",
												"src": "5223:990:0",
												"trueBody": {
													"id": 269,
													"nodeType": "Block",
													"src": "5251:460:0",
													"statements": [
														{
															"assignments": [
																253
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 253,
																	"mutability": "mutable",
																	"name": "r",
																	"nodeType": "VariableDeclaration",
																	"scope": 269,
																	"src": "5266:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 252,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "5266:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 254,
															"nodeType": "VariableDeclarationStatement",
															"src": "5266:9:0"
														},
														{
															"assignments": [
																256
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 256,
																	"mutability": "mutable",
																	"name": "s",
																	"nodeType": "VariableDeclaration",
																	"scope": 269,
																	"src": "5290:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 255,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "5290:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 257,
															"nodeType": "VariableDeclarationStatement",
															"src": "5290:9:0"
														},
														{
															"assignments": [
																259
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 259,
																	"mutability": "mutable",
																	"name": "v",
																	"nodeType": "VariableDeclaration",
																	"scope": 269,
																	"src": "5314:7:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 258,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "5314:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 260,
															"nodeType": "VariableDeclarationStatement",
															"src": "5314:7:0"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "5478:175:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5497:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "5512:9:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5523:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5508:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5508:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5502:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5502:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5497:1:0"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5547:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "5562:9:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5573:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5558:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5558:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5552:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5552:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nodeType": "YulIdentifier",
																				"src": "5547:1:0"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5597:41:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5607:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nodeType": "YulIdentifier",
																									"src": "5620:9:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5631:4:0",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5616:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5616:20:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5610:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5610:27:0"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nodeType": "YulIdentifier",
																				"src": "5602:4:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5602:36:0"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "5597:1:0"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 253,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5497:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 256,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5547:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 241,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5512:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 241,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5562:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 241,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5620:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 259,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5597:1:0",
																	"valueSize": 1
																}
															],
															"id": 261,
															"nodeType": "InlineAssembly",
															"src": "5469:184:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 263,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 239,
																		"src": "5685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 264,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "5691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 265,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 253,
																		"src": "5694:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 266,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "5697:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 262,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		300,
																		355,
																		464
																	],
																	"referencedDeclaration": 464,
																	"src": "5674:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$183_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5674:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$183_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 247,
															"id": 268,
															"nodeType": "Return",
															"src": "5667:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "3834:1072:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4932:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 238,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4946:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4946:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4931:38:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4993:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "5002:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$183",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 245,
													"name": "RecoverError",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 183,
													"src": "5002:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$183",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4992:23:0"
									},
									"scope": 534,
									"src": "4912:1308:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "7109:144:0",
										"statements": [
											{
												"assignments": [
													311,
													313
												],
												"declarations": [
													{
														"constant": false,
														"id": 311,
														"mutability": "mutable",
														"name": "recovered",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "7121:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 310,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7121:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 313,
														"mutability": "mutable",
														"name": "error",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "7140:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$183",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 312,
															"name": "RecoverError",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 183,
															"src": "7140:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$183",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [
														{
															"id": 315,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "7173:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 316,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "7179:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 314,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															300,
															355,
															464
														],
														"referencedDeclaration": 300,
														"src": "7162:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$183_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7162:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$183_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7120:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "7212:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$183",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$183",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 319,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "7200:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$183_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7200:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "7200:18:0"
											},
											{
												"expression": {
													"id": 323,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 311,
													"src": "7236:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 309,
												"id": 324,
												"nodeType": "Return",
												"src": "7229:16:0"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "6228:788:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "7039:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "7053:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7053:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7038:38:0"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "7100:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7099:9:0"
									},
									"scope": 534,
									"src": "7022:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "7653:254:0",
										"statements": [
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "s",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "7664:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 340,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7664:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 342,
												"nodeType": "VariableDeclarationStatement",
												"src": "7664:9:0"
											},
											{
												"assignments": [
													344
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "v",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "7684:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 343,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "7684:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 345,
												"nodeType": "VariableDeclarationStatement",
												"src": "7684:7:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7711:146:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7726:80:0",
															"value": {
																"arguments": [
																	{
																		"name": "vs",
																		"nodeType": "YulIdentifier",
																		"src": "7735:2:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7739:66:0",
																		"type": "",
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7731:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7731:75:0"
															},
															"variableNames": [
																{
																	"name": "s",
																	"nodeType": "YulIdentifier",
																	"src": "7726:1:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7820:26:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7833:3:0",
																				"type": "",
																				"value": "255"
																			},
																			{
																				"name": "vs",
																				"nodeType": "YulIdentifier",
																				"src": "7838:2:0"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "7829:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7829:12:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7843:2:0",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7825:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7825:21:0"
															},
															"variableNames": [
																{
																	"name": "v",
																	"nodeType": "YulIdentifier",
																	"src": "7820:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 341,
														"isOffset": false,
														"isSlot": false,
														"src": "7726:1:0",
														"valueSize": 1
													},
													{
														"declaration": 344,
														"isOffset": false,
														"isSlot": false,
														"src": "7820:1:0",
														"valueSize": 1
													},
													{
														"declaration": 333,
														"isOffset": false,
														"isSlot": false,
														"src": "7735:2:0",
														"valueSize": 1
													},
													{
														"declaration": 333,
														"isOffset": false,
														"isSlot": false,
														"src": "7838:2:0",
														"valueSize": 1
													}
												],
												"id": 346,
												"nodeType": "InlineAssembly",
												"src": "7702:155:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "7885:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 349,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "7891:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 350,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "7894:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 351,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "7897:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 347,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															300,
															355,
															464
														],
														"referencedDeclaration": 464,
														"src": "7874:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$183_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7874:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$183_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 339,
												"id": 353,
												"nodeType": "Return",
												"src": "7867:32:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "7261:249:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "7546:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "7569:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 330,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "vs",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "7589:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 332,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7589:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7535:71:0"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "7630:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7630:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "7639:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$183",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 337,
													"name": "RecoverError",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 183,
													"src": "7639:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$183",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7629:23:0"
									},
									"scope": 534,
									"src": "7516:391:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "8199:140:0",
										"statements": [
											{
												"assignments": [
													368,
													370
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "recovered",
														"nodeType": "VariableDeclaration",
														"scope": 383,
														"src": "8211:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8211:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 370,
														"mutability": "mutable",
														"name": "error",
														"nodeType": "VariableDeclaration",
														"scope": 383,
														"src": "8230:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$183",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 369,
															"name": "RecoverError",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 183,
															"src": "8230:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$183",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 376,
												"initialValue": {
													"arguments": [
														{
															"id": 372,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "8263:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 373,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "8269:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 374,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "8272:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 371,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															300,
															355,
															464
														],
														"referencedDeclaration": 355,
														"src": "8252:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$183_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8252:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$183_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8210:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 378,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "8298:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$183",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$183",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 377,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "8286:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$183_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8286:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "8286:18:0"
											},
											{
												"expression": {
													"id": 381,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 368,
													"src": "8322:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 366,
												"id": 382,
												"nodeType": "Return",
												"src": "8315:16:0"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "7915:158:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "8106:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8106:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "8129:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 359,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8129:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "vs",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "8149:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8095:71:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "8190:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8190:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8189:9:0"
									},
									"scope": 534,
									"src": "8079:260:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "8675:1478:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 402,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "9581:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9573:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 400,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9573:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9573:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9586:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "9573:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 415,
												"nodeType": "IfStatement",
												"src": "9569:163:0",
												"trueBody": {
													"id": 414,
													"nodeType": "Block",
													"src": "9654:78:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9685:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9677:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 406,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9677:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9677:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"expression": {
																			"id": 410,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 183,
																			"src": "9689:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$183_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"src": "9689:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$183",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 412,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9676:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_payable_$_t_enum$_RecoverError_$183_$",
																	"typeString": "tuple(address payable,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 399,
															"id": 413,
															"nodeType": "Return",
															"src": "9669:51:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 416,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "9746:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "3237",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9751:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_27_by_1",
																"typeString": "int_const 27"
															},
															"value": "27"
														},
														"src": "9746:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 419,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "9757:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "3238",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9762:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_28_by_1",
																"typeString": "int_const 28"
															},
															"value": "28"
														},
														"src": "9757:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9746:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 432,
												"nodeType": "IfStatement",
												"src": "9742:102:0",
												"trueBody": {
													"id": 431,
													"nodeType": "Block",
													"src": "9766:78:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 425,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9797:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9789:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 423,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9789:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9789:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"expression": {
																			"id": 427,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 183,
																			"src": "9801:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$183_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignatureV",
																		"nodeType": "MemberAccess",
																		"src": "9801:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$183",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 429,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9788:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_payable_$_t_enum$_RecoverError_$183_$",
																	"typeString": "tuple(address payable,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 399,
															"id": 430,
															"nodeType": "Return",
															"src": "9781:51:0"
														}
													]
												}
											},
											{
												"assignments": [
													434
												],
												"declarations": [
													{
														"constant": false,
														"id": 434,
														"mutability": "mutable",
														"name": "signer",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "9941:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 433,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9941:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 441,
												"initialValue": {
													"arguments": [
														{
															"id": 436,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "9968:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 437,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "9974:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 438,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "9977:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 439,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "9980:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 435,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -6,
														"src": "9958:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9958:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9941:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 442,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "9997:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10015:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10007:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 443,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10007:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10007:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "9997:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "IfStatement",
												"src": "9993:103:0",
												"trueBody": {
													"id": 456,
													"nodeType": "Block",
													"src": "10019:77:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10050:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10042:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 448,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10042:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10042:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"expression": {
																			"id": 452,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 183,
																			"src": "10054:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$183_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"src": "10054:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$183",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 454,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10041:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_payable_$_t_enum$_RecoverError_$183_$",
																	"typeString": "tuple(address payable,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 399,
															"id": 455,
															"nodeType": "Return",
															"src": "10034:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 458,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "10116:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 459,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "10124:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$183_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"src": "10124:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$183",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"id": 461,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10115:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$183_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 399,
												"id": 462,
												"nodeType": "Return",
												"src": "10108:37:0"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "8347:168:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "8551:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 386,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "8574:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 388,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8574:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "8592:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 390,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "8612:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 392,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8540:88:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "8652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "8661:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$183",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 397,
													"name": "RecoverError",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 183,
													"src": "8661:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$183",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8651:23:0"
									},
									"scope": 534,
									"src": "8521:1632:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "10429:142:0",
										"statements": [
											{
												"assignments": [
													479,
													481
												],
												"declarations": [
													{
														"constant": false,
														"id": 479,
														"mutability": "mutable",
														"name": "recovered",
														"nodeType": "VariableDeclaration",
														"scope": 495,
														"src": "10441:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 478,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10441:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 481,
														"mutability": "mutable",
														"name": "error",
														"nodeType": "VariableDeclaration",
														"scope": 495,
														"src": "10460:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$183",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 480,
															"name": "RecoverError",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 183,
															"src": "10460:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$183",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 488,
												"initialValue": {
													"arguments": [
														{
															"id": 483,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "10493:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 484,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "10499:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 485,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "10502:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 486,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "10505:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 482,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															300,
															355,
															464
														],
														"referencedDeclaration": 464,
														"src": "10482:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$183_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10482:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$183_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10440:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 490,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "10530:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$183",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$183",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 489,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "10518:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$183_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10518:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "10518:18:0"
											},
											{
												"expression": {
													"id": 493,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 479,
													"src": "10554:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 477,
												"id": 494,
												"nodeType": "Return",
												"src": "10547:16:0"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "10161:125:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "10319:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 466,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "10342:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 468,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10342:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "10360:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 470,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "10380:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 472,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10308:88:0"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "10420:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10419:9:0"
									},
									"scope": 534,
									"src": "10292:279:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "10949:191:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11090:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"id": 508,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "11126:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 505,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "11073:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "11073:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11073:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 504,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "11063:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11063:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 503,
												"id": 511,
												"nodeType": "Return",
												"src": "11056:76:0"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "10579:286:0",
										"text": " @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "10903:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 498,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10902:14:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "10940:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 501,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10939:9:0"
									},
									"scope": 534,
									"src": "10871:269:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "11592:94:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11637:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 527,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "11649:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 528,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "11666:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 524,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "11620:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "11620:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11620:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 523,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "11610:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11610:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 522,
												"id": 531,
												"nodeType": "Return",
												"src": "11603:75:0"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "11148:336:0",
										"text": " @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "11515:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 515,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "structHash",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "11540:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 517,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11540:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11514:45:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "11583:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 520,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11582:9:0"
									},
									"scope": 534,
									"src": "11490:196:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1823,
							"src": "2995:8694:0"
						},
						{
							"id": 535,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "11731:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 536,
								"nodeType": "StructuredDocumentation",
								"src": "11760:1160:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._"
							},
							"fullyImplemented": true,
							"id": 679,
							"linearizedBaseContracts": [
								679
							],
							"name": "EIP712",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 538,
									"mutability": "immutable",
									"name": "_CACHED_DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 679,
									"src": "13194:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 537,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "13194:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 540,
									"mutability": "immutable",
									"name": "_CACHED_CHAIN_ID",
									"nodeType": "VariableDeclaration",
									"scope": 679,
									"src": "13251:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 539,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13251:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 542,
									"mutability": "immutable",
									"name": "_HASHED_NAME",
									"nodeType": "VariableDeclaration",
									"scope": 679,
									"src": "13302:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 541,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "13302:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 544,
									"mutability": "immutable",
									"name": "_HASHED_VERSION",
									"nodeType": "VariableDeclaration",
									"scope": 679,
									"src": "13347:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 543,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "13347:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 546,
									"mutability": "immutable",
									"name": "_TYPE_HASH",
									"nodeType": "VariableDeclaration",
									"scope": 679,
									"src": "13395:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 545,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "13395:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "14118:609:0",
										"statements": [
											{
												"assignments": [
													555
												],
												"declarations": [
													{
														"constant": false,
														"id": 555,
														"mutability": "mutable",
														"name": "chainID",
														"nodeType": "VariableDeclaration",
														"scope": 606,
														"src": "14131:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 554,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14131:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"nodeType": "VariableDeclarationStatement",
												"src": "14131:15:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14166:46:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14181:20:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "14192:7:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "14192:9:0"
															},
															"variableNames": [
																{
																	"name": "chainID",
																	"nodeType": "YulIdentifier",
																	"src": "14181:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 555,
														"isOffset": false,
														"isSlot": false,
														"src": "14181:7:0",
														"valueSize": 1
													}
												],
												"id": 557,
												"nodeType": "InlineAssembly",
												"src": "14157:55:0"
											},
											{
												"assignments": [
													559
												],
												"declarations": [
													{
														"constant": false,
														"id": 559,
														"mutability": "mutable",
														"name": "hashedName",
														"nodeType": "VariableDeclaration",
														"scope": 606,
														"src": "14224:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 558,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14224:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 566,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 563,
																	"name": "name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "14261:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14255:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 561,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "14255:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14255:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 560,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "14245:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14245:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14224:43:0"
											},
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "hashedVersion",
														"nodeType": "VariableDeclaration",
														"scope": 606,
														"src": "14278:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 567,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14278:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 575,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 572,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "14318:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14312:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 570,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "14312:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14312:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 569,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "14302:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14302:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14278:49:0"
											},
											{
												"assignments": [
													577
												],
												"declarations": [
													{
														"constant": false,
														"id": 577,
														"mutability": "mutable",
														"name": "typeHash",
														"nodeType": "VariableDeclaration",
														"scope": 606,
														"src": "14338:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 576,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14338:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 581,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14381:84:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
															},
															"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
															}
														],
														"id": 578,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "14357:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14357:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14338:138:0"
											},
											{
												"expression": {
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 582,
														"name": "_HASHED_NAME",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "14487:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 583,
														"name": "hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "14502:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "14487:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "14487:25:0"
											},
											{
												"expression": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 586,
														"name": "_HASHED_VERSION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "14523:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 587,
														"name": "hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "14541:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "14523:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "14523:31:0"
											},
											{
												"expression": {
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 590,
														"name": "_CACHED_CHAIN_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "14565:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 591,
														"name": "chainID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "14584:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14565:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "14565:26:0"
											},
											{
												"expression": {
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 594,
														"name": "_CACHED_DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "14602:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 596,
																"name": "typeHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "14651:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 597,
																"name": "hashedName",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 559,
																"src": "14661:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 598,
																"name": "hashedVersion",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "14673:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 595,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "14629:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																"typeString": "function (bytes32,bytes32,bytes32) view returns (bytes32)"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14629:58:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "14602:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "14602:85:0"
											},
											{
												"expression": {
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 602,
														"name": "_TYPE_HASH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "14698:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 603,
														"name": "typeHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "14711:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "14698:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "14698:21:0"
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "13487:570:0",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 607,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "14075:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 548,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14075:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "version",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "14095:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 550,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14095:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14074:43:0"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14118:0:0"
									},
									"scope": 679,
									"src": "14063:664:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "14880:308:0",
										"statements": [
											{
												"assignments": [
													614
												],
												"declarations": [
													{
														"constant": false,
														"id": 614,
														"mutability": "mutable",
														"name": "chainID",
														"nodeType": "VariableDeclaration",
														"scope": 631,
														"src": "14893:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 613,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14893:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 615,
												"nodeType": "VariableDeclarationStatement",
												"src": "14893:15:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14928:46:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14943:20:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "14954:7:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "14954:9:0"
															},
															"variableNames": [
																{
																	"name": "chainID",
																	"nodeType": "YulIdentifier",
																	"src": "14943:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 614,
														"isOffset": false,
														"isSlot": false,
														"src": "14943:7:0",
														"valueSize": 1
													}
												],
												"id": 616,
												"nodeType": "InlineAssembly",
												"src": "14919:55:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 617,
														"name": "chainID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "14990:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 618,
														"name": "_CACHED_CHAIN_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "15001:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14990:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 629,
													"nodeType": "Block",
													"src": "15083:98:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 624,
																		"name": "_TYPE_HASH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "15127:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 625,
																		"name": "_HASHED_NAME",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 542,
																		"src": "15139:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 626,
																		"name": "_HASHED_VERSION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "15153:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 623,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "15105:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																		"typeString": "function (bytes32,bytes32,bytes32) view returns (bytes32)"
																	}
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15105:64:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 612,
															"id": 628,
															"nodeType": "Return",
															"src": "15098:71:0"
														}
													]
												},
												"id": 630,
												"nodeType": "IfStatement",
												"src": "14986:195:0",
												"trueBody": {
													"id": 622,
													"nodeType": "Block",
													"src": "15019:58:0",
													"statements": [
														{
															"expression": {
																"id": 620,
																"name": "_CACHED_DOMAIN_SEPARATOR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "15041:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 612,
															"id": 621,
															"nodeType": "Return",
															"src": "15034:31:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "14735:77:0",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14845:2:0"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "14871:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 610,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14870:9:0"
									},
									"scope": 679,
									"src": "14818:370:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "15349:197:0",
										"statements": [
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "chainID",
														"nodeType": "VariableDeclaration",
														"scope": 661,
														"src": "15360:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15360:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 645,
												"nodeType": "VariableDeclarationStatement",
												"src": "15360:15:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15395:46:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15410:20:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "15421:7:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "15421:9:0"
															},
															"variableNames": [
																{
																	"name": "chainID",
																	"nodeType": "YulIdentifier",
																	"src": "15410:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 644,
														"isOffset": false,
														"isSlot": false,
														"src": "15410:7:0",
														"valueSize": 1
													}
												],
												"id": 646,
												"nodeType": "InlineAssembly",
												"src": "15386:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 650,
																	"name": "typeHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "15481:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 651,
																	"name": "nameHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "15491:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 652,
																	"name": "versionHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "15501:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 653,
																	"name": "chainID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "15514:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 656,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "15531:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$679",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$679",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "15523:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 654,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "15523:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15523:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 648,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "15470:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "15470:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15470:67:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 647,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "15460:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15460:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 642,
												"id": 660,
												"nodeType": "Return",
												"src": "15453:85:0"
											}
										]
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "typeHash",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "15237:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 633,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "nameHash",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "15264:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 635,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "versionHash",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "15291:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 637,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15226:91:0"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "15340:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 640,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15339:9:0"
									},
									"scope": 679,
									"src": "15196:350:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "16274:81:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 672,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "16314:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16314:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 674,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "16336:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 670,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "16292:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$534_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 533,
														"src": "16292:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16292:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 669,
												"id": 676,
												"nodeType": "Return",
												"src": "16285:62:0"
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "15554:628:0",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "structHash",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "16214:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 664,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16213:20:0"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "16265:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 667,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16264:9:0"
									},
									"scope": 679,
									"src": "16188:167:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1823,
							"src": "12922:3436:0"
						},
						{
							"id": 680,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "16402:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 681,
								"nodeType": "StructuredDocumentation",
								"src": "16430:487:0",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 714,
							"linearizedBaseContracts": [
								714
							],
							"name": "IERC20Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "16949:814:0",
										"text": " @dev Sets `value` as th xe allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 699,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "17795:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "17819:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "17845:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17845:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "17869:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17869:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "17896:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 691,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "17896:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "17914:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 693,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "17934:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 695,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17934:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17784:166:0"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17959:0:0"
									},
									"scope": 714,
									"src": "17769:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "17968:300:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "18290:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18289:15:0"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "18328:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18327:9:0"
									},
									"scope": 714,
									"src": "18274:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "18345:130:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18560:2:0"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "18586:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 710,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18585:9:0"
									},
									"scope": 714,
									"src": "18535:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1823,
							"src": "16919:1679:0"
						},
						{
							"id": 715,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "18638:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 790,
							"linearizedBaseContracts": [
								790
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "18688:64:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18776:2:0"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "18802:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18801:9:0"
									},
									"scope": 790,
									"src": "18756:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "18817:70:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 729,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "18910:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18909:17:0"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "18950:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18949:9:0"
									},
									"scope": 790,
									"src": "18891:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "18965:203:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 739,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "19190:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19190:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "19209:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19189:35:0"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "19243:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 736,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19243:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19242:6:0"
									},
									"scope": 790,
									"src": "19172:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "19255:258:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 749,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "19536:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "19551:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19535:32:0"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "19591:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19590:9:0"
									},
									"scope": 790,
									"src": "19517:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "19606:629:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 759,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "20256:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20256:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "20273:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20273:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20255:33:0"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "20307:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 756,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20307:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20306:6:0"
									},
									"scope": 790,
									"src": "20239:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "20319:288:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "20633:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "20649:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "20668:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20632:51:0"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "20702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 768,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20701:6:0"
									},
									"scope": 790,
									"src": "20611:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "20714:153:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 780,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "20886:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20886:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "20908:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "20928:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20885:57:0"
									},
									"src": "20871:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "20949:145:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 789,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "21113:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "21136:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "21161:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21112:63:0"
									},
									"src": "21098:78:0"
								}
							],
							"scope": 1823,
							"src": "18666:2513:0"
						},
						{
							"id": 791,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "21217:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 792,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 790,
										"src": "21265:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$790",
											"typeString": "contract IERC20"
										}
									},
									"id": 793,
									"nodeType": "InheritanceSpecifier",
									"src": "21265:6:0"
								}
							],
							"contractDependencies": [
								790
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 813,
							"linearizedBaseContracts": [
								813,
								790
							],
							"name": "IOHM",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "21291:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "21309:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21290:35:0"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21334:0:0"
									},
									"scope": 813,
									"src": "21277:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 805,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "21355:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21354:16:0"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21379:0:0"
									},
									"scope": 813,
									"src": "21341:39:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79cc6790",
									"id": 812,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "21404:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "21422:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21403:35:0"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21447:0:0"
									},
									"scope": 813,
									"src": "21386:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1823,
							"src": "21247:204:0"
						},
						{
							"id": 814,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "21492:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1030,
							"linearizedBaseContracts": [
								1030
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "21685:114:0",
										"statements": [
											{
												"assignments": [
													824
												],
												"declarations": [
													{
														"constant": false,
														"id": 824,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 838,
														"src": "21696:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 823,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21696:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 828,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 825,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "21708:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 826,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "21712:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21708:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21696:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 830,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "21732:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 831,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "21737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21732:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21740:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 829,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "21724:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21724:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "21724:46:0"
											},
											{
												"expression": {
													"id": 836,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 824,
													"src": "21790:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 822,
												"id": 837,
												"nodeType": "Return",
												"src": "21783:8:0"
											}
										]
									},
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "21631:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "21642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21630:22:0"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "21676:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21675:9:0"
									},
									"scope": 1030,
									"src": "21618:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "21874:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 849,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "21896:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 850,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "21899:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21902:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 848,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															855,
															882
														],
														"referencedDeclaration": 882,
														"src": "21892:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21892:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 847,
												"id": 853,
												"nodeType": "Return",
												"src": "21885:50:0"
											}
										]
									},
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "21820:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "21831:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21819:22:0"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "21865:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21864:9:0"
									},
									"scope": 1030,
									"src": "21807:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "22046:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 867,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "22065:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 868,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "22070:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22065:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 870,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "22073:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "22057:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22057:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "22057:29:0"
											},
											{
												"assignments": [
													874
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "22097:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 873,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22097:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 878,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "22109:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 876,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "22113:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22109:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22097:17:0"
											},
											{
												"expression": {
													"id": 879,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 874,
													"src": "22134:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 865,
												"id": 880,
												"nodeType": "Return",
												"src": "22127:8:0"
											}
										]
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "21964:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "21975:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "21986:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 860,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21986:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21963:50:0"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "22037:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22036:9:0"
									},
									"scope": 1030,
									"src": "21951:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "22218:183:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 891,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "22233:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22238:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22233:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 897,
												"nodeType": "IfStatement",
												"src": "22229:47:0",
												"trueBody": {
													"id": 896,
													"nodeType": "Block",
													"src": "22241:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22263:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 890,
															"id": 895,
															"nodeType": "Return",
															"src": "22256:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "22288:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 898,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22288:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 903,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 900,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "22300:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 901,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "22304:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22300:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22288:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 905,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 899,
																	"src": "22324:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 906,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "22328:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22324:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 908,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "22333:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22324:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22336:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 904,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "22316:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22316:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "22316:56:0"
											},
											{
												"expression": {
													"id": 913,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 899,
													"src": "22392:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 890,
												"id": 914,
												"nodeType": "Return",
												"src": "22385:8:0"
											}
										]
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "22164:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "22175:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22163:22:0"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "22209:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22208:9:0"
									},
									"scope": 1030,
									"src": "22151:250:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "22476:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "22498:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 927,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "22501:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22504:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 925,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															932,
															971
														],
														"referencedDeclaration": 971,
														"src": "22494:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22494:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 924,
												"id": 930,
												"nodeType": "Return",
												"src": "22487:46:0"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "22422:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "22433:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22433:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22421:22:0"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "22467:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22466:9:0"
									},
									"scope": 1030,
									"src": "22409:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "22644:180:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 944,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "22663:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22667:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22663:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 947,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "22670:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 943,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "22655:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22655:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "22655:28:0"
											},
											{
												"assignments": [
													951
												],
												"declarations": [
													{
														"constant": false,
														"id": 951,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "22694:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 950,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22694:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 955,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 952,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "22706:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 953,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "22710:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22706:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22694:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 957,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "22729:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 958,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "22734:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 959,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "22738:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22734:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 961,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 934,
																		"src": "22742:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 962,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "22746:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22742:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22734:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22729:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 956,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "22722:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22722:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "22722:26:0"
											},
											{
												"expression": {
													"id": 968,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 951,
													"src": "22815:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 942,
												"id": 969,
												"nodeType": "Return",
												"src": "22808:8:0"
											}
										]
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "22562:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "22573:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "22584:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 937,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22584:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22561:50:0"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "22635:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22634:9:0"
									},
									"scope": 1030,
									"src": "22549:275:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "22937:276:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 978,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "22952:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22956:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "22952:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1018,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "23166:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23171:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "23166:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1026,
													"nodeType": "IfStatement",
													"src": "23162:44:0",
													"trueBody": {
														"id": 1025,
														"nodeType": "Block",
														"src": "23174:32:0",
														"statements": [
															{
																"expression": {
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1021,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "23189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23193:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "23189:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1024,
																"nodeType": "ExpressionStatement",
																"src": "23189:5:0"
															}
														]
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "22948:258:0",
												"trueBody": {
													"id": 1017,
													"nodeType": "Block",
													"src": "22959:197:0",
													"statements": [
														{
															"expression": {
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 981,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "22974:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 982,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "22978:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22974:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 984,
															"nodeType": "ExpressionStatement",
															"src": "22974:5:0"
														},
														{
															"assignments": [
																986
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 986,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"scope": 1017,
																	"src": "22994:6:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 985,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "22994:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 994,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 989,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 973,
																				"src": "23013:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 990,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23016:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"id": 988,
																			"name": "div",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				932,
																				971
																			],
																			"referencedDeclaration": 932,
																			"src": "23008:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23008:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23020:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 987,
																	"name": "add",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "23003:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23003:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "22994:29:0"
														},
														{
															"body": {
																"id": 1015,
																"nodeType": "Block",
																"src": "23052:93:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 998,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 976,
																				"src": "23071:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 999,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "23075:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23071:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1001,
																		"nodeType": "ExpressionStatement",
																		"src": "23071:5:0"
																	},
																	{
																		"expression": {
																			"id": 1013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1002,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "23095:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1006,
																										"name": "a",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 973,
																										"src": "23114:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 1007,
																										"name": "b",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 986,
																										"src": "23117:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 1005,
																									"name": "div",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										932,
																										971
																									],
																									"referencedDeclaration": 932,
																									"src": "23109:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1008,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "23109:11:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1009,
																								"name": "b",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 986,
																								"src": "23122:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1004,
																							"name": "add",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 839,
																							"src": "23104:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1010,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "23104:20:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "32",
																						"id": 1011,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "23126:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						}
																					],
																					"id": 1003,
																					"name": "div",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						932,
																						971
																					],
																					"referencedDeclaration": 932,
																					"src": "23099:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1012,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "23099:30:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23095:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1014,
																		"nodeType": "ExpressionStatement",
																		"src": "23095:34:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 995,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "23045:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 996,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "23049:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23045:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1016,
															"nodeType": "WhileStatement",
															"src": "23038:107:0"
														}
													]
												}
											}
										]
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "22895:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22894:11:0"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "22929:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "22929:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22928:8:0"
									},
									"scope": 1030,
									"src": "22880:333:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1823,
							"src": "21592:1626:0"
						},
						{
							"id": 1031,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "23257:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1077,
							"linearizedBaseContracts": [
								1077
							],
							"name": "Counters",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1034,
									"libraryName": {
										"id": 1032,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1030,
										"src": "23316:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1030",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "23310:27:0",
									"typeName": {
										"id": 1033,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23329:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Counters.Counter",
									"id": 1037,
									"members": [
										{
											"constant": false,
											"id": 1036,
											"mutability": "mutable",
											"name": "_value",
											"nodeType": "VariableDeclaration",
											"scope": 1037,
											"src": "23688:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1035,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23688:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nodeType": "StructDefinition",
									"scope": 1077,
									"src": "23345:379:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "23806:40:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1044,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "23824:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1037_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1036,
													"src": "23824:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1043,
												"id": 1046,
												"nodeType": "Return",
												"src": "23817:21:0"
											}
										]
									},
									"id": 1048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "23749:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1037_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1038,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1037,
													"src": "23749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1037_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23748:25:0"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "23797:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23796:9:0"
									},
									"scope": 1077,
									"src": "23732:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "23907:128:0",
										"statements": [
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1053,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "24008:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1037_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1036,
														"src": "24008:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24026:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "24008:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "24008:19:0"
											}
										]
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "23873:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1037_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1049,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1037,
													"src": "23873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1037_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23872:25:0"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23907:0:0"
									},
									"scope": 1077,
									"src": "23854:181:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "24096:57:0",
										"statements": [
											{
												"expression": {
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1065,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "24107:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1037_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1067,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1036,
														"src": "24107:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24143:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"expression": {
																	"id": 1068,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "24124:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1037_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1036,
																"src": "24124:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 855,
															"src": "24124:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24124:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24107:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "24107:38:0"
											}
										]
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "24062:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1037_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1061,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1037,
													"src": "24062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1037_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24061:25:0"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24096:0:0"
									},
									"scope": 1077,
									"src": "24043:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1823,
							"src": "23286:870:0"
						},
						{
							"id": 1078,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "24188:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1079,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 790,
										"src": "24249:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$790",
											"typeString": "contract IERC20"
										}
									},
									"id": 1080,
									"nodeType": "InheritanceSpecifier",
									"src": "24249:6:0"
								}
							],
							"contractDependencies": [
								790
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1552,
							"linearizedBaseContracts": [
								1552,
								790
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1083,
									"libraryName": {
										"id": 1081,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1030,
										"src": "24271:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1030",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "24265:27:0",
									"typeName": {
										"id": 1082,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24284:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1088,
									"mutability": "constant",
									"name": "ERC20TOKEN_ERC1820_INTERFACE_ID",
									"nodeType": "VariableDeclaration",
									"scope": 1552,
									"src": "24340:84:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1084,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "24340:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4552433230546f6b656e",
												"id": 1086,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "24410:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												},
												"value": "ERC20Token"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												}
											],
											"id": 1085,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "24399:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1087,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "24399:25:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1092,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1552,
									"src": "24433:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1091,
										"keyType": {
											"id": 1089,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24442:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24433:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1090,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24453:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1098,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 1552,
									"src": "24489:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1097,
										"keyType": {
											"id": 1093,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24498:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24489:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1096,
											"keyType": {
												"id": 1094,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "24518:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "24509:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1095,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "24529:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1100,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1552,
									"src": "24568:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1099,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24568:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1102,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 1552,
									"src": "24606:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1101,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "24606:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1104,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1552,
									"src": "24636:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1103,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "24636:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1106,
									"mutability": "immutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1552,
									"src": "24668:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1105,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "24668:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "24785:92:0",
										"statements": [
											{
												"expression": {
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1115,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "24796:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1116,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "24804:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "24796:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "24796:13:0"
											},
											{
												"expression": {
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1119,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "24820:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1120,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "24830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "24820:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "24820:17:0"
											},
											{
												"expression": {
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1123,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "24848:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1124,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "24860:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "24848:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "24848:21:0"
											}
										]
									},
									"id": 1128,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "24724:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1107,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24724:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "24745:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1109,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24745:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "24768:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1111,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "24768:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24723:61:0"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24785:0:0"
									},
									"scope": 1552,
									"src": "24711:166:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "24937:31:0",
										"statements": [
											{
												"expression": {
													"id": 1133,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1102,
													"src": "24955:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1132,
												"id": 1134,
												"nodeType": "Return",
												"src": "24948:12:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24898:2:0"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "24922:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1130,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24922:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24921:15:0"
									},
									"scope": 1552,
									"src": "24885:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "25030:33:0",
										"statements": [
											{
												"expression": {
													"id": 1141,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1104,
													"src": "25048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1140,
												"id": 1142,
												"nodeType": "Return",
												"src": "25041:14:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24991:2:0"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "25015:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1138,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25015:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25014:15:0"
									},
									"scope": 1552,
									"src": "24976:87:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "25127:35:0",
										"statements": [
											{
												"expression": {
													"id": 1149,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1106,
													"src": "25145:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1148,
												"id": 1150,
												"nodeType": "Return",
												"src": "25138:16:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25088:2:0"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "25120:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1146,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "25120:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25119:7:0"
									},
									"scope": 1552,
									"src": "25071:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										721
									],
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "25232:38:0",
										"statements": [
											{
												"expression": {
													"id": 1158,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1100,
													"src": "25250:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1157,
												"id": 1159,
												"nodeType": "Return",
												"src": "25243:19:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1154,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25205:8:0"
									},
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25190:2:0"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "25223:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25222:9:0"
									},
									"scope": 1552,
									"src": "25170:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										729
									],
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "25361:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1169,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "25379:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1171,
													"indexExpression": {
														"id": 1170,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "25389:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25379:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1168,
												"id": 1172,
												"nodeType": "Return",
												"src": "25372:25:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25334:8:0"
									},
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "25297:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25296:17:0"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "25352:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25351:9:0"
									},
									"scope": 1552,
									"src": "25278:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										739
									],
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "25505:81:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1185,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "25526:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "25526:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1187,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "25538:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1188,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "25549:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1184,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "25516:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25516:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "25516:40:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25574:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1183,
												"id": 1192,
												"nodeType": "Return",
												"src": "25567:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25481:8:0"
									},
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "25431:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25431:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "25450:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25430:35:0"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "25499:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25499:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25498:6:0"
									},
									"scope": 1552,
									"src": "25413:173:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										749
									],
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "25692:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1204,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "25710:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1206,
														"indexExpression": {
															"id": 1205,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "25722:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "25710:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1208,
													"indexExpression": {
														"id": 1207,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "25729:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25710:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1203,
												"id": 1209,
												"nodeType": "Return",
												"src": "25703:34:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1200,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25665:8:0"
									},
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "25613:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25613:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "25628:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25628:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25612:32:0"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "25683:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25682:9:0"
									},
									"scope": 1552,
									"src": "25594:151:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										759
									],
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "25842:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1222,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "25862:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "25862:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1224,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "25874:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1225,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "25883:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1221,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "25853:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25853:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "25853:37:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25908:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1220,
												"id": 1229,
												"nodeType": "Return",
												"src": "25901:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1217,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25818:8:0"
									},
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "25770:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "25787:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25769:33:0"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "25836:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25836:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25835:6:0"
									},
									"scope": 1552,
									"src": "25753:167:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										771
									],
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "26040:205:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1244,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "26061:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1245,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "26069:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1246,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "26080:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1243,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "26051:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26051:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "26051:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1250,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "26107:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1251,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "26115:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "26115:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1260,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "26163:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26171:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1253,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "26127:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1255,
																		"indexExpression": {
																			"id": 1254,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1233,
																			"src": "26139:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "26127:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1258,
																	"indexExpression": {
																		"expression": {
																			"id": 1256,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "26147:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "26147:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "26127:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 882,
																"src": "26127:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26127:87:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1249,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "26098:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26098:117:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "26098:117:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26233:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1242,
												"id": 1266,
												"nodeType": "Return",
												"src": "26226:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1239,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26016:8:0"
									},
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "25950:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25950:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "25966:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25966:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "25985:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25985:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25949:51:0"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "26034:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26034:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26033:6:0"
									},
									"scope": 1552,
									"src": "25928:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "26347:120:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1278,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "26367:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "26367:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1280,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "26379:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1288,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "26425:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1281,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "26388:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1284,
																		"indexExpression": {
																			"expression": {
																				"id": 1282,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "26400:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "26400:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "26388:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1286,
																	"indexExpression": {
																		"id": 1285,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1270,
																		"src": "26412:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "26388:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 839,
																"src": "26388:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26388:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1277,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "26358:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26358:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "26358:79:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26455:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1276,
												"id": 1293,
												"nodeType": "Return",
												"src": "26448:11:0"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "26280:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "26297:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26297:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26279:37:0"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "26341:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26341:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26340:6:0"
									},
									"scope": 1552,
									"src": "26253:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "26574:166:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1305,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "26594:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "26594:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1307,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "26606:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1315,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1299,
																	"src": "26652:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26669:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1308,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "26615:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1311,
																		"indexExpression": {
																			"expression": {
																				"id": 1309,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "26627:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "26627:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "26615:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1313,
																	"indexExpression": {
																		"id": 1312,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1297,
																		"src": "26639:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "26615:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 882,
																"src": "26615:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26615:94:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1304,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "26585:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26585:125:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "26585:125:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26728:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1303,
												"id": 1321,
												"nodeType": "Return",
												"src": "26721:11:0"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "26502:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "26519:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26519:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26501:42:0"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "26568:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1301,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26568:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26567:6:0"
									},
									"scope": 1552,
									"src": "26475:265:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "26835:452:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1333,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "26854:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26872:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26864:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1334,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "26864:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26864:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26854:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26876:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1332,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "26846:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26846:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1341,
												"nodeType": "ExpressionStatement",
												"src": "26846:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1343,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "26935:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26956:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26948:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1344,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "26948:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26948:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26935:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26960:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "26927:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26927:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "26927:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1353,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "27032:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1354,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "27040:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1355,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "27051:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1352,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "27011:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27011:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "27011:47:0"
											},
											{
												"expression": {
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1358,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "27071:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1360,
														"indexExpression": {
															"id": 1359,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "27081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27071:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1365,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1329,
																"src": "27113:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27121:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1361,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "27091:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1363,
																"indexExpression": {
																	"id": 1362,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1325,
																	"src": "27101:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27091:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 882,
															"src": "27091:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27091:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27071:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "27071:91:0"
											},
											{
												"expression": {
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1370,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "27173:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1372,
														"indexExpression": {
															"id": 1371,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "27183:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27173:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1377,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1329,
																"src": "27221:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1373,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "27196:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1375,
																"indexExpression": {
																	"id": 1374,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1327,
																	"src": "27206:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27196:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 839,
															"src": "27196:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27196:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27173:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "27173:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1382,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "27253:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1383,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "27261:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1384,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "27272:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1381,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "27244:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27244:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1386,
												"nodeType": "EmitStatement",
												"src": "27239:40:0"
											}
										]
									},
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "26767:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "26783:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "26802:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26766:51:0"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26835:0:0"
									},
									"scope": 1552,
									"src": "26748:539:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "27360:309:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1396,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "27379:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27398:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "27390:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1397,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "27390:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27390:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "27379:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27402:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1395,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "27371:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27371:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1404,
												"nodeType": "ExpressionStatement",
												"src": "27371:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27476:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1406,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27468:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27468:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1410,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "27480:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1411,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "27489:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1405,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "27447:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27447:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "27447:49:0"
											},
											{
												"expression": {
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1414,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "27507:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1417,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "27539:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1415,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1100,
																"src": "27522:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 839,
															"src": "27522:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27522:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27507:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1420,
												"nodeType": "ExpressionStatement",
												"src": "27507:39:0"
											},
											{
												"expression": {
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1421,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "27557:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1423,
														"indexExpression": {
															"id": 1422,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "27567:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27557:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1428,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "27601:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1424,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "27578:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1426,
																"indexExpression": {
																	"id": 1425,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "27588:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27578:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 839,
															"src": "27578:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27578:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27557:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "27557:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27641:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27633:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1433,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27633:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27633:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1437,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "27645:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1438,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "27654:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1432,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "27624:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27624:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1440,
												"nodeType": "EmitStatement",
												"src": "27619:42:0"
											}
										]
									},
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "27310:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "27327:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27309:33:0"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27360:0:0"
									},
									"scope": 1552,
									"src": "27295:374:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1496,
										"nodeType": "Block",
										"src": "27742:353:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1450,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1444,
																"src": "27761:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27780:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "27772:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1451,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "27772:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27772:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "27761:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27784:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1449,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "27753:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27753:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "27753:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1460,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "27854:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27871:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27863:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1461,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27863:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27863:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1465,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "27875:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1459,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "27833:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27833:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "27833:49:0"
											},
											{
												"expression": {
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1468,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "27895:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1470,
														"indexExpression": {
															"id": 1469,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "27905:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1475,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "27939:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27947:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1471,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "27916:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1473,
																"indexExpression": {
																	"id": 1472,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "27926:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27916:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 882,
															"src": "27916:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27916:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27895:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "27895:89:0"
											},
											{
												"expression": {
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1480,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "27995:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1483,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "28027:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1481,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1100,
																"src": "28010:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 855,
															"src": "28010:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28010:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27995:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "27995:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1488,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "28059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28076:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28068:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28068:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28068:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1493,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "28080:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1487,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "28050:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28050:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "EmitStatement",
												"src": "28045:42:0"
											}
										]
									},
									"id": 1497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "27692:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "27709:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27691:33:0"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27742:0:0"
									},
									"scope": 1552,
									"src": "27677:418:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1540,
										"nodeType": "Block",
										"src": "28186:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1507,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1499,
																"src": "28205:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28222:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28214:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1508,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28214:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28214:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "28205:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28226:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "28197:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28197:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "ExpressionStatement",
												"src": "28197:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1517,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1501,
																"src": "28284:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28303:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28295:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1518,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28295:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28295:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "28284:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28307:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1516,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "28276:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28276:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "28276:68:0"
											},
											{
												"expression": {
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1526,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1098,
																"src": "28357:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1529,
															"indexExpression": {
																"id": 1527,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1499,
																"src": "28369:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "28357:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1530,
														"indexExpression": {
															"id": 1528,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "28376:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "28357:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1531,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "28387:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28357:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "28357:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "28418:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "28425:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1537,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "28434:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1534,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "28409:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28409:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "EmitStatement",
												"src": "28404:37:0"
											}
										]
									},
									"id": 1541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "28121:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28121:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "28136:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "28153:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28153:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28120:48:0"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28186:0:0"
									},
									"scope": 1552,
									"src": "28103:346:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "28549:3:0",
										"statements": []
									},
									"id": 1551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "from_",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "28486:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "to_",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "28501:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28501:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "28514:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28484:47:0"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28549:0:0"
									},
									"scope": 1552,
									"src": "28455:97:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1823,
							"src": "24222:4333:0"
						},
						{
							"id": 1553,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "28595:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1555,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1552,
										"src": "29194:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1552",
											"typeString": "contract ERC20"
										}
									},
									"id": 1556,
									"nodeType": "InheritanceSpecifier",
									"src": "29194:5:0"
								},
								{
									"baseName": {
										"id": 1557,
										"name": "IERC20Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 714,
										"src": "29201:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Permit_$714",
											"typeString": "contract IERC20Permit"
										}
									},
									"id": 1558,
									"nodeType": "InheritanceSpecifier",
									"src": "29201:12:0"
								},
								{
									"baseName": {
										"id": 1559,
										"name": "EIP712",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 679,
										"src": "29215:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EIP712_$679",
											"typeString": "contract EIP712"
										}
									},
									"id": 1560,
									"nodeType": "InheritanceSpecifier",
									"src": "29215:6:0"
								}
							],
							"contractDependencies": [
								679,
								714,
								790,
								1552
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1554,
								"nodeType": "StructuredDocumentation",
								"src": "28633:526:0",
								"text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"
							},
							"fullyImplemented": false,
							"id": 1712,
							"linearizedBaseContracts": [
								1712,
								679,
								714,
								1552,
								790
							],
							"name": "ERC20Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1563,
									"libraryName": {
										"id": 1561,
										"name": "Counters",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1077,
										"src": "29235:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Counters_$1077",
											"typeString": "library Counters"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "29229:36:0",
									"typeName": {
										"id": 1562,
										"name": "Counters.Counter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1037,
										"src": "29248:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1037_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 1567,
									"mutability": "mutable",
									"name": "_nonces",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "29273:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1037_storage_$",
										"typeString": "mapping(address => struct Counters.Counter)"
									},
									"typeName": {
										"id": 1566,
										"keyType": {
											"id": 1564,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "29281:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "29273:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1037_storage_$",
											"typeString": "mapping(address => struct Counters.Counter)"
										},
										"valueType": {
											"id": 1565,
											"name": "Counters.Counter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1037,
											"src": "29292:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Counter_$1037_storage_ptr",
												"typeString": "struct Counters.Counter"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1572,
									"mutability": "immutable",
									"name": "_PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "29387:140:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1568,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "29387:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 1570,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "29442:84:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 1569,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "29432:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1571,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "29432:95:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "29816:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "29536:224:0",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 1583,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1578,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1575,
													"src": "29805:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29811:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 1580,
											"modifierName": {
												"id": 1577,
												"name": "EIP712",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 679,
												"src": "29798:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_EIP712_$679_$",
													"typeString": "type(contract EIP712)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "29798:17:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "29778:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1574,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "29778:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29777:20:0"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29816:0:0"
									},
									"scope": 1712,
									"src": "29766:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										699
									],
									"body": {
										"id": 1655,
										"nodeType": "Block",
										"src": "30090:439:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1603,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "30109:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "30109:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1605,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "30128:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30109:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332305065726d69743a206578706972656420646561646c696e65",
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30138:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd",
																"typeString": "literal_string \"ERC20Permit: expired deadline\""
															},
															"value": "ERC20Permit: expired deadline"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd",
																"typeString": "literal_string \"ERC20Permit: expired deadline\""
															}
														],
														"id": 1602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "30101:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30101:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1609,
												"nodeType": "ExpressionStatement",
												"src": "30101:69:0"
											},
											{
												"assignments": [
													1611
												],
												"declarations": [
													{
														"constant": false,
														"id": 1611,
														"mutability": "mutable",
														"name": "structHash",
														"nodeType": "VariableDeclaration",
														"scope": 1655,
														"src": "30183:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1610,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "30183:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1625,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1615,
																	"name": "_PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "30225:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1616,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "30243:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1617,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "30250:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1618,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1590,
																	"src": "30259:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1620,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "30276:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1619,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1711,
																		"src": "30266:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 1621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30266:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1622,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "30284:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1613,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "30214:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "30214:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30214:79:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1612,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "30204:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30204:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30183:111:0"
											},
											{
												"assignments": [
													1627
												],
												"declarations": [
													{
														"constant": false,
														"id": 1627,
														"mutability": "mutable",
														"name": "hash",
														"nodeType": "VariableDeclaration",
														"scope": 1655,
														"src": "30307:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1626,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "30307:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1631,
												"initialValue": {
													"arguments": [
														{
															"id": 1629,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "30339:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1628,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "30322:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30322:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30307:43:0"
											},
											{
												"assignments": [
													1633
												],
												"declarations": [
													{
														"constant": false,
														"id": 1633,
														"mutability": "mutable",
														"name": "signer",
														"nodeType": "VariableDeclaration",
														"scope": 1655,
														"src": "30363:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1632,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "30363:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1641,
												"initialValue": {
													"arguments": [
														{
															"id": 1636,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "30394:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1637,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "30400:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1638,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "30403:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1639,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "30406:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1634,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "30380:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$534_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 496,
														"src": "30380:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30380:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30363:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1643,
																"name": "signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "30427:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1644,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1586,
																"src": "30437:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "30427:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332305065726d69743a20696e76616c6964207369676e6174757265",
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30444:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
																"typeString": "literal_string \"ERC20Permit: invalid signature\""
															},
															"value": "ERC20Permit: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
																"typeString": "literal_string \"ERC20Permit: invalid signature\""
															}
														],
														"id": 1642,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "30419:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30419:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1648,
												"nodeType": "ExpressionStatement",
												"src": "30419:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1650,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "30499:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1651,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "30506:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1652,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "30515:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1649,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "30490:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30490:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1654,
												"nodeType": "ExpressionStatement",
												"src": "30490:31:0"
											}
										]
									},
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "29826:52:0",
										"text": " @dev See {IERC20Permit-permit}."
									},
									"functionSelector": "d505accf",
									"id": 1656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1600,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "30081:8:0"
									},
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "29910:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "29934:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "29960:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "29984:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "30011:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1593,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "30011:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "30029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1595,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "30029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "30049:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1597,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "30049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29899:166:0"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30090:0:0"
									},
									"scope": 1712,
									"src": "29884:645:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										707
									],
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "30673:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1665,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1567,
																"src": "30691:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1037_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 1667,
															"indexExpression": {
																"id": 1666,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1659,
																"src": "30699:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30691:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1037_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1048,
														"src": "30691:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1037_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1037_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30691:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1664,
												"id": 1670,
												"nodeType": "Return",
												"src": "30684:31:0"
											}
										]
									},
									"documentation": {
										"id": 1657,
										"nodeType": "StructuredDocumentation",
										"src": "30537:52:0",
										"text": " @dev See {IERC20Permit-nonces}."
									},
									"functionSelector": "7ecebe00",
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1661,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "30646:8:0"
									},
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "30611:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30610:15:0"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "30664:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30663:9:0"
									},
									"scope": 1712,
									"src": "30595:128:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										713
									],
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "30922:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1679,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "30940:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30940:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1678,
												"id": 1681,
												"nodeType": "Return",
												"src": "30933:27:0"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "30731:62:0",
										"text": " @dev See {IERC20Permit-DOMAIN_SEPARATOR}."
									},
									"functionSelector": "3644e515",
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1675,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "30895:8:0"
									},
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30878:2:0"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "30913:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1676,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "30913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30912:9:0"
									},
									"scope": 1712,
									"src": "30853:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "31183:130:0",
										"statements": [
											{
												"assignments": [
													1694
												],
												"declarations": [
													{
														"constant": false,
														"id": 1694,
														"mutability": "mutable",
														"name": "nonce",
														"nodeType": "VariableDeclaration",
														"scope": 1710,
														"src": "31194:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1037_storage_ptr",
															"typeString": "struct Counters.Counter"
														},
														"typeName": {
															"id": 1693,
															"name": "Counters.Counter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1037,
															"src": "31194:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1037_storage_ptr",
																"typeString": "struct Counters.Counter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1698,
												"initialValue": {
													"baseExpression": {
														"id": 1695,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "31227:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1037_storage_$",
															"typeString": "mapping(address => struct Counters.Counter storage ref)"
														}
													},
													"id": 1697,
													"indexExpression": {
														"id": 1696,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "31235:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31227:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1037_storage",
														"typeString": "struct Counters.Counter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31194:47:0"
											},
											{
												"expression": {
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1699,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "31252:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1700,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1694,
																"src": "31262:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$1037_storage_ptr",
																	"typeString": "struct Counters.Counter storage pointer"
																}
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1048,
															"src": "31262:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1037_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1037_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31262:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31252:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1704,
												"nodeType": "ExpressionStatement",
												"src": "31252:25:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1705,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "31288:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1037_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1060,
														"src": "31288:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1037_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1037_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31288:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "31288:17:0"
											}
										]
									},
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "30976:124:0",
										"text": " @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"
									},
									"id": 1711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "31125:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31125:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31124:15:0"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "current",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "31166:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31165:17:0"
									},
									"scope": 1712,
									"src": "31106:207:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1823,
							"src": "29161:2155:0"
						},
						{
							"id": 1713,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "31351:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1714,
										"name": "ERC20Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1712,
										"src": "31413:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Permit_$1712",
											"typeString": "contract ERC20Permit"
										}
									},
									"id": 1715,
									"nodeType": "InheritanceSpecifier",
									"src": "31413:11:0"
								},
								{
									"baseName": {
										"id": 1716,
										"name": "IOHM",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 813,
										"src": "31426:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOHM_$813",
											"typeString": "contract IOHM"
										}
									},
									"id": 1717,
									"nodeType": "InheritanceSpecifier",
									"src": "31426:4:0"
								},
								{
									"baseName": {
										"id": 1718,
										"name": "OlympusAccessControlled",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 175,
										"src": "31432:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_OlympusAccessControlled_$175",
											"typeString": "contract OlympusAccessControlled"
										}
									},
									"id": 1719,
									"nodeType": "InheritanceSpecifier",
									"src": "31432:23:0"
								}
							],
							"contractDependencies": [
								175,
								679,
								714,
								790,
								813,
								1552,
								1712
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1822,
							"linearizedBaseContracts": [
								1822,
								175,
								813,
								1712,
								679,
								714,
								1552,
								790
							],
							"name": "RENACECOIN",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1722,
									"libraryName": {
										"id": 1720,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1030,
										"src": "31469:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1030",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "31463:27:0",
									"typeName": {
										"id": 1721,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "31482:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 1745,
										"nodeType": "Block",
										"src": "31657:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1741,
															"name": "_authority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "31676:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "323030303030303030303030303030303030303030303030303030",
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31688:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_200000000000000000000000000_by_1",
																"typeString": "int_const 200000000000000000000000000"
															},
															"value": "200000000000000000000000000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_200000000000000000000000000_by_1",
																"typeString": "int_const 200000000000000000000000000"
															}
														],
														"id": 1740,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "31670:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31670:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1744,
												"nodeType": "ExpressionStatement",
												"src": "31670:46:0"
											}
										]
									},
									"id": 1746,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "52454e414345434f494e",
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31541:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_774ee63448e976cf5bf2e6b4e49a6b3cddab9ce5b0d9e7621dfcfbf9dc300354",
														"typeString": "literal_string \"RENACECOIN\""
													},
													"value": "RENACECOIN"
												},
												{
													"hexValue": "524e43",
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31555:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_74631855d07ce8a9f5cb23bd4b13e6ba005513e3048b86550f90404e655965b6",
														"typeString": "literal_string \"RNC\""
													},
													"value": "RNC"
												},
												{
													"hexValue": "3138",
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31562:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												}
											],
											"id": 1730,
											"modifierName": {
												"id": 1726,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1552,
												"src": "31535:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$1552_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "31535:30:0"
										},
										{
											"arguments": [
												{
													"hexValue": "52454e414345434f494e",
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31583:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_774ee63448e976cf5bf2e6b4e49a6b3cddab9ce5b0d9e7621dfcfbf9dc300354",
														"typeString": "literal_string \"RENACECOIN\""
													},
													"value": "RENACECOIN"
												}
											],
											"id": 1733,
											"modifierName": {
												"id": 1731,
												"name": "ERC20Permit",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1712,
												"src": "31571:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20Permit_$1712_$",
													"typeString": "type(contract ERC20Permit)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "31571:25:0"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 1736,
															"name": "_authority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "31644:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1735,
														"name": "IOlympusAuthority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "31626:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IOlympusAuthority_$78_$",
															"typeString": "type(contract IOlympusAuthority)"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31626:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOlympusAuthority_$78",
														"typeString": "contract IOlympusAuthority"
													}
												}
											],
											"id": 1738,
											"modifierName": {
												"id": 1734,
												"name": "OlympusAccessControlled",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 175,
												"src": "31602:23:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_OlympusAccessControlled_$175_$",
													"typeString": "type(contract OlympusAccessControlled)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "31602:54:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "_authority",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "31510:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31509:20:0"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31657:0:0"
									},
									"scope": 1822,
									"src": "31498:232:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										800
									],
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "31819:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1757,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "31836:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1758,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "31846:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1756,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "31830:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31830:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1760,
												"nodeType": "ExpressionStatement",
												"src": "31830:24:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1762,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1754,
											"modifierName": {
												"id": 1753,
												"name": "onlyVault",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 158,
												"src": "31809:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "31809:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1752,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "31800:8:0"
									},
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "31756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "31774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31755:35:0"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31819:0:0"
									},
									"scope": 1822,
									"src": "31742:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										805
									],
									"body": {
										"id": 1774,
										"nodeType": "Block",
										"src": "31918:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1769,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "31935:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "31935:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1771,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "31947:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1768,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "31929:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31929:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1773,
												"nodeType": "ExpressionStatement",
												"src": "31929:25:0"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1766,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "31909:8:0"
									},
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "31884:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31883:16:0"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31918:0:0"
									},
									"scope": 1822,
									"src": "31870:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										812
									],
									"body": {
										"id": 1788,
										"nodeType": "Block",
										"src": "32041:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1784,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "32062:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1785,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "32072:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1783,
														"name": "_burnFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "32052:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32052:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1787,
												"nodeType": "ExpressionStatement",
												"src": "32052:28:0"
											}
										]
									},
									"functionSelector": "79cc6790",
									"id": 1789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1781,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32032:8:0"
									},
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "31988:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "32006:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31987:35:0"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32041:0:0"
									},
									"scope": 1822,
									"src": "31970:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1820,
										"nodeType": "Block",
										"src": "32159:232:0",
										"statements": [
											{
												"assignments": [
													1797
												],
												"declarations": [
													{
														"constant": false,
														"id": 1797,
														"mutability": "mutable",
														"name": "decreasedAllowance_",
														"nodeType": "VariableDeclaration",
														"scope": 1820,
														"src": "32170:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1796,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32170:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1807,
												"initialValue": {
													"arguments": [
														{
															"id": 1804,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1793,
															"src": "32236:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32245:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															},
															"value": "ERC20: burn amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1799,
																	"name": "account_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1791,
																	"src": "32210:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 1800,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "32220:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "32220:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1798,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "32200:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view returns (uint256)"
																}
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32200:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 882,
														"src": "32200:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32200:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32170:114:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1809,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "32306:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1810,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "32316:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32316:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1812,
															"name": "decreasedAllowance_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "32328:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1808,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "32297:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32297:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1814,
												"nodeType": "ExpressionStatement",
												"src": "32297:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1816,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "32365:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1817,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1793,
															"src": "32375:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1815,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "32359:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32359:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1819,
												"nodeType": "ExpressionStatement",
												"src": "32359:24:0"
											}
										]
									},
									"id": 1821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "32115:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32115:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "32133:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32114:35:0"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32159:0:0"
									},
									"scope": 1822,
									"src": "32096:295:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1823,
							"src": "31390:1004:0"
						}
					],
					"src": "379:32015:0"
				},
				"id": 0
			}
		}
	}
}